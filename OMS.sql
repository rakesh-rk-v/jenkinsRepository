-- SQLINES FOR EVALUATION USE ONLY (14 DAYS)
CREATE TABLE account_payment_ownership (
  OWNERSHIP_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OWNING_CUSTOMER_ID bigint NOT NULL,
  OWNING_NODE_ID bigint NOT NULL,
  OWNING_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  OWNING_BILLING_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (OWNERSHIP_ID)
) ;

/* SQLINES DEMO *** for table account_payment_ownership_details */

CREATE TABLE account_payment_ownership_details (
  OWNERSHIP_DETAILS_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OWNERSHIP_ID bigint NOT NULL,
  OWNERSHIP_TYPE int NOT NULL,
  OWNED_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  OWNED_SERVICE_ID bigint NOT NULL,
  OWNED_CONTRACT_ID bigint NOT NULL,
  OWNED_CHARGE_ID bigint NOT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  REASON text,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (OWNERSHIP_DETAILS_ID)
,
  CONSTRAINT APOD_FK1 FOREIGN KEY (OWNERSHIP_ID) REFERENCES account_payment_ownership (OWNERSHIP_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX APOD_FK1 ON account_payment_ownership_details (OWNERSHIP_ID);

/* SQLINES DEMO *** for table account_payment_ownership_details_hist */

CREATE TABLE account_payment_ownership_details_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OWNERSHIP_DETAILS_ID bigint NOT NULL,
  OWNERSHIP_ID bigint NOT NULL,
  OWNERSHIP_TYPE int NOT NULL,
  OWNED_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  OWNED_SERVICE_ID bigint NOT NULL,
  OWNED_CONTRACT_ID bigint NOT NULL,
  OWNED_CHARGE_ID bigint NOT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  REASON text,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

/* SQLINES DEMO *** for table account_payment_ownership_hist */

CREATE TABLE account_payment_ownership_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OWNERSHIP_ID bigint NOT NULL,
  OWNING_CUSTOMER_ID bigint NOT NULL,
  OWNING_NODE_ID bigint NOT NULL,
  OWNING_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  OWNING_BILLING_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
)  ;

ALTER SEQUENCE account_payment_ownership_hist_seq RESTART WITH 104;

/* SQLINES DEMO *** for table activity_alert_configurations */

CREATE TABLE activity_alert_configurations (
  ACT_ESC_CONF_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  ACTIVITY_ID bigint NOT NULL,
  ESCALATION_LEVEL smallint NOT NULL DEFAULT '1',
  ESCALATION_HOURS smallint NOT NULL DEFAULT '0',
  ESCALATION_USERS text NOT NULL,
  SLA_CATEGORY int NOT NULL DEFAULT '-1',
  DEPARTMENT smallint DEFAULT '-1',
  MESSAGE_TYPE varchar(10) DEFAULT NULL,
  MESSAGE_TEMPLATE_ID int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ACT_ESC_CONF_ID)
) ;

/* SQLINES DEMO *** for table activity_alert_transactions */

CREATE TABLE activity_alert_transactions (
  ACT_ESC_REC_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  ACT_ESC_CONF_ID bigint DEFAULT NULL,
  ACTIVITY_ID bigint DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint DEFAULT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  ESCALATION_DATETIME timestamp(0) DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(50) NOT NULL,
  CREATED_ON timestamp(0) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) NOT NULL,
  MODIFIED_ON timestamp(0) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ACT_ESC_REC_ID)
) ;

/* SQLINES DEMO *** for table activity_alerts_log */

CREATE TABLE activity_alerts_log (
  ACT_ESC_LOG_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  ACT_ESC_REC_ID bigint DEFAULT NULL,
  ACTIVITY_ID bigint DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  ESCALATION_LEVEL smallint DEFAULT NULL,
  ESCALATION_USERS text,
  ESC_USER_MOBILE_NO text,
  ESC_USER_EMAIL text,
  ESCALATION_DATETIME timestamp(0) DEFAULT NULL,
  NOTIFICATION_ID bigint DEFAULT NULL,
  NOTIFICATION_DATETIME timestamp(0) DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  PRIMARY KEY (ACT_ESC_LOG_ID)
) ;

/* SQLINES DEMO *** for table activity_approval_log */

CREATE TABLE activity_approval_log (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TRANSACTION_ID bigint NOT NULL,
  ACTIVITY_ID int NOT NULL,
  SUB_ACTIVITY_ID int NOT NULL,
  STEP_ID int NOT NULL,
  APPROVAL_LEVEL smallint NOT NULL DEFAULT '0',
  DEPARTMENT_ID int NOT NULL,
  SECTION_ID int NOT NULL,
  TRANS_IN_DATE timestamp(0) NOT NULL,
  TRANS_OUT_DATE timestamp(0) DEFAULT NULL,
  ACTION_PERFORMED_BY varchar(50) DEFAULT NULL,
  REMARKS text,
  REASON_CODE varchar(25) DEFAULT NULL,
  REASON_DESCRIPTION varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_DATE timestamp(0) NOT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_DATE timestamp(0) NOT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT AAL_FK1 FOREIGN KEY (TRANSACTION_ID) REFERENCES activity_transactions (TRANSACTION_ID)
) ;

CREATE INDEX AAL_FK1 ON activity_approval_log (TRANSACTION_ID);

/* SQLINES DEMO *** for table activity_orchestration */

CREATE TABLE activity_orchestration (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  ACTIVITY_AREA_ID int NOT NULL,
  ACTIVITY_AREA_NAME varchar(50) NOT NULL,
  ACTIVITY_TYPE_ID int NOT NULL,
  ACTIVITY_TYPE_NAME varchar(50) NOT NULL,
  CUSTOMER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_NODE_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_BA_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_WORKORDER_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_NODE_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_BRANCH_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_BA_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_WORKORDER_ID bigint NOT NULL DEFAULT '-1',
  ACTIVITY_ID int NOT NULL DEFAULT '-1',
  ACTIVITY_CODE varchar(10) DEFAULT NULL,
  SUB_ACTIVITY_ID int NOT NULL DEFAULT '-1',
  SUB_ACTIVITY_CODE varchar(10) DEFAULT NULL,
  STEP_ID int NOT NULL DEFAULT '-1',
  RESOURCE_ID int DEFAULT NULL,
  STEP_CODE varchar(10) DEFAULT NULL,
  PROCESS_ID varchar(255) DEFAULT NULL,
  PARENT_PROCESS_ID varchar(255) DEFAULT NULL,
  FINAL_APPROVAL_LEVEL smallint DEFAULT NULL,
  CURR_APPROVAL_LEVEL smallint DEFAULT NULL,
  PROCESS_START_DATETIME timestamp(0) DEFAULT NULL,
  PROCESS_END_DATETIME timestamp(0) DEFAULT NULL,
  SLA_APPLICABLE char(1) DEFAULT NULL,
  SLA_MET char(1) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE activity_orchestration_seq RESTART WITH 347;

/* SQLINES DEMO *** for table activity_orchestration_errors */

CREATE TABLE activity_orchestration_errors (
  ORC_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  RECORD_ID bigint NOT NULL,
  ERROR_CODE varchar(20) NOT NULL,
  ERROR_DESCRIPTION varchar(255) DEFAULT NULL,
  ERROR_DETECTION_DATE timestamp(0) DEFAULT NULL,
  ERROR_RESOLVED_DATE timestamp(0) DEFAULT NULL,
  RESOLUTION_REMARKS text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) NOT NULL,
  MODIFIED_BY varchar(50) NOT NULL,
  PRIMARY KEY (ORC_RECORD_ID)
,
  CONSTRAINT AOE_FK1 FOREIGN KEY (RECORD_ID) REFERENCES activity_orchestration (RECORD_ID)
) ;

CREATE INDEX AOE_FK1 ON activity_orchestration_errors (RECORD_ID);

/* SQLINES DEMO *** for table activity_transaction_details */

CREATE TABLE activity_transaction_details (
  TRANSACTION_DETAIL_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  TRANSACTION_ID bigint NOT NULL,
  PARAMETER_SEQEUNCE_NO int NOT NULL,
  PARAMETER_CODE varchar(25) NOT NULL,
  PARAMETER_NAME varchar(30) NOT NULL,
  PARAMETER_VALUE mediumtext,
  PARAMETER_SOURCE_TYPE char(2) DEFAULT NULL,
  PRIMARY KEY (TRANSACTION_DETAIL_ID)
,
  CONSTRAINT ATD_FK1 FOREIGN KEY (TRANSACTION_ID) REFERENCES activity_transactions (TRANSACTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX ATD_FK1 ON activity_transaction_details (TRANSACTION_ID);

/* SQLINES DEMO *** for table activity_transactions */

CREATE TABLE activity_transactions (
  TRANSACTION_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  APPLICATION_ID int NOT NULL,
  REQUEST_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL DEFAULT '0',
  NODE_ID bigint NOT NULL DEFAULT '0',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '0',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '0',
  ACTIVITY_ID int NOT NULL,
  SUB_ACTIVITY_ID int NOT NULL,
  STEP_ID int NOT NULL,
  VERSION_NO smallint NOT NULL DEFAULT '1',
  TRANS_CREATED_DATE timestamp(0) NOT NULL,
  TRANS_CREATED_BY varchar(50) DEFAULT NULL,
  APPROVAL_REQUIRED char(1) NOT NULL DEFAULT 'Y',
  APPROVED_LEVEL smallint DEFAULT NULL,
  FINAL_APPROVAL_LEVEL smallint NOT NULL,
  TRANS_MODIFIED_DATE timestamp(0) DEFAULT NULL,
  TRANS_APPROVED_BY varchar(50) DEFAULT NULL,
  TRANS_APPROVED_DATE timestamp(0) DEFAULT NULL,
  NO_OF_RETRIES smallint DEFAULT NULL,
  CURRENT_STEP_ID int DEFAULT NULL,
  LAST_STEP_ID int DEFAULT NULL,
  LAST_STEP_COMPLETED_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (TRANSACTION_ID)
,
  CONSTRAINT AT_FK1 FOREIGN KEY (REQUEST_ID) REFERENCES customer_requests (REQUEST_ID)
) ;

CREATE INDEX AT_FK1 ON activity_transactions (REQUEST_ID);

/* SQLINES DEMO *** for table activity_transactions_log */

CREATE TABLE activity_transactions_log (
  TRANS_LOG_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  TRANSACTION_ID bigint NOT NULL,
  TRANS_DATE timestamp(0) NOT NULL,
  TRANS_LEVEL smallint NOT NULL,
  TRANS_VERSION smallint NOT NULL,
  TRANS_CREATED_BY varchar(50) NOT NULL,
  REASON_CODE varchar(10) NOT NULL DEFAULT '1',
  REASON_DESCRIPTION varchar(255) NOT NULL DEFAULT '1',
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (TRANS_LOG_ID)
,
  CONSTRAINT ATL_FK1 FOREIGN KEY (TRANSACTION_ID) REFERENCES activity_transactions (TRANSACTION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX ATL_FK1 ON activity_transactions_log (TRANSACTION_ID);

/* SQLINES DEMO *** for table auto_replenishment_definitions */

CREATE TABLE auto_replenishment_definitions (
  REPL_DEF_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  PREPAID_CUSTOMER_ACCT_ID bigint NOT NULL,
  REPLENISHING_CUSTOMER_ID bigint NOT NULL,
  REPLENISHING_BA_ID bigint NOT NULL,
  REPLENISHING_CA_ID bigint DEFAULT NULL,
  REPLENISHING_OTHER_ID bigint DEFAULT NULL,
  REPLENISHING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_ACCOUNT_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_PREPAID_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_MIN_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_OF_REPLENISHMENT smallint NOT NULL DEFAULT '11',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REPL_DEF_RECORD_ID)
) ;

/* SQLINES DEMO *** for table auto_replenishment_definitions_hist */

CREATE TABLE auto_replenishment_definitions_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REPL_DEF_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  PREPAID_CUSTOMER_ACCT_ID bigint NOT NULL,
  REPLENISHING_CUSTOMER_ID bigint NOT NULL,
  REPLENISHING_BA_ID bigint NOT NULL,
  REPLENISHING_CA_ID bigint DEFAULT NULL,
  REPLENISHING_OTHER_ID bigint DEFAULT NULL,
  REPLENISHING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_ACCOUNT_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_PREPAID_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_MIN_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_OF_REPLENISHMENT smallint NOT NULL DEFAULT '11',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

/* SQLINES DEMO *** for table auto_replenishment_errors */

CREATE TABLE auto_replenishment_errors (
  REPL_ERROR_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REPLENISHMENT_DATE date NOT NULL,
  REPLENISHMENT_COUNT bigint NOT NULL,
  REPL_DEF_RECORD_ID bigint NOT NULL,
  REPLENISHING_CA_ID bigint DEFAULT NULL,
  ERROR_CODE varchar(20) NOT NULL,
  ERROR_DESCRIPTION text NOT NULL,
  REPL_RUN_RECORD_ID bigint NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REPL_ERROR_RECORD_ID)
,
  CONSTRAINT ARE_FK1 FOREIGN KEY (REPL_DEF_RECORD_ID) REFERENCES auto_replenishment_definitions (REPL_DEF_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX ARE_FK1 ON auto_replenishment_errors (REPL_DEF_RECORD_ID);

/* SQLINES DEMO *** for table auto_replenishment_last_ca */

CREATE TABLE auto_replenishment_last_ca (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REPLENISHMENT_DATE date NOT NULL,
  REPL_RUN_RECORD_ID bigint NOT NULL,
  PREPAID_CUSTOMER_ACCT_ID bigint DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT ARLCA_FK1 FOREIGN KEY (REPL_RUN_RECORD_ID) REFERENCES auto_replenishment_run_control (REPL_RUN_RECORD_ID)
) ;

CREATE INDEX ARLCA_FK1 ON auto_replenishment_last_ca (REPL_RUN_RECORD_ID);

/* SQLINES DEMO *** for table auto_replenishment_run_control */

CREATE TABLE auto_replenishment_run_control (
  REPL_RUN_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REPLENISHMENT_DATE date NOT NULL,
  DAY_CYCLE int NOT NULL DEFAULT '1',
  TOTAL_ELIGIBLE_CA int NOT NULL DEFAULT '1',
  TOTAL_REPL_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  ACTUAL_ELIGIBLE_CA int NOT NULL DEFAULT '1',
  ACTUAL_REPL_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  ACTUAL_DEBITED_AMOUNT decimal(10,2) DEFAULT '0.00',
  TOTAL_REPL_FAILED int DEFAULT NULL,
  RUN_START_DATETIME timestamp(0) NOT NULL,
  RUN_END_DATETIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REPL_RUN_RECORD_ID)
) ;

/* SQLINES DEMO *** for table auto_replenishments */

CREATE TABLE auto_replenishments (
  REPL_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REPLENISHMENT_DATE date NOT NULL,
  REPLENISHMENT_COUNT bigint NOT NULL,
  REPL_DEF_RECORD_ID bigint NOT NULL,
  REPLENISHING_CA_ID bigint DEFAULT NULL,
  REPLENISHING_AMOUNT decimal(10,2) DEFAULT '0.00',
  IS_REPLENISHMENT_PARTIAL char(1) DEFAULT 'N',
  REPL_RUN_RECORD_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REPL_RECORD_ID),
  CONSTRAINT AR_FK1 FOREIGN KEY (REPL_RECORD_ID) REFERENCES auto_replenishment_run_control (REPL_RUN_RECORD_ID)
) ;

/* SQLINES DEMO *** for table bill_late_payment_eligibility_charges */

CREATE TABLE bill_late_payment_eligibility_charges (
  RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  APPLICABLE_FOR char(1) NOT NULL DEFAULT 'C',
  CUSTOMER_TYPE varchar(15) DEFAULT NULL,
  CUSTOMER_SUB_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_SEGMENT varchar(50) DEFAULT NULL,
  CUSTOMER_CATEGORY varchar(25) DEFAULT NULL,
  BILL_FREQUENCY varchar(15) NOT NULL DEFAULT 'MONTHLY',
  CHARGE_ID bigint NOT NULL,
  CHARGE_DESCRIPTION varchar(75) DEFAULT NULL,
  LATE_FEE_CODE varchar(10) NOT NULL,
  LATE_FEE_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table bill_sample_eligibility_criteria */

CREATE TABLE bill_sample_eligibility_criteria (
  CRITERIA_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_TYPE varchar(30) NOT NULL,
  VERSION_NO int NOT NULL DEFAULT '1',
  CRITERIA_CODE varchar(30) NOT NULL,
  CRITERIA_DESCRIPTION varchar(200) DEFAULT NULL,
  RULE_ID int DEFAULT NULL,
  MINIMUM_CUSTOMERS int DEFAULT NULL,
  MINIMUM_BILLING_ACCOUNTS int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CRITERIA_ID)
) ;

/* SQLINES DEMO *** for table bill_sample_run */

CREATE TABLE bill_sample_run (
  SAMPLE_RUN_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  BILL_CYCLE_ID varchar(10) NOT NULL,
  SAMPLE_BILL_CYCLE_ID varchar(10) NOT NULL,
  BILL_START_DATE date NOT NULL,
  BILL_END_DATE date NOT NULL,
  TOTAL_CUSTOMERS int DEFAULT NULL,
  TOTAL_BILLING_ACCOUNTS int DEFAULT NULL,
  SAMPLE_BILL_RUN_APPROVED_BY varchar(50) DEFAULT NULL,
  SAMPLE_BILL_RUN_APPROVED_DATE date NOT NULL,
  SAMPLE_BILL_RUN_DATE date NOT NULL,
  VERSION smallint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (SAMPLE_RUN_ID)
) ;

CREATE INDEX BSR_FK1 ON bill_sample_run (BILL_CYCLE_ID);
CREATE INDEX BSR_UK1 ON bill_sample_run (SAMPLE_BILL_CYCLE_ID,BILL_START_DATE,BILL_END_DATE,VERSION);

/* SQLINES DEMO *** for table bill_sample_run_customers */

CREATE TABLE bill_sample_run_customers (
  RECORD_ID int NOT NULL,
  SAMPLE_RUN_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CRITERIA_ID int NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  PROCESSED_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT BSRC_FK1 FOREIGN KEY (SAMPLE_RUN_ID) REFERENCES bill_sample_run (SAMPLE_RUN_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX BSRC_FK1 ON bill_sample_run_customers (SAMPLE_RUN_ID);

/* SQLINES DEMO *** for table billing_accounts */

CREATE TABLE billing_accounts (
  BILLING_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  TNT_BILLING_ACCOUNT_ID varchar(25) DEFAULT NULL,
  BILLING_ACCOUNT_NAME varchar(50)  NOT NULL DEFAULT '-1' COMMENT 'To Identify the Billing Account Name for Postpaid Customer',
  DELIVERY_MODE smallint NOT NULL DEFAULT '1',
  IS_AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_TAX_EXEMPT char(1) DEFAULT 'N',
  ADDL_COL1 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL2 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL3 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (BILLING_ACCOUNT_ID)
,
  CONSTRAINT BA_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX BA_FK1 ON billing_accounts (CUSTOMER_ID);

/* SQLINES DEMO *** for table billing_accounts_hist */

CREATE TABLE billing_accounts_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  TNT_BILLING_ACCOUNT_ID varchar(25) DEFAULT '-1' COMMENT 'To Identify the Tenant wise Specific Billing Account for Postpaid Customer',
  BILLING_ACCOUNT_NAME varchar(50) NOT NULL COMMENT 'To Identify the Billing Account Name for Postpaid Customer',
  DELIVERY_MODE smallint NOT NULL DEFAULT '1',
  IS_AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_TAX_EXEMPT char(1) DEFAULT 'N',
  ADDL_COL1 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL2 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL3 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT UK_BA UNIQUE (BILLING_ACCOUNT_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE billing_accounts_hist_seq RESTART WITH 4;

/* SQLINES DEMO *** for table campaign_allowed_status */

CREATE TABLE campaign_allowed_status (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CURRENT_STATUS smallint NOT NULL,
  ALLOWED_STATUS varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE campaign_allowed_status_seq RESTART WITH 9;

/* SQLINES DEMO *** for table campaign_configurations */

CREATE TABLE campaign_configurations (
  CONFIG_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CODE varchar(30) DEFAULT NULL,
  NAME varchar(225) DEFAULT NULL,
  DESCRIPTION varchar(765) DEFAULT NULL,
  CONFIG_VALUE varchar(450) DEFAULT NULL,
  CONFIG_VALUE_TYPE varchar(30) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (CONFIG_ID)
)  ;

ALTER SEQUENCE campaign_configurations_seq RESTART WITH 1002;

/* SQLINES DEMO *** for table campaign_default_tasks */

CREATE TABLE campaign_default_tasks (
  TASK_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_TYPE varchar(25) NOT NULL,
  TASK_SLNO varchar(10) DEFAULT NULL,
  TASK_NAME varchar(100) DEFAULT NULL,
  TASK_DESCRIPTION text,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (TASK_ID)
) ;

/* SQLINES DEMO *** for table campaign_details */

CREATE TABLE campaign_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CD_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID)
) ;

CREATE INDEX CD_FK1 ON campaign_details (CAMPAIGN_ID);

/* SQLINES DEMO *** for table campaign_parameters */

CREATE TABLE campaign_parameters (
  PARAMETER_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  USAGE_TYPE char(1) NOT NULL DEFAULT 'F',
  PARAMETER_SEQEUNCE_NO int NOT NULL,
  PARAMETER_CODE varchar(20) NOT NULL DEFAULT '-1',
  PARAMETER_TYPE varchar(25) NOT NULL,
  PARAMETER_NAME varchar(30) NOT NULL,
  PARAMETER_VALUE varchar(30) DEFAULT NULL,
  PARAMETER_OPERATOR varchar(25) NOT NULL,
  PARAMETER_MANDATORY char(1) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (PARAMETER_ID)
) ;

/* SQLINES DEMO *** for table campaign_region_channels */

CREATE TABLE campaign_region_channels (
  CAMPAIGN_REG_CH_ID bigint NOT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_REGION_ID bigint NOT NULL,
  CAMPAIGN_CHANNEL_NAME varchar(30) DEFAULT NULL,
  CAMPAIGN_MATERIAL_LINK varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_REG_CH_ID),
  CONSTRAINT CRC_UK1 UNIQUE (CAMPAIGN_REG_CH_ID,CAMPAIGN_ID,CAMPAIGN_REGION_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CRC_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID),
  CONSTRAINT CRC_FK2 FOREIGN KEY (CAMPAIGN_REGION_ID) REFERENCES campaign_regions (CAMPAIGN_REGION_ID)
) ;

CREATE INDEX CRC_FK1 ON campaign_region_channels (CAMPAIGN_ID);
CREATE INDEX CRC_FK2 ON campaign_region_channels (CAMPAIGN_REGION_ID);

/* SQLINES DEMO *** for table campaign_region_offers */

CREATE TABLE campaign_region_offers (
  CAMPAIGN_REG_OFR_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CAMPAIGN_REGION_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  OFFER_ID int DEFAULT NULL,
  ALTERNATE_OFFER_ID int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_REG_OFR_ID),
  CONSTRAINT CROFR_UK1 UNIQUE (CAMPAIGN_ID,CAMPAIGN_REGION_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CROFR_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID),
  CONSTRAINT CROFR_FK2 FOREIGN KEY (CAMPAIGN_REGION_ID) REFERENCES campaign_regions (CAMPAIGN_REGION_ID)
) ;

CREATE INDEX CROFR_FK2 ON campaign_region_offers (CAMPAIGN_REGION_ID);

/* SQLINES DEMO *** for table campaign_regions */

CREATE TABLE campaign_regions (
  CAMPAIGN_REGION_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  CAMPAIGN_REGION_NAME varchar(30) DEFAULT NULL,
  CAMPAIGN_TIER_NAME varchar(30) NOT NULL,
  REGION_TARGET varchar(100) DEFAULT NULL,
  REGION_TARGET_ACHIEVED varchar(100) DEFAULT NULL,
  REGION_BUDGET decimal(12,5) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_REGION_ID),
  CONSTRAINT CMPR_UK1 UNIQUE (CAMPAIGN_ID,CAMPAIGN_REGION_ID,EFFECTIVE_FROM),
  CONSTRAINT CMPR_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID)
) ;

/* SQLINES DEMO *** for table campaign_segment_channels */

CREATE TABLE campaign_segment_channels (
  CAMPAIGN_SEG_CH_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  CAMPAIGN_SEG_ID bigint NOT NULL,
  CAMPAIGN_CHANNEL_NAME varchar(30) DEFAULT NULL,
  CAMPAIGN_MATERIAL_LINK varchar(100) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (CAMPAIGN_SEG_CH_ID),
  CONSTRAINT CMP_SEG_CH_UK1 UNIQUE (CAMPAIGN_SEG_CH_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CMP_SEG_CH_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID),
  CONSTRAINT CMP_SEG_CH_FK2 FOREIGN KEY (CAMPAIGN_SEG_ID) REFERENCES campaign_segments (CAMPAIGN_SEG_ID)
) ;

CREATE INDEX CMP_SEG_CH_FK1 ON campaign_segment_channels (CAMPAIGN_ID);
CREATE INDEX CMP_SEG_CH_FK2 ON campaign_segment_channels (CAMPAIGN_SEG_ID);

/* SQLINES DEMO *** for table campaign_segment_offers */

CREATE TABLE campaign_segment_offers (
  CAMPAIGN_SEG_OFR_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CAMPAIGN_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_SEG_ID bigint NOT NULL,
  OFFER_ID int DEFAULT NULL,
  ALTERNATE_OFFER_ID int DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (CAMPAIGN_SEG_OFR_ID),
  CONSTRAINT CSOFR_UK1 UNIQUE (CAMPAIGN_ID,CAMPAIGN_SEG_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CSOFR_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID),
  CONSTRAINT CSOFR_FK2 FOREIGN KEY (CAMPAIGN_SEG_ID) REFERENCES campaign_segments (CAMPAIGN_SEG_ID)
) ;

CREATE INDEX CSOFR_FK2 ON campaign_segment_offers (CAMPAIGN_SEG_ID);

/* SQLINES DEMO *** for table campaign_segments */

CREATE TABLE campaign_segments (
  CAMPAIGN_SEG_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  CAMPAIGN_SEGMENT_NAME varchar(30) DEFAULT NULL,
  SEGMENT_TARGET varchar(100) DEFAULT NULL,
  SEGMENT_TARGET_ACHIEVED varchar(100) DEFAULT NULL,
  SEGMENT_BUDGET decimal(12,5) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_SEG_ID),
  CONSTRAINT CMP_SEG_UK1 UNIQUE (CAMPAIGN_SEG_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CMP_SEG_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID)
) ;

CREATE INDEX CMP_SEG_FK1 ON campaign_segments (CAMPAIGN_ID);

/* SQLINES DEMO *** for table campaign_targets */

CREATE TABLE campaign_targets (
  CAMPAIGN_TARGET_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  TARGET_FOR varchar(25) NOT NULL,
  TARGET varchar(100) DEFAULT NULL,
  TARGET_ACHIEVED varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_TARGET_ID),
  CONSTRAINT CMP_TAR_UK1 UNIQUE (CAMPAIGN_TARGET_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CMP_TAR_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID)
) ;

CREATE INDEX CMP_TAR_FK1 ON campaign_targets (CAMPAIGN_ID);

/* SQLINES DEMO *** for table campaign_task_status */

CREATE TABLE campaign_task_status (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  STATUS_CODE varchar(10) NOT NULL,
  STATUS_NAME varchar(100) NOT NULL,
  STATUS_VALUE smallint NOT NULL,
  ACTIVITY_CODE varchar(20) DEFAULT NULL,
  SUB_ACTIVITY_CODE varchar(20) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE campaign_task_status_seq RESTART WITH 9;

/* SQLINES DEMO *** for table campaign_tasks */

CREATE TABLE campaign_tasks (
  CAMPAIGN_TASK_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_ID bigint NOT NULL,
  TASK_SLNO varchar(10) DEFAULT NULL,
  TASK_NAME varchar(100) DEFAULT NULL,
  TASK_DESCRIPTION text,
  TASK_START_DATE timestamp(0) DEFAULT NULL,
  TASK_END_DATE timestamp(0) DEFAULT NULL,
  ASSIGNED_USERS text,
  TASK_BUDGET decimal(12,5) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (CAMPAIGN_TASK_ID)
,
  CONSTRAINT CMPT_FK1 FOREIGN KEY (CAMPAIGN_ID) REFERENCES campaigns (CAMPAIGN_ID)
) ;

CREATE INDEX CMPT_FK1 ON campaign_tasks (CAMPAIGN_ID);

/* SQLINES DEMO *** for table campaigns */

CREATE TABLE campaigns (
  CAMPAIGN_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CAMPAIGN_NAME varchar(30) DEFAULT NULL,
  CAMPAIGN_FOR varchar(30) DEFAULT NULL,
  CAMPAIGN_START_DATE date DEFAULT NULL,
  CAMPAIGN_END_DATE date DEFAULT NULL,
  CAMPAIGN_BUDGET decimal(12,5) DEFAULT NULL,
  CUSTOMER_TYPE varchar(30) NOT NULL,
  CUSTOMER_SEGMENT text NOT NULL,
  CUSTOMER_SUB_TYPE varchar(30) NOT NULL,
  CUSTOMER_REGION varchar(30) NOT NULL,
  CUSTOMER_TIER varchar(30) NOT NULL,
  ACCOUNT_TYPE varchar(20) NOT NULL,
  PLAN_FREQUENCY varchar(30) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CAMPAIGN_ID)
) ;

/* SQLINES DEMO *** for table channel_details */

CREATE TABLE channel_details (
  CHANNEL_ID bigint NOT NULL,
  CHANNEL_CODE varchar(20) NOT NULL,
  CHANNEL_NAME varchar(100) NOT NULL,
  CHANNEL_ADDRESS varchar(255) NOT NULL,
  PAYMENT_GATEWAY_TOKEN varchar(255) DEFAULT NULL,
  ACCESS_URL varchar(100) NOT NULL,
  REQUEST_URL varchar(100) NOT NULL,
  REQUEST_DETAILS text,
  RESPONSE_DETAILS text,
  RESPONSE_URL varchar(100) NOT NULL,
  CHANNEL_CREATION_DATE date DEFAULT NULL,
  CHANNEL_STATUS smallint NOT NULL,
  VERSION int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL,
  REMARKS text,
  CHANNEL_IMAGE_BASE64 text,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CHANNEL_ID)
) ;

/* SQLINES DEMO *** for table channel_response_details */

CREATE TABLE channel_response_details (
  CHANNEL_ID bigint NOT NULL,
  RESPONSE_CODE varchar(100) DEFAULT NULL,
  DESCRIPTION varchar(255) DEFAULT NULL,
  STATUS_INDICATOR varchar(25) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL,
  PRIMARY KEY (CHANNEL_ID),
  CONSTRAINT channel_resp_dtls_fk1 FOREIGN KEY (CHANNEL_ID) REFERENCES channel_details (CHANNEL_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

/* SQLINES DEMO *** for table com_configurations */

CREATE TABLE com_configurations (
  CONFIG_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  CODE varchar(15) DEFAULT NULL,
  NAME varchar(75) NOT NULL,
  DESCRIPTION varchar(255) DEFAULT NULL,
  CONFIG_VALUE varchar(500) DEFAULT NULL,
  CONFIG_VALUE_TYPE varchar(10) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (CONFIG_ID)
)  ;

ALTER SEQUENCE com_configurations_seq RESTART WITH 874;

/* SQLINES DEMO *** for table contract_charge_taxes */

CREATE TABLE contract_charge_taxes (
  CHARGE_TAX_RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  CHARGE_RECORD_ID bigint NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  TAX_ID bigint NOT NULL,
  TAX_TYPE char(1) NOT NULL,
  TAX_TYPE_VALUE decimal(10,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CHARGE_TAX_RECORD_ID)
,
  CONSTRAINT CNTR_CT_FK1 FOREIGN KEY (CHARGE_RECORD_ID) REFERENCES contract_charges (CHARGE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CNTR_CT_FK1 ON contract_charge_taxes (CHARGE_RECORD_ID);

/* SQLINES DEMO *** for table contract_charges */

CREATE TABLE contract_charges (
  CHARGE_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_LEVEL varchar(25) DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(5,2) DEFAULT NULL,
  CHARGE_DESCRIPTION varchar(255) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CHARGE_RECORD_ID)
) ;

CREATE INDEX idx_1_cc ON contract_charges (CUSTOMER_ACCOUNT_ID);
CREATE INDEX idx_2_cc ON contract_charges (CUSTOMER_ACCOUNT_ID);
CREATE INDEX idx_3_cc ON contract_charges (CHARGE_DATE);
CREATE INDEX idx_4_cc ON contract_charges (TENANT_ID,PARTNER_ID);

/* SQLINES DEMO *** for table contract_charges_details */

CREATE TABLE contract_charges_details (
  DETAIL_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CHARGE_RECORD_ID bigint NOT NULL,
  CHARGE_ID int NOT NULL,
  PARAMETER_RECORD_ID int NOT NULL,
  PARAMETER_NAME varchar(30) NOT NULL,
  PARAMETER_VALUE_TYPE varchar(25) NOT NULL,
  UNIT_OF_CHARGE smallint DEFAULT NULL,
  NO_OF_UNITS decimal(10,5) DEFAULT '0.00000',
  CHARGE_UNIT decimal(10,5) DEFAULT '0.00000',
  PARAMETER_VALUE varchar(255) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  PRIMARY KEY (DETAIL_RECORD_ID)
,
  CONSTRAINT CCD_FK1 FOREIGN KEY (CHARGE_RECORD_ID) REFERENCES contract_charges (CHARGE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CCD_FK1 ON contract_charges_details (CHARGE_RECORD_ID);

/* SQLINES DEMO *** for table contract_device_installment */

CREATE TABLE contract_device_installment (
  RECORD_ID bigint NOT NULL,
  CONTRACT_DEVICE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  EMI_AMOUNT decimal(7,2) DEFAULT '0.00',
  TOTAL_EMI_COUNT int check (TOTAL_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  COMPLETED_EMI_COUNT int check (COMPLETED_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  EMI_START_MONTH int check (EMI_START_MONTH > 0) DEFAULT NULL,
  EMI_END_MONTH int check (EMI_END_MONTH > 0) DEFAULT NULL,
  EMI_LAST_MONTH int check (EMI_LAST_MONTH > 0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CNTR_DEVICE_INST_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,CONTRACT_DEVICE_ID)
,
  CONSTRAINT CNTR_DEVICE_INST_FK1 FOREIGN KEY (CONTRACT_DEVICE_ID) REFERENCES contract_devices (CONTRACT_DEVICE_ID)
) ;

CREATE INDEX CNTR_DEVICE_INST_FK1 ON contract_device_installment (CONTRACT_DEVICE_ID);

/* SQLINES DEMO *** for table contract_device_installment_hist */

CREATE TABLE contract_device_installment_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  RECORD_ID bigint NOT NULL,
  CONTRACT_DEVICE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  EMI_AMOUNT decimal(7,2) DEFAULT '0.00',
  TOTAL_EMI_COUNT int check (TOTAL_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  COMPLETED_EMI_COUNT int check (COMPLETED_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  EMI_START_MONTH int check (EMI_START_MONTH > 0) DEFAULT NULL,
  EMI_END_MONTH int check (EMI_END_MONTH > 0) DEFAULT NULL,
  EMI_LAST_MONTH int check (EMI_LAST_MONTH > 0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CNTR_DEVICE_INST_HIS_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,CONTRACT_DEVICE_ID)
) ;

/* SQLINES DEMO *** for table contract_devices */

CREATE TABLE contract_devices (
  CONTRACT_DEVICE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint DEFAULT '-1',
  LOB_ID int NOT NULL,
  SLOT_RECORD_ID bigint DEFAULT '-1',
  DEVICE_LEASE_TYPE char(1) NOT NULL DEFAULT 'N',
  DEVICE_LOCATION varchar(255) DEFAULT NULL,
  RESOURCE_OWN_TYPE smallint DEFAULT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  IS_PRIMARY_RESOURCE char(1) DEFAULT 'N' COMMENT 'To Identify the Resource is Primary or not',
  RESOURCE_ATTRIBUTES text COMMENT 'To store the Resource level attributes',
  RESOURCE_ID int DEFAULT NULL,
  RES_MODEL_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  RESOURCE_CATEGORY int DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTRACT_DEVICE_ID)
,
  CONSTRAINT CNTR_DEVICES_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CNTR_DEVICES_FK1 ON contract_devices (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table contract_devices_hist */

CREATE TABLE contract_devices_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CONTRACT_DEVICE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint DEFAULT '-1',
  LOB_ID int NOT NULL,
  SLOT_RECORD_ID bigint DEFAULT '-1',
  DEVICE_LEASE_TYPE char(1) NOT NULL DEFAULT 'N',
  DEVICE_LOCATION varchar(255) DEFAULT NULL,
  RESOURCE_OWN_TYPE smallint DEFAULT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  IS_PRIMARY_RESOURCE char(1) DEFAULT 'N' COMMENT 'To Identify the Resource is Primary or not',
  RESOURCE_ATTRIBUTES text COMMENT 'To store the Resource level attributes',
  RESOURCE_ID int DEFAULT NULL,
  RES_MODEL_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  RESOURCE_CATEGORY int DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CNTR_DEVICES_UK1 UNIQUE (CONTRACT_DEVICE_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE contract_devices_hist_seq RESTART WITH 32;

/* SQLINES DEMO *** for table contract_discounts */

CREATE TABLE contract_discounts (
  CUSTOMER_DISC_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint DEFAULT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  DISCOUNT_ID bigint NOT NULL,
  DISCOUNT_PERIOD int DEFAULT NULL,
  DISCOUNT_START_DATE date DEFAULT NULL,
  DISCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_DISC_ID)
,
  CONSTRAINT CNTR_DISC_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CNTR_DISC_FK1 ON contract_discounts (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table contract_discounts_hist */

CREATE TABLE contract_discounts_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_DISC_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint DEFAULT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  DISCOUNT_ID bigint NOT NULL,
  DISCOUNT_PERIOD int DEFAULT NULL,
  DISCOUNT_START_DATE date DEFAULT NULL,
  DISCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

/* SQLINES DEMO *** for table contract_offers */

CREATE TABLE contract_offers (
  CONTRACT_OFFER_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint DEFAULT NULL,
  OFFER_ID bigint NOT NULL,
  OFFER_PERIOD int DEFAULT NULL,
  OFFER_START_DATE date DEFAULT NULL,
  OFFER_END_DATE date DEFAULT NULL,
  OFFER_CONTRACT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTRACT_OFFER_ID)
,
  CONSTRAINT CNTR_OFFER_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CNTR_OFFER_FK2 ON contract_offers (CUSTOMER_ID);
CREATE INDEX CNTR_OFFER_FK1 ON contract_offers (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table contract_offers_hist */

CREATE TABLE contract_offers_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CONTRACT_OFFER_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint DEFAULT NULL,
  OFFER_ID bigint NOT NULL,
  OFFER_PERIOD int DEFAULT NULL,
  OFFER_START_DATE date DEFAULT NULL,
  OFFER_END_DATE date DEFAULT NULL,
  OFFER_CONTRACT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

/* SQLINES DEMO *** for table contract_override_onetime_charges */

CREATE TABLE contract_override_onetime_charges (
  OVERRIDE_ONETIME_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (OVERRIDE_ONETIME_CHARGE_ID)
,
  CONSTRAINT COOTC_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

CREATE INDEX idx_cooc ON contract_override_onetime_charges (CUSTOMER_ACCOUNT_ID,CUSTOMER_ID,RATE_PLAN_ID,CHARGE_DATE);
CREATE INDEX COOTC_FK1 ON contract_override_onetime_charges (CUSTOMER_CONTRACT_ID);

/* SQLINES DEMO *** for table contract_override_onetime_charges_hist */

CREATE TABLE contract_override_onetime_charges_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OVERRIDE_ONETIME_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

CREATE INDEX idx_COOCH ON contract_override_onetime_charges_hist (CUSTOMER_ACCOUNT_ID,CUSTOMER_ID,RATE_PLAN_ID,CHARGE_DATE);

/* SQLINES DEMO *** for table contract_override_recurring_charges */

CREATE TABLE contract_override_recurring_charges (
  OVERRIDE_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  CHARGE_PER_DAY decimal(7,2) DEFAULT '0.00',
  TAX_PER_DAY decimal(7,2) DEFAULT '0.00',
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (OVERRIDE_CHARGE_ID)
,
  CONSTRAINT CORC_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

CREATE INDEX idx_CORC ON contract_override_recurring_charges (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID);
CREATE INDEX CORC_FK1 ON contract_override_recurring_charges (CUSTOMER_CONTRACT_ID);

/* SQLINES DEMO *** for table contract_override_recurring_charges_hist */

CREATE TABLE contract_override_recurring_charges_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  OVERRIDE_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  CHARGE_PER_DAY decimal(7,2) DEFAULT '0.00',
  TAX_PER_DAY decimal(7,2) DEFAULT '0.00',
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

CREATE INDEX idx_CORCH ON contract_override_recurring_charges_hist (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID);

/* SQLINES DEMO *** for table contract_service_package_details */

CREATE TABLE contract_service_package_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_NAME varchar(50) DEFAULT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table contract_service_packages */

CREATE TABLE contract_service_packages (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  LOB_ID int DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  PACKAGE_TYPE varchar(10) DEFAULT 'SERVICE',
  SERVICE_ID bigint NOT NULL,
  IS_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  SP_END_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  SUSPENSION_DATE date DEFAULT NULL,
  RESUME_DATE date DEFAULT NULL,
  IS_CHARGE_OVERRIDEN smallint NOT NULL DEFAULT '0',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CNTR_SP_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,EFFECTIVE_FROM,SERVICE_PACKAGE_ID)
,
  CONSTRAINT CNTR_SP_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

CREATE INDEX idx_cntr_SP1 ON contract_service_packages (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,EFFECTIVE_FROM,EFFECTIVE_TO);
CREATE INDEX idx_cntr_sp2 ON contract_service_packages (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO);

/* SQLINES DEMO *** for table contract_service_packages_hist */

CREATE TABLE contract_service_packages_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  RECORD_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  LOB_ID int DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  PACKAGE_TYPE varchar(10) DEFAULT 'SERVICE',
  SERVICE_ID bigint NOT NULL,
  IS_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  SP_END_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  SUSPENSION_DATE date DEFAULT NULL,
  RESUME_DATE date DEFAULT NULL,
  IS_CHARGE_OVERRIDEN smallint NOT NULL DEFAULT '0',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CNTR_SP_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,EFFECTIVE_FROM,SERVICE_PACKAGE_ID)
)  ;

ALTER SEQUENCE contract_service_packages_hist_seq RESTART WITH 377;

CREATE INDEX idx_cntr_SP1 ON contract_service_packages_hist (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,EFFECTIVE_FROM,EFFECTIVE_TO);
CREATE INDEX idx_cntr_sp2 ON contract_service_packages_hist (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO);

/* SQLINES DEMO *** for table credit_rating_bands */

CREATE TABLE credit_rating_bands (
  CREDIT_RATING_BAND_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  BAND_START_VALUE decimal(7,2) DEFAULT NULL,
  BAND_END_VALUE decimal(7,2) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CREDIT_RATING_BAND_ID)
) ;

/* SQLINES DEMO *** for table cug_plan */

CREATE TABLE cug_plan (
  CUG_GROUP_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  GROUP_TYPE varchar(15) DEFAULT NULL COMMENT 'To Identify the customer group type like CUG/FnF',
  ALLOWED_GROUP_COUNT smallint DEFAULT '0' COMMENT 'To Identify how many customer are allowed to add',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUG_GROUP_ID)
,
  CONSTRAINT CUG_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CUG_FK1 ON cug_plan (CUSTOMER_ID);

/* SQLINES DEMO *** for table cug_plan_hist */

CREATE TABLE cug_plan_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUG_GROUP_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  GROUP_TYPE varchar(15) DEFAULT NULL COMMENT 'To Identify the customer group type like CUG/FnF',
  ALLOWED_GROUP_COUNT smallint DEFAULT '0' COMMENT 'To Identify how many customer are allowed to add',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CUG_PLN_HIS_UK1 UNIQUE (CUG_GROUP_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table cug_plan_mapping */

CREATE TABLE cug_plan_mapping (
  MAPPING_RECORD_ID bigint NOT NULL,
  CUG_GROUP_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_RECORD_ID)
,
  CONSTRAINT CPM_FK1 FOREIGN KEY (CUG_GROUP_ID) REFERENCES cug_plan (CUG_GROUP_ID)
) ;

CREATE INDEX CPM_FK1 ON cug_plan_mapping (CUG_GROUP_ID);

/* SQLINES DEMO *** for table cug_plan_mapping_hist */

CREATE TABLE cug_plan_mapping_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  MAPPING_RECORD_ID bigint NOT NULL,
  CUG_GROUP_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CPMH_UK1 UNIQUE (MAPPING_RECORD_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE cug_plan_mapping_hist_seq RESTART WITH 2;

/* SQLINES DEMO *** for table cust_preferred_contact_time */

CREATE TABLE cust_preferred_contact_time (
  CUST_PREFERRED_TIME bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CONTACT_MAPPING_ID bigint NOT NULL,
  TYPE varchar(100) DEFAULT NULL,
  DAY_CODE int DEFAULT NULL,
  FROM_TIME time(0) DEFAULT NULL,
  TO_TIME time(0) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUST_PREFERRED_TIME)
)  ;

ALTER SEQUENCE cust_preferred_contact_time_seq RESTART WITH 81;

/* SQLINES DEMO *** for table customer_acc_mgr_mapping */

CREATE TABLE customer_acc_mgr_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  USER_ID int NOT NULL,
  USER_NAME varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REMARKS text,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) NOT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CAMM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CAMM_FK1 ON customer_acc_mgr_mapping (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_account_balances */

CREATE TABLE customer_account_balances (
  ACCOUNT_BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  BALANCE_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  USED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_UPDATE_TYPE varchar(10) DEFAULT NULL,
  LAST_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_CREDIT_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_DEBIT_DATE timestamp(0) DEFAULT NULL,
  LAST_DEBIT_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_EOD_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_EOD_TRANS_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_ACC_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (ACCOUNT_BALANCE_ID),
  CONSTRAINT CUSTOMER_ID UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID)
,
  CONSTRAINT CAB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CAB_FK1 ON customer_account_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_account_details */

CREATE TABLE customer_account_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CAD_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CAD_FK1 ON customer_account_details (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_accounts */

CREATE TABLE customer_accounts (
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_DATE date DEFAULT NULL,
  CUSTOMER_ACCOUNT_NAME varchar(150) DEFAULT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(20) NOT NULL,
  TNT_ACCOUNT_ID varchar(25) DEFAULT NULL,
  CUSTOMER_RELATIONSHIP varchar(100) DEFAULT NULL,
  ID_TYPE varchar(30) DEFAULT NULL COMMENT 'customer specific identity type like NIN,Passport',
  ID_TYPE_VALUE varchar(25) DEFAULT NULL COMMENT 'customer specific identity Number',
  DURATION smallint DEFAULT NULL,
  DURATION_UNIT smallint DEFAULT NULL,
  RENEWAL_TYPE smallint DEFAULT NULL,
  SALES_CHANNEL varchar(100) DEFAULT NULL,
  CHANNEL_CODE varchar(50) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  IS_EKYC_COLLECTED char(1) DEFAULT 'N',
  CUSTOMER_DECLARATION char(1) NOT NULL DEFAULT 'N',
  PREFERRED_COMM_CHANNEL varchar(15) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_CUG char(1) NOT NULL DEFAULT 'N',
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  ACCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ACCOUNT_ID)
,
  CONSTRAINT CA_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX idx_accts ON customer_accounts (CUSTOMER_ID,NODE_ID,BILLING_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO);
CREATE INDEX idx_cust_id ON customer_accounts (CUSTOMER_ID);
CREATE INDEX idx_acct_name ON customer_accounts (CUSTOMER_ACCOUNT_NAME);
CREATE INDEX idx_tenant ON customer_accounts (TENANT_ID);
CREATE INDEX idx_partner ON customer_accounts (PARTNER_ID);
CREATE INDEX idx_status ON customer_accounts (STATUS);

/* SQLINES DEMO *** for table customer_accounts_hist */

CREATE TABLE customer_accounts_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_DATE date DEFAULT NULL,
  CUSTOMER_ACCOUNT_NAME varchar(150) DEFAULT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(20) NOT NULL,
  TNT_ACCOUNT_ID varchar(25) DEFAULT NULL,
  CUSTOMER_RELATIONSHIP varchar(100) DEFAULT NULL,
  ID_TYPE varchar(30) DEFAULT NULL COMMENT 'customer specific identity type like NIN,Passport',
  ID_TYPE_VALUE varchar(25) DEFAULT NULL COMMENT 'customer specific identity Number',
  DURATION smallint DEFAULT NULL,
  DURATION_UNIT smallint DEFAULT NULL,
  RENEWAL_TYPE smallint DEFAULT NULL,
  SALES_CHANNEL varchar(100) DEFAULT NULL,
  CHANNEL_CODE varchar(50) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  IS_EKYC_COLLECTED char(1) DEFAULT 'N',
  CUSTOMER_DECLARATION char(1) NOT NULL DEFAULT 'N',
  PREFERRED_COMM_CHANNEL varchar(15) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_CUG char(1) NOT NULL DEFAULT 'N',
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  ACCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CAH_UK1 UNIQUE (CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE customer_accounts_hist_seq RESTART WITH 22;

CREATE INDEX idx_accts ON customer_accounts_hist (CUSTOMER_ID,NODE_ID,BILLING_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO);
CREATE INDEX idx_cust_id ON customer_accounts_hist (CUSTOMER_ID);
CREATE INDEX idx_acct_name ON customer_accounts_hist (CUSTOMER_ACCOUNT_NAME);
CREATE INDEX idx_tenant ON customer_accounts_hist (TENANT_ID);
CREATE INDEX idx_partner ON customer_accounts_hist (PARTNER_ID);
CREATE INDEX idx_status ON customer_accounts_hist (STATUS);

/* SQLINES DEMO *** for table customer_accounts_network_ids */

CREATE TABLE customer_accounts_network_ids (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  LOB_ID int DEFAULT NULL,
  SERVICE_ID int NOT NULL,
  NETWORK_ID varchar(20) NOT NULL,
  DEVICE_SERIAL_NO varchar(20) DEFAULT NULL,
  ADDITIONAL_COLUMN_1 varchar(100) DEFAULT NULL,
  ADDITIONAL_COLUMN_2 varchar(100) DEFAULT NULL,
  ADDITIONAL_COLUMN_3 varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CANIDs_UK1 UNIQUE (CUSTOMER_ID,NETWORK_ID)
)  ;

ALTER SEQUENCE customer_accounts_network_ids_seq RESTART WITH 7;

/* SQLINES DEMO *** for table customer_address */

CREATE TABLE customer_address (
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(255) NOT NULL,
  ADDRESS_LINE1 varchar(255) DEFAULT NULL,
  ADDRESS_LINE2 varchar(255) DEFAULT NULL,
  ADDRESS_LOCALTY varchar(150) DEFAULT NULL,
  ADDRESS_VILLAGE_ID int DEFAULT NULL,
  ADDRESS_MANDAL_ID int DEFAULT NULL,
  ADDRESS_MANDAL varchar(50) DEFAULT NULL,
  ADDRESS_CITY_ID int DEFAULT NULL,
  ADDRESS_CITY varchar(100) DEFAULT NULL,
  ADDRESS_DISTRICT_ID int DEFAULT NULL,
  ADDRESS_DISTRICT varchar(50) DEFAULT NULL,
  ADDRESS_STATE_ID int DEFAULT NULL,
  ADDRESS_STATE varchar(100) DEFAULT NULL,
  ADDRESS_ZIPCODE_ID int DEFAULT NULL,
  ADDRESS_ZIPCODE varchar(10) DEFAULT NULL,
  ADDRESS_COUNTRY_ID int DEFAULT NULL,
  ADDRESS_COUNTRY varchar(100) DEFAULT NULL,
  REGION_ID int DEFAULT NULL,
  REGION varchar(255) NOT NULL,
  TIER_ID int DEFAULT NULL,
  TIER varchar(255) NOT NULL,
  PHONE varchar(15) DEFAULT NULL,
  FAX varchar(15) DEFAULT NULL,
  LATTITUDE decimal(10,6) DEFAULT '0.000000',
  LONGITUDE decimal(10,6) DEFAULT '0.000000',
  ALTITUDE decimal(10,6) DEFAULT '0.000000',
  ADDRESS_LEVEL varchar(10) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ADDRESS_ID),
  CONSTRAINT CUST_ADDR_UK1 UNIQUE (ADDRESS_ID,EFFECTIVE_FROM)
) ;

CREATE INDEX idx_CADD1 ON customer_address (EFFECTIVE_TO);

/* SQLINES DEMO *** for table customer_address_hist */

CREATE TABLE customer_address_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(255) NOT NULL,
  ADDRESS_LINE1 varchar(255) DEFAULT NULL,
  ADDRESS_LINE2 varchar(255) DEFAULT NULL,
  ADDRESS_LOCALTY varchar(150) DEFAULT NULL,
  ADDRESS_VILLAGE_ID int DEFAULT NULL,
  ADDRESS_MANDAL_ID int DEFAULT NULL,
  ADDRESS_MANDAL varchar(50) DEFAULT NULL,
  ADDRESS_CITY_ID int DEFAULT NULL,
  ADDRESS_CITY varchar(100) DEFAULT NULL,
  ADDRESS_DISTRICT_ID int DEFAULT NULL,
  ADDRESS_DISTRICT varchar(50) DEFAULT NULL,
  ADDRESS_STATE_ID int DEFAULT NULL,
  ADDRESS_STATE varchar(100) DEFAULT NULL,
  ADDRESS_ZIPCODE_ID int DEFAULT NULL,
  ADDRESS_ZIPCODE varchar(10) DEFAULT NULL,
  ADDRESS_COUNTRY_ID int DEFAULT NULL,
  ADDRESS_COUNTRY varchar(100) DEFAULT NULL,
  REGION_ID int DEFAULT NULL,
  REGION varchar(255) NOT NULL,
  TIER_ID int DEFAULT NULL,
  TIER varchar(255) NOT NULL,
  PHONE varchar(15) DEFAULT NULL,
  FAX varchar(15) DEFAULT NULL,
  LATTITUDE decimal(10,6) DEFAULT '0.000000',
  LONGITUDE decimal(10,6) DEFAULT '0.000000',
  ALTITUDE decimal(10,6) DEFAULT '0.000000',
  ADDRESS_LEVEL varchar(10) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CUST_ADDR_HIS_UK1 UNIQUE (ADDRESS_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE customer_address_hist_seq RESTART WITH 11;

/* SQLINES DEMO *** for table customer_address_mapping */

CREATE TABLE customer_address_mapping (
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(30) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_ID)
,
  CONSTRAINT CADM_FK1 FOREIGN KEY (ADDRESS_ID) REFERENCES customer_address (ADDRESS_ID)
) ;

CREATE INDEX ADD_IDX1 ON customer_address_mapping (CUSTOMER_ID);
CREATE INDEX ADD_IDX2 ON customer_address_mapping (CUSTOMER_ACCOUNT_ID);
CREATE INDEX ADD_IDX3 ON customer_address_mapping (NODE_ID);
CREATE INDEX ADD_IDX4 ON customer_address_mapping (ADDRESS_ID);
CREATE INDEX ADD_IDX5 ON customer_address_mapping (EFFECTIVE_FROM);
CREATE INDEX ADD_IDX6 ON customer_address_mapping (EFFECTIVE_TO);

/* SQLINES DEMO *** for table customer_address_mapping_hist */

CREATE TABLE customer_address_mapping_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(30) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

CREATE INDEX ADDH_IDX1 ON customer_address_mapping_hist (CUSTOMER_ID);
CREATE INDEX ADDH_IDX2 ON customer_address_mapping_hist (CUSTOMER_ACCOUNT_ID);
CREATE INDEX ADDH_IDX3 ON customer_address_mapping_hist (NODE_ID);

/* SQLINES DEMO *** for table customer_balances */

CREATE TABLE customer_balances (
  RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  TOTAL_BILLED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_PAID_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_CURRENT_OUTSTANDING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_PREVIOUS_OUTSTANDING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  LAST_CUSTOMER_BILL_NUMBER varchar(100) DEFAULT NULL,
  LAST_OPEN_BILL_NUMBER varchar(100) DEFAULT NULL,
  TOTAL_DISPUTED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_ADJUSTMENTS_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_ADJUSTMENT_ID bigint DEFAULT NULL,
  TOTAL_UNBILLED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_UPDATE date DEFAULT NULL,
  LAST_ADJUSTMENT_UPDATE date DEFAULT NULL,
  LAST_UNBILLED_AMOUNT_UPDATE date DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUST_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CB_UK1 UNIQUE (CUSTOMER_ID,BILLING_ACCOUNT_ID)
,
  CONSTRAINT CB_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID),
  CONSTRAINT CB_FK2 FOREIGN KEY (BILLING_ACCOUNT_ID) REFERENCES billing_accounts (BILLING_ACCOUNT_ID)
) ;

CREATE INDEX idx_cust_bal ON customer_balances (CUSTOMER_ID,BILLING_ACCOUNT_ID);
CREATE INDEX CB_FK2 ON customer_balances (BILLING_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_bill_cycles */

CREATE TABLE customer_bill_cycles (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1' COMMENT 'To Identify the Billing Account ID for Postpaid Customer',
  BILL_CYCLE_ID varchar(20) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CBC_UK1 UNIQUE (CUSTOMER_ID,BILL_CYCLE_ID,EFFECTIVE_FROM,BILLING_ACCOUNT_ID)
,
  CONSTRAINT CBC_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CB_IDX1 ON customer_bill_cycles (CUSTOMER_ID,BILL_CYCLE_ID);
CREATE INDEX CB_IDX2 ON customer_bill_cycles (EFFECTIVE_TO);

/* SQLINES DEMO *** for table customer_bill_cycles_hist */

CREATE TABLE customer_bill_cycles_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1' COMMENT 'To Identify the Billing Account ID for Postpaid Customer',
  BILL_CYCLE_ID varchar(20) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CBC_HIS_UK1 UNIQUE (CUSTOMER_ID,BILL_CYCLE_ID,EFFECTIVE_FROM,BILLING_ACCOUNT_ID)
)  ;

ALTER SEQUENCE customer_bill_cycles_hist_seq RESTART WITH 22;

CREATE INDEX CB_IDX1 ON customer_bill_cycles_hist (CUSTOMER_ID,BILL_CYCLE_ID);
CREATE INDEX CB_IDX2 ON customer_bill_cycles_hist (EFFECTIVE_TO);

/* SQLINES DEMO *** for table customer_bill_payments */

CREATE TABLE customer_bill_payments (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_BILL_NUMBER varchar(100) NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  BILL_START_DATE date NOT NULL,
  BILL_END_DATE date NOT NULL,
  BILL_PAYMENT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  BILL_PAYMENT_REFERENCE varchar(255) NOT NULL DEFAULT '',
  BILL_PAYMENT_DATE date DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CUST_BP_UK1 UNIQUE (CUSTOMER_BILL_NUMBER,BILL_PAYMENT_REFERENCE)
)  ;

ALTER SEQUENCE customer_bill_payments_seq RESTART WITH 6;

CREATE INDEX idx_CID_BAID ON customer_bill_payments (CUSTOMER_ID,BILLING_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_conn_counts */

CREATE TABLE customer_conn_counts (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY COMMENT 'Table Running Sequence Number',
  TENANT_ID bigint NOT NULL COMMENT 'Operator Representation ID',
  PARTNER_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Operator Partner Representation ID',
  ID_TYPE varchar(25) DEFAULT NULL COMMENT 'Customer Identity Proof Type',
  ID_VALUE varchar(25) NOT NULL COMMENT 'Customer Identity Proof Value',
  PREPAID_COUNT smallint NOT NULL DEFAULT '0' COMMENT 'Prepaid Connection Count',
  POSTPAID_COUNT smallint NOT NULL DEFAULT '0' COMMENT 'Postpaid Connection Count',
  HYBRID_COUNT smallint NOT NULL DEFAULT '0' COMMENT 'Hybrid Connection Count',
  TOTAL_COUNT smallint NOT NULL DEFAULT '0' COMMENT 'Total Count Connections',
  STATUS smallint NOT NULL DEFAULT '11' COMMENT 'Status of the Record',
  CREATED_BY varchar(50) DEFAULT NULL COMMENT 'Record Created By User ID/Name',
  CREATED_IPADDR varchar(100) DEFAULT NULL COMMENT 'Record Created User System IP Address',
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Record Created Date and Time',
  MODIFIED_BY varchar(50) DEFAULT NULL COMMENT 'Record Modified By User ID/Name',
  MODIFIED_IPADDR varchar(100) DEFAULT NULL COMMENT 'Record Modified User System IP Address',
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */ COMMENT 'Record Modified Date and Time',
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT ID_VALUE UNIQUE (ID_VALUE)
)  ;

ALTER SEQUENCE customer_conn_counts_seq RESTART WITH 235;

/* SQLINES DEMO *** for table customer_contacts */

CREATE TABLE customer_contacts (
  CONTACT_ID bigint NOT NULL,
  CONTACT_TYPE varchar(50) DEFAULT NULL COMMENT 'primary or secondary',
  CONTACT_NAME varchar(50) DEFAULT NULL COMMENT 'contact name',
  DESIGNATION varchar(50) DEFAULT NULL COMMENT 'designation of the contact person',
  PRIMARY_EMAIL varchar(100) DEFAULT NULL,
  ALTERNATE_EMAIL varchar(100) DEFAULT NULL,
  PRIMARY_MOBILE varchar(15) DEFAULT NULL,
  ALTERNATE_MOBILE varchar(15) DEFAULT NULL,
  PRIMARY_LANDLINE_NO varchar(15) DEFAULT NULL,
  ALTERNATE_LANDLINE_NO varchar(15) DEFAULT NULL,
  FAX_NO varchar(15) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  CONTACT_LEVEL varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTACT_ID),
  CONSTRAINT CUST_CNCT_UK1 UNIQUE (CONTACT_ID,EFFECTIVE_FROM)
) ;

CREATE INDEX idx_cnt1 ON customer_contacts (EFFECTIVE_TO);
CREATE INDEX cc_mobile ON customer_contacts (PRIMARY_MOBILE);

/* SQLINES DEMO *** for table customer_contacts_hist */

CREATE TABLE customer_contacts_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CONTACT_ID bigint NOT NULL,
  PRIMARY_EMAIL varchar(100) DEFAULT NULL,
  ALTERNATE_EMAIL varchar(100) DEFAULT NULL,
  PRIMARY_MOBILE varchar(15) DEFAULT NULL,
  ALTERNATE_MOBILE varchar(15) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  CONTACT_LEVEL varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CUST_CNCT_HIS_UK1 UNIQUE (CONTACT_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE customer_contacts_hist_seq RESTART WITH 33;

/* SQLINES DEMO *** for table customer_contacts_mapping */

CREATE TABLE customer_contacts_mapping (
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CONTACT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_ID)
,
  CONSTRAINT CCM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CC_IDX1 ON customer_contacts_mapping (CUSTOMER_ID);
CREATE INDEX CC_IDX2 ON customer_contacts_mapping (CUSTOMER_ACCOUNT_ID);
CREATE INDEX CC_IDX3 ON customer_contacts_mapping (NODE_ID);
CREATE INDEX CC_IDX4 ON customer_contacts_mapping (CONTACT_ID);
CREATE INDEX CC_IDX5 ON customer_contacts_mapping (EFFECTIVE_FROM);
CREATE INDEX CC_IDX6 ON customer_contacts_mapping (EFFECTIVE_FROM);

/* SQLINES DEMO *** for table customer_contacts_mapping_hist */

CREATE TABLE customer_contacts_mapping_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CONTACT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

CREATE INDEX CCH_IDX1 ON customer_contacts_mapping_hist (CUSTOMER_ID);
CREATE INDEX CCH_IDX2 ON customer_contacts_mapping_hist (CUSTOMER_ACCOUNT_ID);
CREATE INDEX CCH_IDX3 ON customer_contacts_mapping_hist (NODE_ID);

/* SQLINES DEMO *** for table customer_contract_serv_features */

CREATE TABLE customer_contract_serv_features (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CONTR_SRV_FEAT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  LOB_ID int DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  SERVICE_FEATURE_ID int NOT NULL,
  SERVICE_FEATURE_CODE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CUST_CTR_SF_UK1 UNIQUE (CONTR_SRV_FEAT_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table customer_contracts */

CREATE TABLE customer_contracts (
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  TENANT_CONTRACT_ID varchar(20) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  IS_RATEPLAN_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_CONTRACT_SHARED smallint NOT NULL DEFAULT '2',
  RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  RATE_PLAN_PURCHASED_DATE date DEFAULT NULL,
  RATE_PLAN_ACTIVATED_DATE date DEFAULT NULL,
  RATE_PLAN_DURATION int DEFAULT NULL,
  RATE_PLAN_QUANTITY int DEFAULT NULL,
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  RATE_PLAN_END_DATE date DEFAULT NULL,
  RATE_PLAN_REV_END_DATE date DEFAULT NULL,
  RATE_PLAN_OVERRIDE char(1) DEFAULT NULL,
  OFFER_RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_CONTRACT_ID)
,
  CONSTRAINT CNTR_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID),
  CONSTRAINT CNTR_FK2 FOREIGN KEY (WORK_ORDER_ID) REFERENCES work_orders (WORK_ORDER_ID)
) ;

CREATE INDEX idx_1 ON customer_contracts (CUSTOMER_ID,NODE_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO,RATE_PLAN_ID);
CREATE INDEX CNTR_FK1 ON customer_contracts (CUSTOMER_ACCOUNT_ID);
CREATE INDEX CNTR_FK2 ON customer_contracts (WORK_ORDER_ID);

/* SQLINES DEMO *** for table customer_contracts_hist */

CREATE TABLE customer_contracts_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  TENANT_CONTRACT_ID varchar(20) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  IS_RATEPLAN_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_CONTRACT_SHARED smallint NOT NULL DEFAULT '2',
  RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  RATE_PLAN_PURCHASED_DATE date DEFAULT NULL,
  RATE_PLAN_ACTIVATED_DATE date DEFAULT NULL,
  RATE_PLAN_DURATION int DEFAULT NULL,
  RATE_PLAN_QUANTITY int DEFAULT NULL,
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  RATE_PLAN_END_DATE date DEFAULT NULL,
  RATE_PLAN_REV_END_DATE date DEFAULT NULL,
  RATE_PLAN_OVERRIDE char(1) DEFAULT NULL,
  OFFER_RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CNTR_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE customer_contracts_hist_seq RESTART WITH 79;

CREATE INDEX idx_1 ON customer_contracts_hist (CUSTOMER_ID,NODE_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM,EFFECTIVE_TO,RATE_PLAN_ID);

/* SQLINES DEMO *** for table customer_credit_limits */

CREATE TABLE customer_credit_limits (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL DEFAULT '-1',
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00',
  IS_LIMIT_OVERRIDEN smallint NOT NULL DEFAULT '0',
  RECOMM_CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00',
  CREDIT_LIMIT_LEVEL smallint NOT NULL DEFAULT '3',
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CUST_CL_UK1 UNIQUE (CUSTOMER_ID,NODE_ID,BILLING_ACCOUNT_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM)
,
  CONSTRAINT CCL_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID),
  CONSTRAINT CCL_FK2 FOREIGN KEY (BILLING_ACCOUNT_ID) REFERENCES billing_accounts (BILLING_ACCOUNT_ID)
) ;

CREATE INDEX CCL_FK2 ON customer_credit_limits (BILLING_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_credit_limits_hist */

CREATE TABLE customer_credit_limits_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY COMMENT 'Table Running Sequence Number',
  RECORD_ID bigint NOT NULL COMMENT 'Main Table Record ID',
  CUSTOMER_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Customer Unique Identification Number',
  NODE_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Node Unique Identification Number',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Billing Account Unique Identification Number',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Customer Account Unique Identification Number',
  CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00' COMMENT 'Assigned Customer Credit Limit Amount',
  IS_LIMIT_OVERRIDEN smallint NOT NULL DEFAULT '0' COMMENT 'Credit Limit Overridden Flag',
  RECOMM_CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00' COMMENT 'Assigned Recommended Customer Credit Limit Amount',
  CREDIT_LIMIT_LEVEL smallint NOT NULL DEFAULT '3' COMMENT 'Identification Of Credit Limit (Band) Level',
  EFFECTIVE_FROM date NOT NULL COMMENT 'Record Effective From Date',
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31' COMMENT 'Record Effective To Date',
  STATUS smallint NOT NULL DEFAULT '1' COMMENT 'Status of the Record',
  CREATED_BY varchar(50) DEFAULT NULL COMMENT 'Record Created By User ID/Name',
  CREATED_IPADDR varchar(100) DEFAULT NULL COMMENT 'Record Created User System IP Address',
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Record Created Date and Time',
  MODIFIED_BY varchar(50) DEFAULT NULL COMMENT 'Record Modified By User ID/Name',
  MODIFIED_IPADDR varchar(100) DEFAULT NULL COMMENT 'Record Modified User System IP Address',
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */ COMMENT 'Record Modified Date and Time',
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */ COMMENT 'Record Approved Date and Time',
  APPROVED_BY varchar(50) DEFAULT NULL COMMENT 'Record Approved By User ID/Name',
  APPROVED_IPADDR varchar(100) DEFAULT NULL COMMENT 'Record Approved User System IP Address',
  PRIMARY KEY (HIST_RECORD_ID)
)  ;

ALTER SEQUENCE customer_credit_limits_hist_seq RESTART WITH 3;

/* SQLINES DEMO *** for table customer_credits_adjustments */

CREATE TABLE customer_credits_adjustments (
  ADJUSTMENT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  TYPE varchar(20) NOT NULL,
  REQUEST_ID bigint DEFAULT '0',
  PENALTY_ID bigint DEFAULT '0',
  GL_CODE varchar(25) NOT NULL DEFAULT '-1',
  ADJ_CREDIT_AMOUNT decimal(10,2) DEFAULT NULL,
  ADJ_CREDIT_DATE timestamp(0) DEFAULT NULL,
  ADJ_CREDIT_TYPE varchar(50) DEFAULT NULL,
  APPROVAL_LEVEL smallint DEFAULT NULL,
  CHARGE_ID int DEFAULT NULL,
  REASON_CODE varchar(100)  DEFAULT NULL,
  REASON_DESCRIPTION varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ADJUSTMENT_ID)
,
  CONSTRAINT CCA_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX idx_cust_adj ON customer_credits_adjustments (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,ADJ_CREDIT_DATE);

/* SQLINES DEMO *** for table customer_deposits */

CREATE TABLE customer_deposits (
  DEPOSIT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  PAYMENT_ID bigint NOT NULL,
  CONTR_SRV_FEAT_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  SERVICE_PKG_ID bigint NOT NULL,
  GL_ID bigint NOT NULL DEFAULT '-1',
  DEPOSIT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  DEPOSIT_RECEIVED_DATE date NOT NULL,
  DEPOSIT_REMARKS text,
  DEPOSIT_RETURNED_DATE date DEFAULT NULL,
  DEPOSIT_RETURNED_REMARKS text,
  DEPOSIT_STATUS smallint NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (DEPOSIT_ID)
,
  CONSTRAINT CUST_DEP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CUST_DEP_FK1 ON customer_deposits (CUSTOMER_ID);
CREATE INDEX CUST_DEP_FK2 ON customer_deposits (PAYMENT_ID);

/* SQLINES DEMO *** for table customer_documents */

CREATE TABLE customer_documents (
  DOCUMENT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  OPPORTUNITY_ID bigint DEFAULT NULL COMMENT 'added documents opportunity id',
  CUSTOMER_PROOF_TYPE varchar(150) DEFAULT NULL,
  DOCUMENT_TYPE varchar(255) DEFAULT NULL,
  DOCUMENT_NAME varchar(255) NOT NULL,
  ORG_DOCUMENT_NAME varchar(255) DEFAULT NULL,
  VERSION int NOT NULL DEFAULT '1',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  DOCUMENT_PATH varchar(255) DEFAULT NULL,
  DOCUMENT_BASE64 text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (DOCUMENT_ID)
,
  CONSTRAINT CUST_DOCS_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CUST_DOCS_FK1 ON customer_documents (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_hierarchy */

CREATE TABLE customer_hierarchy (
  NODE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  TNT_NODE_ID varchar(25) DEFAULT NULL COMMENT 'tenant wise node ids',
  NODE_CODE varchar(25) DEFAULT NULL,
  NODE_NAME varchar(100) NOT NULL,
  NODE_LEVEL int NOT NULL,
  PAYMENT_LIABILITY varchar(1) NOT NULL DEFAULT 'Y',
  PARENT_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint DEFAULT NULL,
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (NODE_ID)
,
  CONSTRAINT CH_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX idx_node_name ON customer_hierarchy (NODE_NAME);
CREATE INDEX CH_IDX1 ON customer_hierarchy (EFFECTIVE_FROM);
CREATE INDEX CH_IDX2 ON customer_hierarchy (EFFECTIVE_TO);
CREATE INDEX CH_IDX3 ON customer_hierarchy (PARENT_ID);
CREATE INDEX CH_FK1 ON customer_hierarchy (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_hierarchy_details */

CREATE TABLE customer_hierarchy_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CHD_FK1 FOREIGN KEY (NODE_ID) REFERENCES customer_hierarchy (NODE_ID)
) ;

CREATE INDEX CHD_FK1 ON customer_hierarchy_details (NODE_ID);

/* SQLINES DEMO *** for table customer_hierarchy_hist */

CREATE TABLE customer_hierarchy_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  NODE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  NODE_CODE varchar(25) DEFAULT NULL,
  NODE_NAME varchar(100) NOT NULL,
  NODE_LEVEL int NOT NULL,
  PAYMENT_LIABILITY varchar(1) NOT NULL DEFAULT 'Y',
  PARENT_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint DEFAULT NULL,
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CH_HIS_UK1 UNIQUE (NODE_ID,EFFECTIVE_FROM)
) ;

CREATE INDEX idx_node_name ON customer_hierarchy_hist (NODE_NAME);
CREATE INDEX CH_IDX1 ON customer_hierarchy_hist (EFFECTIVE_FROM);
CREATE INDEX CH_IDX2 ON customer_hierarchy_hist (EFFECTIVE_TO);
CREATE INDEX CH_IDX3 ON customer_hierarchy_hist (PARENT_ID);

/* SQLINES DEMO *** for table customer_initial_bills */

CREATE TABLE customer_initial_bills (
  CUSTOMER_BILL_NUMBER varchar(100) NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  BILL_DATE date NOT NULL,
  BILL_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  PAYMENT_ID bigint DEFAULT NULL,
  PAYMENT_AMOUNT decimal(10,2) DEFAULT '0.00',
  PAYMENT_RECEIVED_DATE date NOT NULL,
  STATUS smallint NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_BILL_NUMBER)
,
  CONSTRAINT CUST_IB_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CUST_IB_FK1 ON customer_initial_bills (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_interactions */

CREATE TABLE customer_interactions (
  INTERACTION_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CSR_USER_ID int NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  INTERACTION_TYPE varchar(50) DEFAULT 'WEB',
  INTERACTION_SUB_TYPE varchar(50) DEFAULT NULL,
  INTERACTION_TIME timestamp(0) NOT NULL,
  INTERACTION_END_TIME timestamp(0) DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  TICKET_ID bigint DEFAULT NULL,
  INTERACTION_DETAILS mediumtext,
  TO_DO_ITEMS_AVAILABLE char(1) NOT NULL DEFAULT 'N',
  SPEECH_REFERENCE_ID bigint DEFAULT NULL,
  RECORDING_ID varchar(25) DEFAULT NULL,
  RECORDING_FILE_NAME varchar(150) DEFAULT NULL,
  RECORDING_FILE_PATH varchar(255) DEFAULT NULL,
  RECORDING_AVAILABILITY char(1) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (INTERACTION_ID)
,
  CONSTRAINT CI_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CI_FK1 ON customer_interactions (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_master */

CREATE TABLE customer_master (
  CUSTOMER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_CODE varchar(30) NOT NULL,
  TNT_CUSTOMER_ID varchar(25) DEFAULT NULL,
  CUSTOMER_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_NAME varchar(255) DEFAULT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) NOT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  AGE smallint DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(20) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(20) DEFAULT NULL,
  SUB_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_TYPE varchar(100) DEFAULT NULL,
  CATEGORY varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  NATIONALITY varchar(20) DEFAULT NULL COMMENT 'specific to 9M capture the customer nationality',
  MAIDEN_NAME varchar(100) DEFAULT NULL COMMENT 'To capture maiden name of customers Mother/Father',
  PREFERRED_COMMUNICATION_CHANNEL varchar(25) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AGENT_CODE varchar(150) DEFAULT NULL,
  ACCOUNT_MANAGER varchar(150) DEFAULT NULL,
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  PAYMENT_LIABILITY char(1) NOT NULL DEFAULT 'Y',
  IS_B2B char(1) DEFAULT NULL,
  IS_TDS_APP char(1) DEFAULT 'N',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REASON_CODE smallint DEFAULT NULL,
  BLACKLIST_DATE date DEFAULT NULL,
  BLACKLIST_REASONS varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUSTOMR_ID varchar(100)  DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ID)
) ;

CREATE INDEX idx_customer_type ON customer_master (CUSTOMER_TYPE);
CREATE INDEX idx_customer_fn ON customer_master (FIRST_NAME);
CREATE INDEX idx_customer_ln ON customer_master (LAST_NAME);
CREATE INDEX idx_customer_org ON customer_master (ORGANIZATION_NAME);
CREATE INDEX idx_cust_e_from ON customer_master (EFFECTIVE_FROM);
CREATE INDEX idx_cust_e_to ON customer_master (EFFECTIVE_TO);
CREATE INDEX idx_cust_status ON customer_master (STATUS);
CREATE INDEX idx_cust_id ON customer_master (CUSTOMER_ID);
CREATE INDEX idx_tnt_id ON customer_master (TENANT_ID);
CREATE INDEX idx_pntr_id ON customer_master (PARTNER_ID);
CREATE INDEX idx_cust_code ON customer_master (CUSTOMER_CODE);

/* SQLINES DEMO *** for table customer_master_details */

CREATE TABLE customer_master_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CMD_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CMD_FK1 ON customer_master_details (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_master_hist */

CREATE TABLE customer_master_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_CODE varchar(30) NOT NULL,
  TNT_CUSTOMER_ID varchar(25) DEFAULT NULL,
  CUSTOMER_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_NAME varchar(255) DEFAULT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) NOT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  AGE smallint DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(20) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(20) DEFAULT NULL,
  SUB_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_TYPE varchar(100) DEFAULT NULL,
  CATEGORY varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  NATIONALITY varchar(20) DEFAULT NULL COMMENT 'specific to 9M capture the customer nationality',
  PREFERRED_COMMUNICATION_CHANNEL varchar(25) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AGENT_CODE varchar(150) DEFAULT NULL,
  ACCOUNT_MANAGER varchar(150) DEFAULT NULL,
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  PAYMENT_LIABILITY char(1) NOT NULL DEFAULT 'Y',
  IS_B2B char(1) DEFAULT NULL,
  IS_TDS_APP char(1) DEFAULT 'N',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REASON_CODE smallint DEFAULT NULL,
  BLACKLIST_DATE date DEFAULT NULL,
  BLACKLIST_REASONS varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUSTOMR_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT CM_HIS_UK1 UNIQUE (CUSTOMER_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE customer_master_hist_seq RESTART WITH 2;

CREATE INDEX idx_customer_type ON customer_master_hist (CUSTOMER_TYPE);
CREATE INDEX idx_customer_fn ON customer_master_hist (FIRST_NAME);
CREATE INDEX idx_customer_ln ON customer_master_hist (LAST_NAME);
CREATE INDEX idx_customer_org ON customer_master_hist (ORGANIZATION_NAME);
CREATE INDEX idx_cust_e_from ON customer_master_hist (EFFECTIVE_FROM);
CREATE INDEX idx_cust_e_to ON customer_master_hist (EFFECTIVE_TO);
CREATE INDEX idx_cust_status ON customer_master_hist (STATUS);
CREATE INDEX idx_cust_id ON customer_master_hist (CUSTOMER_ID);
CREATE INDEX idx_tnt_id ON customer_master_hist (TENANT_ID);
CREATE INDEX idx_pntr_id ON customer_master_hist (PARTNER_ID);
CREATE INDEX idx_cust_code ON customer_master_hist (CUSTOMER_CODE);

/* SQLINES DEMO *** for table customer_notifications */

CREATE TABLE customer_notifications (
  NOTIFICATION_ID int NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  ACTIVITY_DATE date NOT NULL,
  ACTIVITY_ID int NOT NULL,
  SUB_ACTIVITY_ID int DEFAULT NULL,
  STEP_ID int NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  NOTIFICATION_CATEGORY varchar(100) DEFAULT NULL,
  NOTIFICATION_CONTENT text,
  NOTIFICATION_TYPE varchar(15) NOT NULL,
  DESTINATION_ID varchar(150) NOT NULL,
  SUBMITTED_DATE timestamp(0) DEFAULT NULL,
  EXECUTED_DATE timestamp(0) DEFAULT NULL,
  RETRY_COUNT smallint DEFAULT '0',
  RETRY_NUMBER smallint NOT NULL DEFAULT '0',
  PRIORITY_GROUP_ID smallint DEFAULT NULL,
  NE_NOTIFICATION_ID bigint DEFAULT NULL,
  SLA_APPLICABLE char(1) DEFAULT NULL,
  SLA_MET char(1) DEFAULT NULL,
  NE_RESUBMIT_COUNT int DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (NOTIFICATION_ID)
) ;

CREATE INDEX NOTI_FK1 ON customer_notifications (ACTIVITY_ID);
CREATE INDEX NOTI_FK2 ON customer_notifications (SUB_ACTIVITY_ID);
CREATE INDEX NOTI_FK3 ON customer_notifications (STEP_ID);
CREATE INDEX NOTI_FK4 ON customer_notifications (NE_NOTIFICATION_ID);

/* SQLINES DEMO *** for table customer_partner_mapping */

CREATE TABLE customer_partner_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint NOT NULL,
  PARTNER_NODE_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_BRANCH_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_TYPE_ID bigint NOT NULL DEFAULT '-1',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CSPM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX key ON customer_partner_mapping (TENANT_ID,CUSTOMER_ID,NODE_ID,PARTNER_ID,PARTNER_NODE_ID,PARTNER_BRANCH_ID);
CREATE INDEX CSPM_FK1 ON customer_partner_mapping (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_plans_accumulated_charges */

CREATE TABLE customer_plans_accumulated_charges (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  PLAN_ID int NOT NULL,
  PLAN_TYPE varchar(15) DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  ACCUMULATED_CHARGES decimal(7,2) DEFAULT NULL,
  LAST_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_TRANSACTION_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CPBC_UK1 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,PLAN_ID,CHARGE_ID)
,
  CONSTRAINT CPBC_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CPBC_FK1 ON customer_plans_accumulated_charges (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_requests */

CREATE TABLE customer_requests (
  REQUEST_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  REQUEST_CHANNEL varchar(50) DEFAULT NULL,
  ACTIVITY_AREA_ID int NOT NULL,
  ACTIVITY_TYPE_ID int DEFAULT NULL,
  ACTIVITY_SUB_TYPE_ID int NOT NULL,
  ACTIVITY_ID int DEFAULT NULL,
  REQUEST_TYPE_ID int NOT NULL,
  DETAILS_OBJECT json DEFAULT NULL,
  REQUEST_CREATION_DATE timestamp(0) DEFAULT NULL,
  REQUEST_EXEC_DATE timestamp(0) DEFAULT NULL,
  REQUEST_EXP_COMPL_DATE timestamp(0) DEFAULT NULL,
  REQUEST_RESOLVED_DATE timestamp(0) DEFAULT NULL,
  SLA_APPLICABLE char(1) DEFAULT NULL,
  SLA_MET char(1) DEFAULT NULL,
  REMARKS text,
  STATUS smallint NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REQUEST_ID)
) ;

CREATE INDEX CUST_REQ_FK1 ON customer_requests (CUSTOMER_ID);

/* SQLINES DEMO *** for table customer_requests_details */

CREATE TABLE customer_requests_details (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REQUEST_ID bigint NOT NULL,
  PARAMETER_ID int NOT NULL,
  PARAMETER_SEQEUNCE_NO int NOT NULL,
  PARAMETER_TYPE varchar(25) NOT NULL,
  PARAMETER_NAME varchar(30) NOT NULL,
  PARAMETER_VALUE varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT CRD_UK1 UNIQUE (REQUEST_ID,PARAMETER_ID),
  CONSTRAINT CRD_FK1 FOREIGN KEY (REQUEST_ID) REFERENCES customer_requests (REQUEST_ID)
) ;

/* SQLINES DEMO *** for table customer_requests_documents */

CREATE TABLE customer_requests_documents (
  REQ_DOC_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  REQUEST_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  DOCUMENT_NAME varchar(255) DEFAULT NULL,
  ORG_DOCUMENT_NAME varchar(255) DEFAULT NULL,
  VERSION int NOT NULL DEFAULT '1',
  DOCUMENT_PATH text,
  DOCUMENT_PURPOSE text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (REQ_DOC_ID)
,
  CONSTRAINT CRDOC_FK1 FOREIGN KEY (REQUEST_ID) REFERENCES customer_requests (REQUEST_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CRDOC_FK1 ON customer_requests_documents (REQUEST_ID);

/* SQLINES DEMO *** for table customer_segments */

CREATE TABLE customer_segments (
  CUST_SEG_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID bigint NOT NULL,
  SEGMENT varchar(255) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUST_SEG_ID),
  CONSTRAINT CUST_SEG_UK1 UNIQUE (CUSTOMER_ID,SEGMENT),
  CONSTRAINT CUST_SEG_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
)  ;

ALTER SEQUENCE customer_segments_seq RESTART WITH 13922;

/* SQLINES DEMO *** for table customer_segments_hist */

CREATE TABLE customer_segments_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUST_SEG_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  SEGMENT varchar(255) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID)
) ;

/* SQLINES DEMO *** for table customer_to_do_item_progress */

CREATE TABLE customer_to_do_item_progress (
  TDI_PROGRESS_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TO_DO_ITEM_ID bigint NOT NULL,
  PROGRESS_DATETIME timestamp(0) NOT NULL,
  PROGRESS_DETAILS text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (TDI_PROGRESS_ID)
,
  CONSTRAINT CTDIP_FK1 FOREIGN KEY (TO_DO_ITEM_ID) REFERENCES customer_to_do_items (TO_DO_ITEM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CTDIP_FK1 ON customer_to_do_item_progress (TO_DO_ITEM_ID);

/* SQLINES DEMO *** for table customer_to_do_item_users */

CREATE TABLE customer_to_do_item_users (
  ASSGINED_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TO_DO_ITEM_ID bigint NOT NULL,
  ASSIGNED_USER_ID int NOT NULL,
  DEPARTMENT_ID int NOT NULL,
  SECTION_ID int NOT NULL,
  ASSIGNED_DATETIME timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ASSGINED_RECORD_ID)
,
  CONSTRAINT CTDIU_FK1 FOREIGN KEY (TO_DO_ITEM_ID) REFERENCES customer_to_do_items (TO_DO_ITEM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CTDIU_FK1 ON customer_to_do_item_users (TO_DO_ITEM_ID);

/* SQLINES DEMO *** for table customer_to_do_items */

CREATE TABLE customer_to_do_items (
  TO_DO_ITEM_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  INTERACTION_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  ITEM_TYPE varchar(50) DEFAULT NULL,
  ITEM_TARGET_TIME timestamp(0) NOT NULL,
  ITEM_DETAILS mediumtext,
  REMARKS mediumtext,
  ACTUAL_COMPLETION_TIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (TO_DO_ITEM_ID)
,
  CONSTRAINT CUST_TO_DO_ITEMS_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CUST_TO_DO_ITEMS_FK1 ON customer_to_do_items (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_topup_plans */

CREATE TABLE customer_topup_plans (
  PURCHASE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TOPUP_PLAN_ID bigint NOT NULL,
  PLAN_PURCHASE_DATE date NOT NULL,
  PLAN_END_DATE date NOT NULL,
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (PURCHASE_ID)
,
  CONSTRAINT CUST_TP_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX CUST_TP_FK1 ON customer_topup_plans (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_transactions */

CREATE TABLE customer_transactions (
  TRANSACTION_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TRANS_GROUP_TYPE smallint NOT NULL,
  TRANS_GROUP_SUB_TYPE smallint NOT NULL,
  TRANS_TYPE smallint NOT NULL,
  TRANS_VALUE decimal(10,2) NOT NULL,
  TRANS_VALUE_UOM int NOT NULL,
  TRANS_DATE timestamp(0) NOT NULL,
  TRANS_VALUE_SOURCE_TYPE varchar(20) DEFAULT NULL,
  TRANS_VALUE_SOURCE_ID bigint DEFAULT NULL,
  TRANS_BENEF_CUSTOMER_ID bigint DEFAULT NULL,
  TRANS_BENEF_NODE_ID bigint DEFAULT NULL,
  TRANS_BENEF_BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  TRANS_BENEF_ACCOUNT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (TRANSACTION_ID)
,
  CONSTRAINT CT_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CT_IDX1 ON customer_transactions (CUSTOMER_ID,NODE_ID,CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table customer_wallet */

CREATE TABLE customer_wallet (
  WALLET_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  AMOUNT_LOADED decimal(10,2) NOT NULL DEFAULT '0.00',
  AMOUNT_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  AMOUNT_REMAINING decimal(10,2) NOT NULL DEFAULT '0.00',
  WALLET_ACTIVATED_DATE date NOT NULL,
  LAST_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_CREDIT_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_DEBIT_DATE timestamp(0) DEFAULT NULL,
  LAST_DEBIT_TRANSACTION_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (WALLET_ID),
  CONSTRAINT CUSTOMER_ID UNIQUE (CUSTOMER_ID),
  CONSTRAINT CW_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

/* SQLINES DEMO *** for table customer_wallet_otps */

CREATE TABLE customer_wallet_otps (
  WALLET_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  WALLET_ID bigint NOT NULL,
  WALLET_OTP text NOT NULL,
  EFFECTIVE_FROM timestamp(0) DEFAULT NULL,
  EFFECTIVE_TO timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (WALLET_RECORD_ID)
,
  CONSTRAINT CW_OTP_FK1 FOREIGN KEY (WALLET_ID) REFERENCES customer_wallet (WALLET_ID)
) ;

CREATE INDEX CW_OTP_FK1 ON customer_wallet_otps (WALLET_ID);

/* SQLINES DEMO *** for table customer_wallet_pins */

CREATE TABLE customer_wallet_pins (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  WALLET_ID bigint NOT NULL,
  WALLET_PIN text NOT NULL,
  EFFECTIVE_FROM timestamp(0) DEFAULT NULL,
  EFFECTIVE_TO timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT CW_PIN_FK1 FOREIGN KEY (WALLET_ID) REFERENCES customer_wallet (WALLET_ID)
) ;

CREATE INDEX CW_PIN_FK1 ON customer_wallet_pins (WALLET_ID);

/* SQLINES DEMO *** for table default_credit_limits */

CREATE TABLE default_credit_limits (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  CUSTOMER_TYPE varchar(30) DEFAULT NULL,
  CUSTOMER_SUB_TYPE varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  TIER varchar(30) DEFAULT NULL,
  CREDIT_RATING_BAND_ID int DEFAULT NULL,
  DEFAULT_LIMIT_AMOUNT decimal(7,2) DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table immediate_bill_requests */

CREATE TABLE immediate_bill_requests (
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  REQUEST_DATE timestamp(0) NOT NULL,
  DEACTIVATED_DATE timestamp(0) DEFAULT NULL,
  IMMEDIATE_BILL_START_DATE timestamp(0) DEFAULT NULL,
  IMMEDIATE_BILL_END_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint DEFAULT '11',
  PRIMARY KEY (BILLING_ACCOUNT_ID)
,
  CONSTRAINT IBR_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX IBR_FK1 ON immediate_bill_requests (CUSTOMER_ID);

/* SQLINES DEMO *** for table logical_resources */

CREATE TABLE logical_resources (
  LOGICAL_RESOURCE_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  RESOURCE_TYPE int NOT NULL,
  RESOURCE_ID int NOT NULL,
  RESOURCE_NUMBER varchar(25) DEFAULT NULL,
  RESOURCE_CATEGORY int DEFAULT NULL,
  RESOURCE_CATEGORY_CODE varchar(50) DEFAULT NULL,
  REQUEST_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Record Generated Request Representation ID',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (LOGICAL_RESOURCE_ID)
)  ;

ALTER SEQUENCE logical_resources_seq RESTART WITH 1003292;

/* SQLINES DEMO *** for table logical_resources_hist */

CREATE TABLE logical_resources_hist (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  LOGICAL_RESOURCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  RESOURCE_TYPE int NOT NULL,
  RESOURCE_ID int NOT NULL,
  RESOURCE_NUMBER varchar(25) DEFAULT NULL,
  RESOURCE_CATEGORY int DEFAULT NULL,
  RESOURCE_CATEGORY_CODE varchar(50) DEFAULT NULL,
  REQUEST_ID bigint NOT NULL DEFAULT '-1' COMMENT 'Record Generated Request Representation ID',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE logical_resources_hist_seq RESTART WITH 508;

/* SQLINES DEMO *** for table mig_accounts_temp */

CREATE TABLE mig_accounts_temp (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  ACCOUNT_ID varchar(100) DEFAULT NULL,
  ACCOUNT_NAME varchar(100) DEFAULT NULL,
  RELATIONSHIP varchar(100) DEFAULT NULL,
  SALES_CHANNEL varchar(100) DEFAULT NULL,
  CHANNEL_CODE varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_DATE date DEFAULT NULL,
  ACCOUNT_TYPE varchar(100) DEFAULT NULL,
  ACTIVIATED_DATE date DEFAULT NULL,
  DEACTIVATED_DATE date DEFAULT NULL,
  BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_address_temp */

CREATE TABLE mig_address_temp (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  ADDRESS_TYPE varchar(100) DEFAULT NULL,
  ADDRESS_LINE1 varchar(100) DEFAULT NULL,
  ADDRESS_LINE2 varchar(100) DEFAULT NULL,
  LOCALITY varchar(100) DEFAULT NULL,
  CITY varchar(100) DEFAULT NULL,
  STATE varchar(100) DEFAULT NULL,
  ZIPCODE varchar(100) DEFAULT NULL,
  COUNTRY varchar(100) DEFAULT NULL,
  REGION varchar(100) DEFAULT NULL,
  TIER varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  ACCOUNT_ID varchar(100) DEFAULT NULL,
  CITY_ID bigint DEFAULT NULL,
  STATE_ID bigint DEFAULT NULL,
  VILLAGE_ID bigint DEFAULT NULL,
  COUNTRY_ID bigint DEFAULT NULL,
  REGION_ID bigint DEFAULT NULL,
  ZIPCODE_ID bigint DEFAULT NULL,
  TIER_ID bigint DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contact_temp */

CREATE TABLE mig_contact_temp (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PRIMARY_MOBILE varchar(100) DEFAULT NULL,
  PRIMARY_EMAIL varchar(100) DEFAULT NULL,
  SECONDARY_MOBILE varchar(100) DEFAULT NULL,
  SECONDARY_EMAIL varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  ACCOUNT_ID varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_charege_details */

CREATE TABLE mig_contract_charege_details (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  CHARGE_ID varchar(100) DEFAULT NULL,
  PARAMETER_RECORD_ID varchar(100) DEFAULT NULL,
  PARAMETER_NAME varchar(100) DEFAULT NULL,
  PARAMETER_VALUE_TYPE varchar(100) DEFAULT NULL,
  UNIT_OF_CHARGE varchar(100) DEFAULT NULL,
  NO_OF_UNITS varchar(100) DEFAULT NULL,
  CHARGE_UNIT varchar(100) DEFAULT NULL,
  PARAMETER_VALUE varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CONTRACT_CHARGE_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_charge_tax */

CREATE TABLE mig_contract_charge_tax (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PKG_ID varchar(100) DEFAULT NULL,
  CHARGE_ID varchar(100) DEFAULT NULL,
  CHARGE_DATE date DEFAULT NULL,
  TAX_ID varchar(100) DEFAULT NULL,
  TAX_TYPE varchar(100) DEFAULT NULL,
  TAX_TYPE_VALUE varchar(100) DEFAULT NULL,
  TAX_AMOUNT varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CONTRACT_CHARGE_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_charges */

CREATE TABLE mig_contract_charges (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  CHARGE_RECORD_ID varchar(100) DEFAULT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  WORK_ORDER_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PACKAGE_ID varchar(100) DEFAULT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_LEVEL varchar(100) DEFAULT NULL,
  CHARGE_ID varchar(100) DEFAULT NULL,
  CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  CHARGE_DESCRIPTION varchar(100) DEFAULT NULL,
  TAX_AMOUNT varchar(100) DEFAULT NULL,
  ORG_CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CONTRACT_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_devices */

CREATE TABLE mig_contract_devices (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PKG_ID varchar(100) DEFAULT NULL,
  SERVICE_ID varchar(100) DEFAULT NULL,
  LOB_ID varchar(100) DEFAULT NULL,
  SLOT_RECORD_ID varchar(100) DEFAULT NULL,
  DEVICE_LEASE_TYPE varchar(100) DEFAULT NULL,
  DEVICE_LOCATION varchar(100) DEFAULT NULL,
  RESOURCE_OWN_TYPE varchar(100) DEFAULT NULL,
  RESOURCE_TYPE varchar(100) DEFAULT NULL,
  RESOURCE_ID varchar(100) DEFAULT NULL,
  RES_MODEL_ID varchar(100) DEFAULT NULL,
  LOGICAL_RES_ID varchar(100) DEFAULT NULL,
  LOGICAL_RES_NO varchar(100) DEFAULT NULL,
  RESOURCE_CATEGORY varchar(100) DEFAULT NULL,
  PHYSICAL_RESOURCE_ID varchar(100) DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CUSTOMER_CONTRACT_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_over_ontime_charge */

CREATE TABLE mig_contract_over_ontime_charge (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PKG_ID varchar(100) DEFAULT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID varchar(100) DEFAULT NULL,
  CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  TAX_AMOUNT varchar(100) DEFAULT NULL,
  ORG_CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CUSTOMER_CONTRACT_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contract_service_pkgs */

CREATE TABLE mig_contract_service_pkgs (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  LOB_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PACKAGE_ID varchar(100) DEFAULT NULL,
  PACKAGE_TYPE varchar(100) DEFAULT NULL,
  SERVICE_ID varchar(100) DEFAULT NULL,
  IS_SERVICE_PKG_SHARED varchar(100) DEFAULT NULL,
  LOCKIN_PERIOD varchar(100) DEFAULT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  SP_END_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  SUSPENSION_DATE date DEFAULT NULL,
  RESUME_DATE date DEFAULT NULL,
  IS_CHARGE_OVERRIDEN varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CUSTOMER_CONTRACT_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contracts */

CREATE TABLE mig_contracts (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  IS_RATE_PLAN_SHARED varchar(100) DEFAULT NULL,
  IS_MAIN_CONTRACT_SHARED varchar(100) DEFAULT NULL,
  RATE_PLAN_TYPE varchar(100) DEFAULT NULL,
  RATE_PLAN_PARCHED_DATE date DEFAULT NULL,
  RATE_PLAN_ACTIVATED_DATE date DEFAULT NULL,
  RATE_PLAN_DURATION varchar(100) DEFAULT NULL,
  LOCKIN_PERIOD varchar(100) DEFAULT NULL,
  LOCKIN_EXPIRE_DATE date DEFAULT NULL,
  RATE_PLAN_END_DATE date DEFAULT NULL,
  RATE_PLAN_RENEWAL_DATE date DEFAULT NULL,
  RATE_PLAN_OVERRIDE varchar(100) DEFAULT NULL,
  OFFER_RATE_PLAN_TYPE varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_contracts_ovr_recurring_charge */

CREATE TABLE mig_contracts_ovr_recurring_charge (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PKG_ID varchar(100) DEFAULT NULL,
  CHARGE_ID varchar(100) DEFAULT NULL,
  CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  TAX_AMOUNT varchar(100) DEFAULT NULL,
  CHARGE_PER_DAY varchar(100) DEFAULT NULL,
  TAX_PER_DAY varchar(100) DEFAULT NULL,
  ORG_CHARGE_AMOUNT varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(50) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  CUSTOMER_CONTRACT_RECORD_ID varchar(100) DEFAULT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_customer_account_balances */

CREATE TABLE mig_customer_account_balances (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  MIG_CA_BAL_ID varchar(50) DEFAULT NULL,
  TENANT_ID varchar(100) DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  BALANCE_AMOUNT varchar(100) DEFAULT NULL,
  USED_AMOUNT varchar(100) DEFAULT NULL,
  REMAINING_BAL_AMOUNT varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  LAST_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_DEBIT_DATE timestamp(0) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_customer_balances */

CREATE TABLE mig_customer_balances (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  MIG_CUST_BAL_ID varchar(50) DEFAULT NULL,
  TENANT_ID varchar(100) DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  TOTAL_BILL_AMOUNT varchar(100) DEFAULT NULL,
  TOTAL_PAIED_AMOUNT varchar(100) DEFAULT NULL,
  CURRENT_OUTSTANDING varchar(100) DEFAULT NULL,
  PREVIOUS_OUTSTANDING varchar(100) DEFAULT NULL,
  DISPUTE_AMOUNT varchar(100) DEFAULT NULL,
  ADJESTMENT_AMOUNT varchar(100) DEFAULT NULL,
  UN_BILLED_AMOUNT varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  MIG_STATUS varchar(10) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_customer_segments */

CREATE TABLE mig_customer_segments (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID varchar(100) NOT NULL,
  SEGMENT text NOT NULL,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_customers_temp */

CREATE TABLE mig_customers_temp (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID varchar(100) NOT NULL,
  CUSTOMER_CODE varchar(100) NOT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) DEFAULT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(100) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(100) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(100) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(100) DEFAULT NULL,
  CUSTOMER_TYPE varchar(100) DEFAULT NULL,
  SUB_TYPE varchar(100) DEFAULT NULL,
  REGION varchar(100) DEFAULT NULL,
  COMMUNICATION_CHANNEL varchar(100) DEFAULT NULL,
  AGENT_CODE varchar(100) DEFAULT NULL,
  BLACKLISTED_DATE date DEFAULT NULL,
  BLACKLISTED_REASON varchar(250) DEFAULT NULL,
  BILL_CYCLE varchar(100) DEFAULT NULL,
  SEGMENTS varchar(100) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_fields_mapping */

CREATE TABLE mig_fields_mapping (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  FIELD_CODE varchar(20) DEFAULT NULL,
  FIELD_NAME varchar(100) DEFAULT NULL,
  EXTERNAL_VALUE varchar(100) NOT NULL,
  INTERNAL_VALUE varchar(11) NOT NULL,
  DESCRIPTION varchar(100) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT TENANT_ID UNIQUE (TENANT_ID,FIELD_CODE,EXTERNAL_VALUE)
) ;

/* SQLINES DEMO *** for table mig_pre_balances */

CREATE TABLE mig_pre_balances (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  MIG_PRE_BAL_ID varchar(50) DEFAULT NULL,
  TENANT_ID varchar(100) DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  CUSTOMER_CONTRACT_ID varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PACKAGE_ID varchar(100) DEFAULT NULL,
  PLAN_START_DATE date DEFAULT NULL,
  PLAN_END_DATE date DEFAULT NULL,
  PLAN_RENEWED_DATE date DEFAULT NULL,
  USAGE_ALLOCATED varchar(100) DEFAULT NULL,
  BALANCE_USED varchar(100) DEFAULT NULL,
  REMAINING_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_ALLOWED varchar(100) DEFAULT NULL,
  ROLL_OVER_LIMIT varchar(100) DEFAULT NULL,
  ROLL_OVER_PERIOD varchar(100) DEFAULT NULL,
  ROLL_OVER_PERIOD_UOM varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE_USED varchar(100) DEFAULT NULL,
  ROLL_OVER_REMAINING_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE_EXPIRED varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE_LOST varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_usage_balances */

CREATE TABLE mig_usage_balances (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  MIG_USAGE_BAL_ID varchar(50) DEFAULT NULL,
  TENANT_ID varchar(100) DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID varchar(100) DEFAULT NULL,
  CUSTOMER_CONTRACT_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(100) DEFAULT NULL,
  RATE_PLAN_ID varchar(100) DEFAULT NULL,
  SERVICE_PACKAGE_ID varchar(100) DEFAULT NULL,
  SERVICE_ID varchar(100) DEFAULT NULL,
  ZONE_TYPE_ID varchar(100) DEFAULT NULL,
  CALL_TYPE_ID varchar(100) DEFAULT NULL,
  CALL_DIRECTION_ID varchar(100) DEFAULT NULL,
  TIME_PLAN_DAY_ID varchar(100) DEFAULT NULL,
  PERIOD_TYPE_ID varchar(100) DEFAULT NULL,
  PLAN_START_DATE date DEFAULT NULL,
  PLAN_END_DATE date DEFAULT NULL,
  USAGE_UOM varchar(100) DEFAULT NULL,
  ALLOCATED_BALANCE varchar(100) DEFAULT NULL,
  BALANCE_USED varchar(100) DEFAULT NULL,
  REMAINING_USAGE_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_ALLOWED varchar(100) DEFAULT NULL,
  ROLL_OVER_LIMIT varchar(100) DEFAULT NULL,
  ROLL_OVER_PERIOD varchar(100) DEFAULT NULL,
  ROLL_OVER_PERIOD_UNIT varchar(100) DEFAULT NULL,
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE_USED varchar(100) DEFAULT NULL,
  ROLL_OVER_REMAINING_BALANCE varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE_EXPIRED varchar(100) DEFAULT NULL,
  ROLL_OVER_BALANCE_LOST varchar(100) DEFAULT NULL,
  LAST_PAYMENT_ID varchar(100) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mig_work_orders */

CREATE TABLE mig_work_orders (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID varchar(100) DEFAULT NULL,
  CUSTOMER_ID varchar(100) DEFAULT NULL,
  NODE_ID varchar(100) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  ACCOUNT_ID varchar(100) DEFAULT NULL,
  PAYMENT_ID varchar(100) DEFAULT NULL,
  ACTIVITY_ID varchar(100) DEFAULT NULL,
  ACTION_ID varchar(100) DEFAULT NULL,
  WORK_ORDER_CREATED_DATE timestamp(0) DEFAULT NULL,
  WORK_ORDER_TARGET_DATE timestamp(0) DEFAULT NULL,
  WORK_ORDER_PICKED_DATE timestamp(0) DEFAULT NULL,
  WORK_ORDER_EXE_DATE timestamp(0) DEFAULT NULL,
  MIG_STATUS varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL,
  FILE_RECORD_ID varchar(10) DEFAULT NULL,
  FILE_ID varchar(10) DEFAULT NULL,
  FILE_REC_TYPE_ID varchar(10) DEFAULT NULL,
  ERROR_DESCRIPTION text,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table mnp_request_dtls */

CREATE TABLE mnp_request_dtls (
  REQ_DETAIL_ID bigint NOT NULL,
  REQUEST_ID bigint NOT NULL,
  NAME varchar(50) DEFAULT NULL,
  EXT_TRANS_ID varchar(20) NOT NULL,
  PREV_PYMT_TYPE varchar(10) DEFAULT NULL,
  LOGICAL_RESOURCE_ID bigint NOT NULL,
  LOGICAL_RESOURCE_NO varchar(20) NOT NULL,
  UPC varchar(10) DEFAULT NULL,
  CHARGE decimal(12,5) DEFAULT '0.00000',
  CHARGE_DISCOUNT decimal(12,5) DEFAULT '0.00000',
  DTL_STAGE varchar(10) DEFAULT NULL,
  DTL_STAGE_DATE timestamp(0) DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  APPROVAL_STATUS smallint DEFAULT NULL,
  PORT_PROCESS_DATE timestamp(0) DEFAULT NULL,
  ACPT_REJ_REASON varchar(50) DEFAULT NULL,
  REMARKS text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REQ_DETAIL_ID)
,
  CONSTRAINT MDTL_FK1 FOREIGN KEY (REQUEST_ID) REFERENCES mnp_requests (REQUEST_ID)
) ;

CREATE INDEX MDTL_FK1 ON mnp_request_dtls (REQUEST_ID);

/* SQLINES DEMO *** for table mnp_request_response_details */

CREATE TABLE mnp_request_response_details (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  REQUEST_ID bigint NOT NULL,
  REQUEST_TYPE varchar(50) NOT NULL,
  REQUEST_STAGE varchar(50) NOT NULL,
  REQUEST_OBJECT text,
  CREATED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT MNP_REQ_RES_DTLS_FK1 FOREIGN KEY (REQUEST_ID) REFERENCES mnp_requests (REQUEST_ID)
) ;

CREATE INDEX MNP_REQ_RES_DTLS_FK1 ON mnp_request_response_details (REQUEST_ID);

/* SQLINES DEMO *** for table mnp_requests */

CREATE TABLE mnp_requests (
  REQUEST_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  NAME varchar(50) DEFAULT NULL,
  EXT_TRANS_ID varchar(20) NOT NULL,
  REQUEST_TYPE varchar(10) NOT NULL,
  REQUEST_DATE date NOT NULL,
  CUSTOMER_ID bigint DEFAULT NULL,
  CUSTOMER_TYPE varchar(20) NOT NULL,
  PREV_OPERATOR varchar(20) NOT NULL,
  PREV_PYMT_TYPE varchar(10) DEFAULT NULL,
  DESIRED_PYMNT_TYPE varchar(10) DEFAULT NULL,
  PORT_PROCESS_DATE timestamp(0) DEFAULT NULL,
  ACPT_REJ_REASON varchar(50) DEFAULT NULL,
  REMARKS text,
  STAGE varchar(10) DEFAULT NULL,
  STAGE_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REQUEST_ID)
,
  CONSTRAINT MNP_REQ_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX MNP_REQ_FK1 ON mnp_requests (CUSTOMER_ID);

/* SQLINES DEMO *** for table mnp_upc */

CREATE TABLE mnp_upc (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  UPC_REQ_RECD_DATE timestamp(0) NOT NULL,
  LOGICAL_RESOURCE_ID bigint NOT NULL,
  LOGICAL_RESOURCE_NO varchar(20) NOT NULL,
  UPC varchar(10) DEFAULT NULL,
  CREATED_DATE date NOT NULL,
  EXPIRY_DATE date NOT NULL,
  CUSTOMER_TYPE varchar(20) DEFAULT NULL,
  CUSTOMER_SUB_TYPE varchar(100) DEFAULT NULL,
  CUSTOMER_ACCOUNT_TYPE smallint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT MNP_UPC_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX MNP_UPC_FK1 ON mnp_upc (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table multi_subscriber_plan */

CREATE TABLE multi_subscriber_plan (
  MSP_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SHARE_TYPE smallint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MSP_RECORD_ID)
,
  CONSTRAINT MSP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX MSP_FK1 ON multi_subscriber_plan (CUSTOMER_ID);

/* SQLINES DEMO *** for table multi_subscriber_plan_hist */

CREATE TABLE multi_subscriber_plan_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  MSP_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SHARE_TYPE smallint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT MSPH_UK1 UNIQUE (MSP_RECORD_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table multi_subscriber_plan_mapping */

CREATE TABLE multi_subscriber_plan_mapping (
  MAPPING_RECORD_ID bigint NOT NULL,
  MSP_RECORD_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_RECORD_ID),
  CONSTRAINT MSPM_UK1 UNIQUE (MAPPING_RECORD_ID,EFFECTIVE_FROM)
,
  CONSTRAINT MSPM_FK1 FOREIGN KEY (MSP_RECORD_ID) REFERENCES multi_subscriber_plan (MSP_RECORD_ID)
) ;

CREATE INDEX MSPM_FK1 ON multi_subscriber_plan_mapping (MSP_RECORD_ID);

/* SQLINES DEMO *** for table multi_subscriber_plan_mapping_hist */

CREATE TABLE multi_subscriber_plan_mapping_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  MAPPING_RECORD_ID bigint NOT NULL,
  MSP_RECORD_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT MSPMH_UK1 UNIQUE (MAPPING_RECORD_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table multi_subscriber_plan_share */

CREATE TABLE multi_subscriber_plan_share (
  SHARE_RECORD_ID bigint NOT NULL,
  MAPPING_RECORD_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SHARE_VALUE decimal(7,2) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (SHARE_RECORD_ID)
,
  CONSTRAINT MSPS_FK1 FOREIGN KEY (MAPPING_RECORD_ID) REFERENCES multi_subscriber_plan_mapping (MAPPING_RECORD_ID)
) ;

CREATE INDEX MSPS_FK1 ON multi_subscriber_plan_share (MAPPING_RECORD_ID);

/* SQLINES DEMO *** for table multi_subscriber_plan_share_hist */

CREATE TABLE multi_subscriber_plan_share_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  SHARE_RECORD_ID bigint NOT NULL,
  MAPPING_RECORD_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SHARE_VALUE decimal(7,2) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT MUP_SHARE_HIS_UK1 UNIQUE (SHARE_RECORD_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table nearby_pops */

CREATE TABLE nearby_pops (
  RECORD_ID bigint NOT NULL,
  POP_RECORD_ID int NOT NULL,
  NEARBY_POP_RECORD_ID bigint NOT NULL,
  DISTANCE_FROM_POP decimal(7,2) NOT NULL DEFAULT '0.00',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT NB_POP_FK1 FOREIGN KEY (POP_RECORD_ID) REFERENCES pop_master (POP_RECORD_ID)
) ;

CREATE INDEX idx_1 ON nearby_pops (POP_RECORD_ID);

/* SQLINES DEMO *** for table ntk_elements_services */

CREATE TABLE ntk_elements_services (
  ELM_SERV_REC_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  SUB_SERVICE_ID varchar(20) NOT NULL,
  SUB_SERVICE_NAME varchar(200) NOT NULL,
  SERVICE_ID int DEFAULT NULL,
  NTK_ELEMENT_NAME varchar(200) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL DEFAULT '9999-12-31 23:59:59',
  LAST_SERVICE_SYNC timestamp(0) DEFAULT NULL,
  NEXT_SERVICE_SYNC timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ELM_SERV_REC_ID)
) ;

/* SQLINES DEMO *** for table ntk_elements_services_dtls */

CREATE TABLE ntk_elements_services_dtls (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  ELM_SERV_REC_ID bigint NOT NULL,
  FIELD_SEQ_NO int NOT NULL,
  FIELD_CODE varchar(20) NOT NULL,
  FIELD_NAME varchar(200) NOT NULL,
  FIELD_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL DEFAULT '9999-12-31 23:59:59',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT NESD_FK1 FOREIGN KEY (ELM_SERV_REC_ID) REFERENCES ntk_elements_services (ELM_SERV_REC_ID)
) ;

CREATE INDEX CMD_FK1 ON ntk_elements_services_dtls (ELM_SERV_REC_ID);

/* SQLINES DEMO *** for table opportunities */

CREATE TABLE opportunities (
  OPPORTUNITY_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint DEFAULT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  TNT_OPP_ID varchar(25) DEFAULT NULL,
  OPP_NAME varchar(100) DEFAULT NULL,
  OPP_REVENUE_AMOUNT decimal(12,2) DEFAULT '0.00' COMMENT 'expected revenue',
  OPP_TYPE varchar(100) DEFAULT NULL,
  EXP_CLOSURE_DATE date DEFAULT NULL,
  LEAD_SOURCE varchar(100) DEFAULT NULL,
  OPP_CONTR_MONTHS int DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REMARKS text,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_OPPORTUNITY_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (OPPORTUNITY_ID)
,
  CONSTRAINT OPP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX OPP_FK1 ON opportunities (CUSTOMER_ID);

/* SQLINES DEMO *** for table opportunities_account_mapping */

CREATE TABLE opportunities_account_mapping (
  RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  OPPORTUNITY_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL DEFAULT '9999-12-31 23:59:59',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) NOT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT OAM_FK1 FOREIGN KEY (OPPORTUNITY_ID) REFERENCES opportunities (OPPORTUNITY_ID)
) ;

CREATE INDEX OAM_FK1 ON opportunities_account_mapping (OPPORTUNITY_ID);

/* SQLINES DEMO *** for table opportunity_details */

CREATE TABLE opportunity_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  OPPORTUNITY_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT OPPD_FK1 FOREIGN KEY (OPPORTUNITY_ID) REFERENCES opportunities (OPPORTUNITY_ID)
) ;

CREATE INDEX OPPD_FK1 ON opportunity_details (OPPORTUNITY_ID);

/* SQLINES DEMO *** for table partyroles */

CREATE TABLE partyroles (
  ROLE_ID int NOT NULL,
  ROLE_CODE varchar(6) NOT NULL,
  ROLE_NAME varchar(30) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (ROLE_ID),
  CONSTRAINT PR_UK1 UNIQUE (ROLE_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table payment_details */

CREATE TABLE payment_details (
  PYMT_DETAIL_ID bigint NOT NULL,
  PAYMENT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  PAYMENT_MODE varchar(100) NOT NULL,
  PAYMENT_AMOUNT decimal(10,5) DEFAULT NULL,
  PAYMENT_REFERENCE_NO varchar(100) DEFAULT NULL,
  CARD_NUMBER varchar(25) DEFAULT NULL,
  CARD_TYPE varchar(50) DEFAULT NULL,
  INSTRUMENT_NO int DEFAULT NULL,
  INSTRUMENT_DATE date DEFAULT NULL,
  INSTRUMENT_BANK varchar(100) DEFAULT NULL,
  INSTRUMENT_BRANCH varchar(200) DEFAULT NULL,
  INSTRUMENT_BANK_UNIQUE_CODE varchar(100) DEFAULT NULL,
  INSTRUMENT_DEPOSITED_DATE date DEFAULT NULL,
  INSTRUMENT_CLEARED_DATE date DEFAULT NULL,
  PG_REFERENCE_NUMBER varchar(100) DEFAULT NULL,
  PG_REQUEST_DATE timestamp(0) DEFAULT NULL,
  PG_RESPONSE text,
  PG_RESPONSE_DATE timestamp(0) DEFAULT NULL,
  REMARKS text,
  PRIMARY KEY (PYMT_DETAIL_ID)
,
  CONSTRAINT PMNTS_DTLS_FK1 FOREIGN KEY (PAYMENT_ID) REFERENCES payments (PAYMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX PYMT_DETAIL_ID ON payment_details (PYMT_DETAIL_ID);
CREATE INDEX PMNTS_DTLS_FK1 ON payment_details (PAYMENT_ID);

/* SQLINES DEMO *** for table payments */

CREATE TABLE payments (
  PAYMENT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  PAYMENT_REFERENCE_NO varchar(100) NOT NULL,
  TNT_PAYMENT_ID varchar(25) DEFAULT NULL,
  PAYMENT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  CURRENCY varchar(70) DEFAULT NULL,
  PAYMENT_CREATION_DATE timestamp(0) DEFAULT NULL,
  PROVIDED_PAYMENT_DATE timestamp(0) DEFAULT NULL,
  PAYMENT_RECEIVED_DATE date DEFAULT NULL,
  PAYMENT_MODE varchar(100) NOT NULL,
  PAYMENT_FOR varchar(255) DEFAULT NULL,
  PAYMENT_REMARKS text,
  RELATED_AUTO_DEBIT_FILE_ID int DEFAULT NULL,
  REL_AD_RETURN_FILE_ID int DEFAULT NULL,
  EXT_PAYMENT_REF varchar(20) DEFAULT NULL,
  PAYMENT_STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (PAYMENT_ID)
,
  CONSTRAINT PMNTS_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX idx_PMTS ON payments (CUSTOMER_ID,BILLING_ACCOUNT_ID,PAYMENT_RECEIVED_DATE);

/* SQLINES DEMO *** for table pending_activities */

CREATE TABLE pending_activities (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  ERROR_CODE varchar(20) NOT NULL,
  ERROR_DESCRIPTION text NOT NULL,
  API_ID int DEFAULT NULL,
  API_URL text,
  USER_MSG_TEMPLATE_ID int DEFAULT NULL,
  CUST_MSG_TEMPLATE_ID int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table physical_resources */

CREATE TABLE physical_resources (
  PHYSICAL_RESOURCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  RESOURCE_SUB_TYPE int DEFAULT NULL,
  RESOURCE_ID int NOT NULL,
  RES_MODEL_ID bigint DEFAULT NULL,
  RESOURCE_EXP_DAYS int DEFAULT NULL,
  RESOURCE_EXPIRY_DATE date DEFAULT NULL,
  SERIAL_NUMBER varchar(25) DEFAULT NULL,
  MAC_ADDRESS varchar(25) DEFAULT NULL,
  OTHER_DETAILS json DEFAULT NULL,
  MANUFACTURED_DATE timestamp(0) DEFAULT NULL,
  WARRANTY_EXP_DATE timestamp(0) DEFAULT NULL,
  VERSION_NO varchar(2) DEFAULT NULL,
  FILE_ID int DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (PHYSICAL_RESOURCE_ID)
) ;

/* SQLINES DEMO *** for table physical_resources_dtls */

CREATE TABLE physical_resources_dtls (
  PHYSICAL_RESOURCE_DTL_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  PHYSICAL_RESOURCE_ID bigint NOT NULL,
  LOGICAL_RESOURCE_ID bigint DEFAULT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  IMSI varchar(25) DEFAULT NULL,
  PIN1 varchar(4) DEFAULT NULL,
  PUK1 varchar(8) DEFAULT NULL,
  PIN2 varchar(4) DEFAULT NULL,
  PUK2 varchar(8) DEFAULT NULL,
  ADM varchar(100) DEFAULT NULL COMMENT 'ADM (Add-Drop Multiplexer) value for SIM Generation For 9M',
  ACC varchar(25) DEFAULT NULL COMMENT 'ACC (Access Control Channel) value for SIM Generation For 9M',
  KI varchar(100) DEFAULT NULL,
  MSISDN varchar(25) DEFAULT NULL,
  RATE_PLAN_ID bigint DEFAULT NULL COMMENT 'Rate Plan For Pre Provisioned Starter Kit',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (PHYSICAL_RESOURCE_DTL_ID)
,
  CONSTRAINT physical_resources_dtls_ibfk_1 FOREIGN KEY (PHYSICAL_RESOURCE_ID) REFERENCES physical_resources (PHYSICAL_RESOURCE_ID)
)  ;

ALTER SEQUENCE physical_resources_dtls_seq RESTART WITH 621601250357622;

CREATE INDEX PHYSICAL_RESOURCE_ID ON physical_resources_dtls (PHYSICAL_RESOURCE_ID);

/* SQLINES DEMO *** for table physical_resources_hist */

CREATE TABLE physical_resources_hist (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  PHYSICAL_RESOURCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  RESOURCE_SUB_TYPE int DEFAULT NULL,
  RESOURCE_ID int NOT NULL,
  RES_MODEL_ID bigint DEFAULT NULL,
  RESOURCE_EXP_DAYS int DEFAULT NULL,
  RESOURCE_EXPIRY_DATE date DEFAULT NULL,
  SERIAL_NUMBER varchar(25) DEFAULT NULL,
  MAC_ADDRESS varchar(25) DEFAULT NULL,
  OTHER_DETAILS json DEFAULT NULL,
  MANUFACTURED_DATE timestamp(0) DEFAULT NULL,
  WARRANTY_EXP_DATE timestamp(0) DEFAULT NULL,
  VERSION_NO varchar(2) DEFAULT NULL,
  FILE_ID int DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE physical_resources_hist_seq RESTART WITH 422;

/* SQLINES DEMO *** for table pop_device_master */

CREATE TABLE pop_device_master (
  POP_DEVICE_RECORD_ID bigint NOT NULL,
  TENANT_POP_DEVICE_ID bigint NOT NULL,
  POP_DEVICE_NAME varchar(200) DEFAULT NULL,
  POP_DEVICE_TYPE varchar(50) NOT NULL,
  POP_DEVICE_SERIALNO varchar(50) DEFAULT NULL,
  POP_DEVICE_IPADDRESS varchar(100) DEFAULT NULL,
  POP_DEVICE_PORTS smallint DEFAULT '0',
  POP_DEVICE_PORTS_USED smallint DEFAULT '0',
  POP_DEVICE_PORTS_FREE smallint DEFAULT '0',
  TENANT_ID bigint NOT NULL,
  POP_RECORD_ID int NOT NULL,
  DEVICE_TYPE_RECORD_ID bigint NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  PRIMARY KEY (POP_DEVICE_RECORD_ID)
,
  CONSTRAINT POP_DEVICE_fk1 FOREIGN KEY (POP_RECORD_ID) REFERENCES pop_master (POP_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT POP_DEVICE_fk2 FOREIGN KEY (DEVICE_TYPE_RECORD_ID) REFERENCES pop_device_types_master (DEVICE_TYPE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX POP_DEVICE_fk1 ON pop_device_master (POP_RECORD_ID);
CREATE INDEX POP_DEVICE_fk2 ON pop_device_master (DEVICE_TYPE_RECORD_ID);

/* SQLINES DEMO *** for table pop_device_ports */

CREATE TABLE pop_device_ports (
  POP_DEVICE_PORT_RECORD_ID bigint NOT NULL,
  POP_DEVICE_PORT_ID bigint NOT NULL,
  TOTAL_SLOTS int NOT NULL,
  USED_SLOTS int NOT NULL DEFAULT '0',
  FREE_SLOTS int NOT NULL DEFAULT '0',
  ASSIGNED_TO bigint DEFAULT NULL,
  POP_DEVICE_RECORD_ID bigint NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  PRIMARY KEY (POP_DEVICE_PORT_RECORD_ID)
,
  CONSTRAINT POP_DP_fk1 FOREIGN KEY (POP_DEVICE_RECORD_ID) REFERENCES pop_device_master (POP_DEVICE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX POP_DP_fk1 ON pop_device_ports (POP_DEVICE_RECORD_ID);

/* SQLINES DEMO *** for table pop_device_types_lob_services */

CREATE TABLE pop_device_types_lob_services (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  DEVICE_TYPE_RECORD_ID bigint NOT NULL,
  LOB_ID int NOT NULL,
  SERVICE_ID int NOT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT PDT_LOB_SRC_UK1 UNIQUE (DEVICE_TYPE_RECORD_ID,LOB_ID,SERVICE_ID),
  CONSTRAINT PDTLS_FK1 FOREIGN KEY (DEVICE_TYPE_RECORD_ID) REFERENCES pop_device_types_master (DEVICE_TYPE_RECORD_ID)
) ;

/* SQLINES DEMO *** for table pop_device_types_master */

CREATE TABLE pop_device_types_master (
  DEVICE_TYPE_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  TENANT_TYPE_RECORD_ID bigint NOT NULL,
  DEVICE_TYPE varchar(50) NOT NULL,
  PRIMARY KEY (DEVICE_TYPE_RECORD_ID)
) ;

/* SQLINES DEMO *** for table pop_geographic_details */

CREATE TABLE pop_geographic_details (
  POP_GEOGRAPHIC_DETAIL_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  POP_RECORD_ID int NOT NULL,
  GEOGRAPHIC_INFO varchar(250) NOT NULL,
  POP_RIVER_RADIUS char(1) NOT NULL DEFAULT 'N',
  POP_CANAL_RADIUS char(1) NOT NULL DEFAULT 'N',
  POP_MOUNTAIN_RADIUS char(1) NOT NULL DEFAULT 'N',
  POP_ROUGH_TERRAIN_RADIUS char(1) NOT NULL DEFAULT 'N',
  STATUS smallint NOT NULL DEFAULT '13',
  PRIMARY KEY (POP_GEOGRAPHIC_DETAIL_ID)
,
  CONSTRAINT PGD_FK1 FOREIGN KEY (POP_RECORD_ID) REFERENCES pop_master (POP_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX PGD_FK1 ON pop_geographic_details (POP_RECORD_ID);

/* SQLINES DEMO *** for table pop_master */

CREATE TABLE pop_master (
  POP_RECORD_ID int NOT NULL,
  TENANT_POP_ID int NOT NULL,
  POP_NAME varchar(100) NOT NULL,
  POP_CODE varchar(10) DEFAULT NULL,
  POP_TYPE varchar(30) NOT NULL,
  POP_ADDRESS varchar(150) NOT NULL,
  LATTITUDE decimal(10,6) DEFAULT '0.000000',
  LONGITUDE decimal(10,6) DEFAULT '0.000000',
  COVERAGE_RADIUS decimal(10,3) DEFAULT '0.000',
  EXPECTED_CONNECTIONS int DEFAULT '0',
  TENANT_ID bigint NOT NULL,
  COUNTRY_RECORD_ID int NOT NULL,
  STATE_RECORD_ID int NOT NULL,
  DISTRICT_RECORD_ID int NOT NULL,
  CITY_RECORD_ID int NOT NULL,
  MANDAL_RECORD_ID int NOT NULL,
  VILLAGE_RECORD_ID int NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  PRIMARY KEY (POP_RECORD_ID)
) ;

CREATE INDEX idx_1 ON pop_master (LATTITUDE);
CREATE INDEX idx_2 ON pop_master (LONGITUDE);
CREATE INDEX idx_3 ON pop_master (COVERAGE_RADIUS);
CREATE INDEX idx_4 ON pop_master (TENANT_ID,COUNTRY_RECORD_ID,STATE_RECORD_ID,DISTRICT_RECORD_ID,CITY_RECORD_ID,MANDAL_RECORD_ID,VILLAGE_RECORD_ID);

/* SQLINES DEMO *** for table pop_nonservice_locations */

CREATE TABLE pop_nonservice_locations (
  POP_NONSERVICE_LOCATION_ID bigint NOT NULL,
  POP_RECORD_ID int NOT NULL,
  MANDAL_RECORD_ID int NOT NULL,
  VILLAGE_RECORD_ID int NOT NULL,
  REASON varchar(100) DEFAULT NULL,
  REAMRKS text,
  STATUS smallint NOT NULL DEFAULT '13',
  PRIMARY KEY (POP_NONSERVICE_LOCATION_ID)
,
  CONSTRAINT PNSL_FK1 FOREIGN KEY (POP_RECORD_ID) REFERENCES pop_device_master (POP_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX PNSL_FK1 ON pop_nonservice_locations (POP_RECORD_ID);

/* SQLINES DEMO *** for table pop_slot_details */

CREATE TABLE pop_slot_details (
  SLOT_RECORD_ID bigint NOT NULL,
  POP_RECORD_ID int NOT NULL,
  POP_DEVICE_RECORD_ID bigint NOT NULL,
  SPLITTER_ID bigint DEFAULT NULL,
  POP_DEVICE_PORT_RECORD_ID bigint NOT NULL,
  SLOT_SEQUENCE_NO int NOT NULL,
  ASSIGNED_TO bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  PRIMARY KEY (SLOT_RECORD_ID)
,
  CONSTRAINT POP_SD_FK1 FOREIGN KEY (POP_DEVICE_RECORD_ID) REFERENCES pop_device_master (POP_DEVICE_RECORD_ID)
) ;

CREATE INDEX POP_SD_FK1 ON pop_slot_details (POP_DEVICE_RECORD_ID);

/* SQLINES DEMO *** for table pop_splitter_details */

CREATE TABLE pop_splitter_details (
  SPLITTER_ID bigint NOT NULL,
  POP_DEVICE_PORT_RECORD_ID bigint NOT NULL,
  POP_RECORD_ID bigint NOT NULL,
  TOTAL_SLOTS int NOT NULL DEFAULT '0',
  TOTAL_SLOTS_ALLOCATED int NOT NULL DEFAULT '0',
  TOTAL_SLOTS_FREE int NOT NULL DEFAULT '0',
  LATTITUDE decimal(10,5) DEFAULT NULL,
  LONGITUDE decimal(10,5) DEFAULT NULL,
  SPLITTER_LEVEL smallint NOT NULL,
  PARENT_SPLITTER_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (SPLITTER_ID)
,
  CONSTRAINT POP_SPD_FK1 FOREIGN KEY (POP_DEVICE_PORT_RECORD_ID) REFERENCES pop_device_ports (POP_DEVICE_PORT_RECORD_ID)
) ;

CREATE INDEX POP_SPD_FK1 ON pop_splitter_details (POP_DEVICE_PORT_RECORD_ID);

/* SQLINES DEMO *** for table prepaid_balances */

CREATE TABLE prepaid_balances (
  BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_RENEWED_DATE date DEFAULT NULL,
  PLAN_END_DATE date NOT NULL,
  USAGE_ALLOCATED decimal(10,2) NOT NULL DEFAULT '0.00',
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE_DATE date DEFAULT NULL,
  ACCOUNT_USED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  FROM_ACCOUNT_BALANCE timestamp(0) DEFAULT NULL,
  FROM_PLAN_BALANCE timestamp(0) DEFAULT NULL,
  LAST_BALANCE_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_BALANCE_CREDIT_TANSACTION_ID bigint DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT int DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT int DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_DEBIT_TANSACTION_ID bigint DEFAULT NULL,
  LAST_BALANCE_DEBIT_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_PRE_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (BALANCE_ID),
  CONSTRAINT CUSTOMER_ID_2 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,SERVICE_PACKAGE_ID,PLAN_START_DATE)
,
  CONSTRAINT PB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX PB_FK1 ON prepaid_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table prepaid_balances_hist */

CREATE TABLE prepaid_balances_hist (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_RENEWED_DATE date DEFAULT NULL,
  PLAN_END_DATE date NOT NULL,
  USAGE_ALLOCATED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE_DATE date DEFAULT NULL,
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_BALANCE_CREDIT_TANSACTION_ID bigint DEFAULT NULL,
  ACCOUNT_USED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  FROM_ACCOUNT_BALANCE timestamp(0) DEFAULT NULL,
  FROM_PLAN_BALANCE timestamp(0) DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT int DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT int DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_DEBIT_TANSACTION_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  RECORD_MOVED_DATE date NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  LAST_BALANCE_DEBIT_DATE timestamp(0) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table priority_groups */

CREATE TABLE priority_groups (
  PRIORITY_GROUP_ID int NOT NULL,
  PRIORITY_GROUP_FOR varchar(25) NOT NULL,
  CUSTOMER_TYPE varchar(15) NOT NULL DEFAULT 'ANY',
  CUSTOMER_SUB_TYPE varchar(15) NOT NULL DEFAULT 'ANY',
  SLA_PACKAGE_TYPE varchar(15) NOT NULL DEFAULT 'ANY',
  PRIORITY smallint DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  PRIMARY KEY (PRIORITY_GROUP_ID),
  CONSTRAINT PG_UK1 UNIQUE (PRIORITY_GROUP_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table related_parties */

CREATE TABLE related_parties (
  RELATIONSHIP_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RELATED_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  ROLE_ID int NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (RELATIONSHIP_ID)
,
  CONSTRAINT RP_FK1 FOREIGN KEY (ROLE_ID) REFERENCES partyroles (ROLE_ID),
  CONSTRAINT RP_FK2 FOREIGN KEY (CUSTOMER_ID) REFERENCES customer_master (CUSTOMER_ID)
) ;

CREATE INDEX RP_FK1 ON related_parties (ROLE_ID);
CREATE INDEX RP_FK2 ON related_parties (CUSTOMER_ID);

/* SQLINES DEMO *** for table reminder_notification_types */

CREATE TABLE reminder_notification_types (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TRANSACTION_TYPE smallint NOT NULL,
  REQUEST_TYPE_ID int NOT NULL DEFAULT '-1',
  ACTIVITY_ID int DEFAULT NULL,
  ACTION_ID int DEFAULT NULL,
  SERVICE_ID int DEFAULT NULL,
  COMPLAINT_TYPE_ID int DEFAULT NULL,
  REMINDER_TIME int NOT NULL DEFAULT '0',
  REMINDER_TIME_UNIT smallint NOT NULL DEFAULT '0',
  NEXT_REMINDER_TIME int NOT NULL DEFAULT '0',
  PRE_POST_NOTIFICATION smallint NOT NULL DEFAULT '1',
  SLA_APPLICABLE char(1) NOT NULL DEFAULT 'N',
  MESSAGE_TEMPLATE_ID int DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table reminder_notifications */

CREATE TABLE reminder_notifications (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TRANSACTION_TYPE smallint NOT NULL,
  TRANSACTION_ID int NOT NULL DEFAULT '-1',
  USER_ID int DEFAULT NULL,
  SUPERVISOR_ID json DEFAULT NULL,
  REMINDER_CONTENT mediumtext,
  NOTIFICATION_ID bigint DEFAULT NULL,
  REMINDER_SENT_DATETIME timestamp(0) DEFAULT NULL,
  CYCLE_NUMBER smallint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table request_types */

CREATE TABLE request_types (
  REQUEST_TYPE_ID smallint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  TYPE_CODE smallint DEFAULT NULL,
  ACTIVITY_TYPE_ID int NOT NULL,
  REQUEST_NAME varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  PRIMARY KEY (REQUEST_TYPE_ID)
) ;

/* SQLINES DEMO *** for table resource_related_parties */

CREATE TABLE resource_related_parties (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  BASE_RESOURCE_TYPE int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  RELATED_PARTY_ID bigint DEFAULT NULL,
  RELATED_PARTY_ROLE smallint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE resource_related_parties_seq RESTART WITH 977;

/* SQLINES DEMO *** for table resource_summary */

CREATE TABLE resource_summary (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  RESOURCE_TYPE int NOT NULL,
  RESOURCE_SUB_TYPE int NOT NULL,
  RESOURCE_ID bigint NOT NULL,
  RESOURCE_MODEL_ID bigint NOT NULL,
  RESOURCE_VALUE decimal(10,2) DEFAULT NULL,
  RESOURCE_LOADED int DEFAULT NULL,
  RESOURCE_ALLOCATED int DEFAULT NULL,
  RESOURCE_BALANCE int DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE resource_summary_seq RESTART WITH 100028;

/* SQLINES DEMO *** for table retiring_products */

CREATE TABLE retiring_products (
  RETIRING_PRODUCT_ID bigint NOT NULL,
  RETIRING_RP_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  REASON_CODE varchar(10) NOT NULL,
  DESCRIPTION varchar(255) DEFAULT NULL,
  ACTIVITY_ID int NOT NULL,
  SERVICE_DISRUPTION char(1) NOT NULL,
  SD_DURATION int DEFAULT NULL,
  SD_DURATION_UNIT int DEFAULT NULL,
  REPLACED_RP_ID int NOT NULL,
  CUST_CONSENT_REQUIRED char(1) DEFAULT NULL,
  COMMUNICATION_PLANNED_DATE date DEFAULT NULL,
  CUST_CONSENT_DURATION_LIMIT int DEFAULT NULL,
  TARGET_RETIREMENT_DATE date DEFAULT NULL,
  ACTIVE_CUST_ACCTS_COUNT int DEFAULT NULL,
  CUST_ACCTS_ACCEPTED_COUNT int DEFAULT NULL,
  CUST_ACCTS_ACCEPTED_REPLACED_PLAN int DEFAULT NULL,
  CUST_ACCTS_ACCEPTED_OPTED_OUT int DEFAULT NULL,
  CUST_ACCTS_MIGRATED_DIFF_PLAN int DEFAULT NULL,
  CUST_ACCTS_DEACTIVATED int DEFAULT NULL,
  ACTUAL_RETIREMENT_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RETIRING_PRODUCT_ID)
) ;

CREATE INDEX UK_RP_1 ON retiring_products (RETIRING_RP_ID);

/* SQLINES DEMO *** for table reverse_roles */

CREATE TABLE reverse_roles (
  MAPPING_ID bigint NOT NULL,
  ROLE_ID int NOT NULL,
  REVERSE_ROLE_ID int NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (MAPPING_ID),
  CONSTRAINT RR_UK1 UNIQUE (ROLE_ID,REVERSE_ROLE_ID,EFFECTIVE_FROM),
  CONSTRAINT RR_FK1 FOREIGN KEY (ROLE_ID) REFERENCES partyroles (ROLE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

/* SQLINES DEMO *** for table sequence_nos */

CREATE TABLE sequence_nos (
  ID_NAME varchar(50) NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  ID_VALUE bigint check (ID_VALUE > 0) NOT NULL,
  ID_PREFIX varchar(5) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  PRIMARY KEY (ID_NAME)
) ;

/* SQLINES DEMO *** for table service_level_details */

CREATE TABLE service_level_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL DEFAULT '-1',
  SERVICE_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_NAME varchar(200) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table service_level_details_bkp */

CREATE TABLE service_level_details_bkp (
  RECORD_ID bigint NOT NULL DEFAULT '0',
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  SERVICE_ID bigint DEFAULT NULL,
  SERVICE_LEVEL varchar(25)  DEFAULT NULL,
  SERVICE_DIRECTION varchar(25)  DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50)  DEFAULT NULL,
  CREATED_IPADDR varchar(100)  DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50)  DEFAULT NULL,
  MODIFIED_IPADDR varchar(100)  DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */
) ;

/* SQLINES DEMO *** for table service_level_details_hist */

CREATE TABLE service_level_details_hist (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL DEFAULT '-1',
  SERVICE_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_NAME varchar(200) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table service_level_details_hist_bkp */

CREATE TABLE service_level_details_hist_bkp (
  RECORD_ID bigint NOT NULL DEFAULT '0',
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  SERVICE_ID bigint DEFAULT NULL,
  SERVICE_LEVEL varchar(25)  DEFAULT NULL,
  SERVICE_DIRECTION varchar(25)  DEFAULT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50)  DEFAULT NULL,
  CREATED_IPADDR varchar(100)  DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50)  DEFAULT NULL,
  MODIFIED_IPADDR varchar(100)  DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */
) ;

/* SQLINES DEMO *** for table shipment_tracking */

CREATE TABLE shipment_tracking (
  TRACK_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  AGENCY_TRACKING_ID varchar(30) DEFAULT NULL,
  TRACKED_DATE_TIME timestamp(0) DEFAULT NULL,
  WORKORDER_ID bigint NOT NULL,
  DEL_AGENCY_ID bigint NOT NULL,
  DEL_AGENT_ID bigint NOT NULL,
  DEL_AGENT_NAME varchar(100) NOT NULL,
  DEL_REQ_SUBMITTED_DATE timestamp(0) NOT NULL,
  LAST_ADDRESS text,
  ESTIMATED_DEL_DATE timestamp(0) DEFAULT NULL,
  CHECKPOINTS_LIST json DEFAULT NULL,
  STATUS smallint NOT NULL,
  STATUS_CHANGE_DATE timestamp(0) DEFAULT NULL,
  STATUS_CHANGE_REASON varchar(255) DEFAULT NULL,
  PRIMARY KEY (TRACK_RECORD_ID)
) ;

/* SQLINES DEMO *** for table stg_auto_replenishment_definitions */

CREATE TABLE stg_auto_replenishment_definitions (
  REPL_DEF_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  PREPAID_CUSTOMER_ACCT_ID bigint NOT NULL,
  REPLENISHING_CUSTOMER_ID bigint NOT NULL,
  REPLENISHING_BA_ID bigint NOT NULL,
  REPLENISHING_CA_ID bigint DEFAULT NULL,
  REPLENISHING_OTHER_ID bigint DEFAULT NULL,
  REPLENISHING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_ACCOUNT_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_PREPAID_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  MIN_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_MIN_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  SOURCE_OF_REPLENISHMENT smallint NOT NULL DEFAULT '11',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (REPL_DEF_RECORD_ID)
) ;

/* SQLINES DEMO *** for table stg_billing_accounts */

CREATE TABLE stg_billing_accounts (
  BILLING_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  TNT_BILLING_ACCOUNT_ID varchar(25) DEFAULT NULL,
  BILLING_ACCOUNT_NAME varchar(50)  NOT NULL DEFAULT '-1' COMMENT 'To Identify the Billing Account Name for Postpaid Customer',
  DELIVERY_MODE smallint NOT NULL DEFAULT '1',
  IS_AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_TAX_EXEMPT char(1) DEFAULT 'N',
  ADDL_COL1 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL2 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  ADDL_COL3 varchar(100) DEFAULT NULL COMMENT 'To Store any additional information of billin account',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_BILLING_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (BILLING_ACCOUNT_ID)
) ;

/* SQLINES DEMO *** for table stg_contract_charge_taxes */

CREATE TABLE stg_contract_charge_taxes (
  CHARGE_TAX_RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  CHARGE_RECORD_ID bigint NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  TAX_ID bigint NOT NULL,
  TAX_TYPE char(1) NOT NULL,
  TAX_TYPE_VALUE decimal(10,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CHARGE_TAX_RECORD_ID)
,
  CONSTRAINT CNTR_SCT_FK1 FOREIGN KEY (CHARGE_RECORD_ID) REFERENCES stg_contract_charges (CHARGE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX CNTR_SCT_FK1 ON stg_contract_charge_taxes (CHARGE_RECORD_ID);

/* SQLINES DEMO *** for table stg_contract_charges */

CREATE TABLE stg_contract_charges (
  CHARGE_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_LEVEL varchar(25) DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(5,2) DEFAULT NULL,
  CHARGE_DESCRIPTION varchar(255) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CHARGE_RECORD_ID)
) ;

/* SQLINES DEMO *** for table stg_contract_charges_details */

CREATE TABLE stg_contract_charges_details (
  DETAIL_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CHARGE_RECORD_ID bigint NOT NULL,
  CHARGE_ID int NOT NULL,
  PARAMETER_RECORD_ID int NOT NULL,
  PARAMETER_NAME varchar(30) NOT NULL,
  PARAMETER_VALUE_TYPE varchar(25) NOT NULL,
  UNIT_OF_CHARGE smallint DEFAULT NULL,
  NO_OF_UNITS decimal(10,5) DEFAULT '0.00000',
  CHARGE_UNIT decimal(10,5) DEFAULT '0.00000',
  PARAMETER_VALUE varchar(255) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  PRIMARY KEY (DETAIL_RECORD_ID)
,
  CONSTRAINT SCCD_FK1 FOREIGN KEY (CHARGE_RECORD_ID) REFERENCES stg_contract_charges (CHARGE_RECORD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SCCD_FK1 ON stg_contract_charges_details (CHARGE_RECORD_ID);

/* SQLINES DEMO *** for table stg_contract_device_installment */

CREATE TABLE stg_contract_device_installment (
  RECORD_ID bigint NOT NULL,
  CONTRACT_DEVICE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  EMI_AMOUNT decimal(7,2) DEFAULT '0.00',
  TOTAL_EMI_COUNT int check (TOTAL_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  COMPLETED_EMI_COUNT int check (COMPLETED_EMI_COUNT > 0) NOT NULL DEFAULT '0',
  EMI_START_MONTH int check (EMI_START_MONTH > 0) DEFAULT NULL,
  EMI_END_MONTH int check (EMI_END_MONTH > 0) DEFAULT NULL,
  EMI_LAST_MONTH int check (EMI_LAST_MONTH > 0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT STG_CNTR_DEVICE_INST_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,CONTRACT_DEVICE_ID)
,
  CONSTRAINT STG_CNTR_DEVICE_INST_FK1 FOREIGN KEY (CONTRACT_DEVICE_ID) REFERENCES stg_contract_devices (CONTRACT_DEVICE_ID)
) ;

CREATE INDEX STG_CNTR_DEVICE_INST_FK1 ON stg_contract_device_installment (CONTRACT_DEVICE_ID);

/* SQLINES DEMO *** for table stg_contract_devices */

CREATE TABLE stg_contract_devices (
  CONTRACT_DEVICE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint DEFAULT NULL,
  LOB_ID int NOT NULL,
  SLOT_RECORD_ID bigint DEFAULT NULL,
  DEVICE_LEASE_TYPE char(1) NOT NULL DEFAULT 'N',
  DEVICE_LOCATION varchar(255) DEFAULT NULL,
  RESOURCE_OWN_TYPE smallint DEFAULT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  IS_PRIMARY_RESOURCE char(1) DEFAULT 'N' COMMENT 'To Identify the Resource is Primary or not',
  RESOURCE_ATTRIBUTES text COMMENT 'To store the Resource level attributes',
  RESOURCE_ID int DEFAULT NULL,
  RES_MODEL_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  RESOURCE_CATEGORY int DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTRACT_DEVICE_ID)
,
  CONSTRAINT STG_CNTR_DEVICES_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX STG_CNTR_DEVICES_FK1 ON stg_contract_devices (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_contract_discounts */

CREATE TABLE stg_contract_discounts (
  CUSTOMER_DISC_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint DEFAULT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  DISCOUNT_ID bigint NOT NULL,
  DISCOUNT_PERIOD int DEFAULT NULL,
  DISCOUNT_START_DATE date DEFAULT NULL,
  DISCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_DISC_ID)
,
  CONSTRAINT STG_CNTR_DISC_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX STG_CNTR_DISC_FK1 ON stg_contract_discounts (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_contract_offers */

CREATE TABLE stg_contract_offers (
  CONTRACT_OFFER_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint DEFAULT NULL,
  OFFER_ID bigint NOT NULL,
  OFFER_PERIOD int DEFAULT NULL,
  OFFER_START_DATE date DEFAULT NULL,
  OFFER_END_DATE date DEFAULT NULL,
  OFFER_CONTRACT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTRACT_OFFER_ID)
,
  CONSTRAINT STG_CNTR_OFFER_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX STG_CNTR_OFFER_FK1 ON stg_contract_offers (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_contract_override_onetime_charges */

CREATE TABLE stg_contract_override_onetime_charges (
  OVERRIDE_ONETIME_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_DATE date DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (OVERRIDE_ONETIME_CHARGE_ID)
,
  CONSTRAINT SCOOTC_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES stg_customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

CREATE INDEX SCOOTC_FK1 ON stg_contract_override_onetime_charges (CUSTOMER_CONTRACT_ID);

/* SQLINES DEMO *** for table stg_contract_override_recurring_charges */

CREATE TABLE stg_contract_override_recurring_charges (
  OVERRIDE_CHARGE_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  DISCOUNT decimal(4,2) DEFAULT NULL,
  TAX_AMOUNT decimal(10,2) DEFAULT NULL,
  CHARGE_PER_DAY decimal(7,2) DEFAULT '0.00',
  TAX_PER_DAY decimal(7,2) DEFAULT '0.00',
  ORG_CHARGE_AMOUNT decimal(10,2) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (OVERRIDE_CHARGE_ID)
,
  CONSTRAINT SCORC_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES stg_customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

CREATE INDEX SCORC_FK1 ON stg_contract_override_recurring_charges (CUSTOMER_CONTRACT_ID);

/* SQLINES DEMO *** for table stg_contract_service_package_details */

CREATE TABLE stg_contract_service_package_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_NAME varchar(50) DEFAULT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table stg_contract_service_packages */

CREATE TABLE stg_contract_service_packages (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  LOB_ID int DEFAULT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  PACKAGE_TYPE varchar(10) DEFAULT NULL,
  SERVICE_ID bigint NOT NULL,
  IS_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_SERVICE_PACKAGE_SHARED smallint NOT NULL DEFAULT '2',
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  SP_END_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  SUSPENSION_DATE date DEFAULT NULL,
  RESUME_DATE date DEFAULT NULL,
  IS_CHARGE_OVERRIDEN smallint NOT NULL DEFAULT '0',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT STG_CNTR_SP_UK1 UNIQUE (CUSTOMER_CONTRACT_ID,EFFECTIVE_FROM,SERVICE_PACKAGE_ID),
  CONSTRAINT STG_CNTR_SP_FK1 FOREIGN KEY (CUSTOMER_CONTRACT_ID) REFERENCES stg_customer_contracts (CUSTOMER_CONTRACT_ID)
) ;

/* SQLINES DEMO *** for table stg_cug_plan */

CREATE TABLE stg_cug_plan (
  CUG_GROUP_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  GROUP_TYPE varchar(15) DEFAULT NULL COMMENT 'To Identify the customer group type like CUG/FnF',
  ALLOWED_GROUP_COUNT smallint DEFAULT '0' COMMENT 'To Identify how many customer are allowed to add',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUG_GROUP_ID)
,
  CONSTRAINT STG_CUG_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX STG_CUG_FK1 ON stg_cug_plan (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_cug_plan_mapping */

CREATE TABLE stg_cug_plan_mapping (
  MAPPING_RECORD_ID bigint NOT NULL,
  CUG_GROUP_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_RECORD_ID)
,
  CONSTRAINT SCPM_FK1 FOREIGN KEY (CUG_GROUP_ID) REFERENCES stg_cug_plan (CUG_GROUP_ID)
) ;

CREATE INDEX SCPM_FK1 ON stg_cug_plan_mapping (CUG_GROUP_ID);

/* SQLINES DEMO *** for table stg_customer_acc_mgr_mapping */

CREATE TABLE stg_customer_acc_mgr_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  USER_ID int NOT NULL,
  USER_NAME varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REMARKS text,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) NOT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT STG_CAMM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX STG_CAMM_FK1 ON stg_customer_acc_mgr_mapping (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_account_balances */

CREATE TABLE stg_customer_account_balances (
  ACCOUNT_BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  BALANCE_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  USED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_UPDATE_TYPE varchar(10) DEFAULT NULL,
  LAST_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_CREDIT_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_DEBIT_DATE timestamp(0) DEFAULT NULL,
  LAST_DEBIT_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_EOD_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_EOD_TRANS_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_ACC_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (ACCOUNT_BALANCE_ID),
  CONSTRAINT CUSTOMER_ID UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID)
,
  CONSTRAINT SCAB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX SCAB_FK1 ON stg_customer_account_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_customer_account_details */

CREATE TABLE stg_customer_account_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '91',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SCAD_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SCAD_FK1 ON stg_customer_account_details (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_customer_account_service_preferences */

CREATE TABLE stg_customer_account_service_preferences (
  ASP_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  LOB_ID int NOT NULL,
  SERVICE_ID int NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  SLOT_RECORD_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ASP_RECORD_ID)
,
  CONSTRAINT SASP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
)  ;

ALTER SEQUENCE stg_customer_account_service_preferences_seq RESTART WITH 2359;

CREATE INDEX SASP_FK1 ON stg_customer_account_service_preferences (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_accounts */

CREATE TABLE stg_customer_accounts (
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_DATE date DEFAULT NULL,
  CUSTOMER_ACCOUNT_NAME varchar(150) DEFAULT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(20) NOT NULL,
  TNT_ACCOUNT_ID varchar(25) DEFAULT NULL,
  CUSTOMER_RELATIONSHIP varchar(100) DEFAULT NULL,
  ID_TYPE varchar(50) DEFAULT NULL COMMENT 'customer specific identity type like NIN,Passport',
  ID_TYPE_VALUE varchar(50) DEFAULT NULL COMMENT 'customer specific identity Number',
  DURATION smallint DEFAULT NULL,
  DURATION_UNIT smallint DEFAULT NULL,
  RENEWAL_TYPE smallint DEFAULT NULL,
  SALES_CHANNEL varchar(100) DEFAULT NULL,
  CHANNEL_CODE varchar(50) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  ACTIVATION_DATE date DEFAULT NULL,
  DEACTIVATION_DATE date DEFAULT NULL,
  IS_EKYC_COLLECTED char(1) DEFAULT 'N',
  CUSTOMER_DECLARATION char(1) NOT NULL DEFAULT 'N',
  PREFERRED_COMM_CHANNEL varchar(15) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AUTO_DEBIT char(1) NOT NULL DEFAULT 'N',
  IS_CUG char(1) NOT NULL DEFAULT 'N',
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  ACCOUNT_END_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ACCOUNT_ID)
,
  CONSTRAINT SCA_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SCA_FK1 ON stg_customer_accounts (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_address */

CREATE TABLE stg_customer_address (
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(255) NOT NULL,
  ADDRESS_LINE1 varchar(255) DEFAULT NULL,
  ADDRESS_LINE2 varchar(255) DEFAULT NULL,
  ADDRESS_LOCALTY varchar(150) DEFAULT NULL,
  ADDRESS_VILLAGE_ID int DEFAULT NULL,
  ADDRESS_MANDAL_ID int DEFAULT NULL,
  ADDRESS_MANDAL varchar(50) DEFAULT NULL,
  ADDRESS_CITY_ID int DEFAULT NULL,
  ADDRESS_CITY varchar(100) DEFAULT NULL,
  ADDRESS_DISTRICT_ID int DEFAULT NULL,
  ADDRESS_DISTRICT varchar(50) DEFAULT NULL,
  ADDRESS_STATE_ID int DEFAULT NULL,
  ADDRESS_STATE varchar(100) DEFAULT NULL,
  ADDRESS_ZIPCODE_ID int DEFAULT NULL,
  ADDRESS_ZIPCODE varchar(10) DEFAULT NULL,
  ADDRESS_COUNTRY_ID int DEFAULT NULL,
  ADDRESS_COUNTRY varchar(100) DEFAULT NULL,
  REGION_ID int DEFAULT NULL,
  REGION varchar(255) NOT NULL,
  TIER_ID int DEFAULT NULL,
  TIER varchar(255) NOT NULL,
  PHONE varchar(15) DEFAULT NULL,
  FAX varchar(15) DEFAULT NULL,
  LATTITUDE decimal(10,6) DEFAULT '0.000000',
  LONGITUDE decimal(10,6) DEFAULT '0.000000',
  ALTITUDE decimal(10,6) DEFAULT '0.000000',
  ADDRESS_LEVEL varchar(10) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ADDRESS_ID)
) ;

/* SQLINES DEMO *** for table stg_customer_address_mapping */

CREATE TABLE stg_customer_address_mapping (
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(30) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_ID)
,
  CONSTRAINT SCADM_FK1 FOREIGN KEY (ADDRESS_ID) REFERENCES stg_customer_address (ADDRESS_ID)
) ;

CREATE INDEX idx_cust_id ON stg_customer_address_mapping (CUSTOMER_ID);
CREATE INDEX idx_node_id ON stg_customer_address_mapping (NODE_ID);
CREATE INDEX idx_ba_id ON stg_customer_address_mapping (BILLING_ACCOUNT_ID);
CREATE INDEX idx_ca_id ON stg_customer_address_mapping (CUSTOMER_ACCOUNT_ID);
CREATE INDEX idx_add_type ON stg_customer_address_mapping (ADDRESS_TYPE);
CREATE INDEX idx_dates ON stg_customer_address_mapping (EFFECTIVE_FROM,EFFECTIVE_TO);
CREATE INDEX idx_add_id ON stg_customer_address_mapping (ADDRESS_ID);

/* SQLINES DEMO *** for table stg_customer_balances */

CREATE TABLE stg_customer_balances (
  RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TOTAL_BILLED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_PAID_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_CURRENT_OUTSTANDING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_PREVIOUS_OUTSTANDING_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  LAST_CUSTOMER_BILL_NUMBER varchar(100) DEFAULT NULL,
  LAST_OPEN_BILL_NUMBER varchar(100) DEFAULT NULL,
  TOTAL_DISPUTED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  TOTAL_ADJUSTMENTS_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_ADJUSTMENT_ID bigint DEFAULT NULL,
  TOTAL_UNBILLED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_UPDATE date DEFAULT NULL,
  LAST_ADJUSTMENT_UPDATE date DEFAULT NULL,
  LAST_UNBILLED_AMOUNT_UPDATE date DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUST_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT STG_CB_UK1 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,BILLING_ACCOUNT_ID)
,
  CONSTRAINT SCB_FK2 FOREIGN KEY (BILLING_ACCOUNT_ID) REFERENCES stg_billing_accounts (BILLING_ACCOUNT_ID),
  CONSTRAINT STG_CB_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SCB_FK2 ON stg_customer_balances (BILLING_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_customer_bill_cycles */

CREATE TABLE stg_customer_bill_cycles (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1' COMMENT 'To Identify the Billing Account ID for Postpaid Customer',
  BILL_CYCLE_ID varchar(20) DEFAULT NULL,
  EFFECTIVE_FROM date DEFAULT NULL,
  EFFECTIVE_TO date DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT SCBC_UK1 UNIQUE (CUSTOMER_ID,BILL_CYCLE_ID,EFFECTIVE_FROM,BILLING_ACCOUNT_ID)
,
  CONSTRAINT SCBC_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX CB_IDX1 ON stg_customer_bill_cycles (CUSTOMER_ID,BILL_CYCLE_ID);

/* SQLINES DEMO *** for table stg_customer_cart_items */

CREATE TABLE stg_customer_cart_items (
  CART_ITEM_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CART_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  QUANTITY int DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  CREATED_DATE timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY varchar(100) DEFAULT NULL,
  MODIFIED_DATE timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(100) DEFAULT NULL,
  PRIMARY KEY (CART_ITEM_ID)
,
  CONSTRAINT SCI_FK1 FOREIGN KEY (CART_ID) REFERENCES stg_customer_shp_cart (CART_ID)
) ;

CREATE INDEX SCI_FK1 ON stg_customer_cart_items (CART_ID);

/* SQLINES DEMO *** for table stg_customer_contacts */

CREATE TABLE stg_customer_contacts (
  CONTACT_ID bigint NOT NULL,
  CONTACT_TYPE varchar(50) DEFAULT NULL COMMENT 'primary or secondary',
  CONTACT_NAME varchar(50) DEFAULT NULL COMMENT 'contact name',
  DESIGNATION varchar(50) DEFAULT NULL COMMENT 'designation of the contact person',
  PRIMARY_EMAIL varchar(100) DEFAULT NULL,
  ALTERNATE_EMAIL varchar(100) DEFAULT NULL,
  PRIMARY_MOBILE varchar(15) DEFAULT NULL,
  ALTERNATE_MOBILE varchar(15) DEFAULT NULL,
  PRIMARY_LANDLINE_NO varchar(15) DEFAULT NULL,
  ALTERNATE_LANDLINE_NO varchar(15) DEFAULT NULL,
  FAX_NO varchar(15) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  CONTACT_LEVEL varchar(10) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTACT_ID),
  CONSTRAINT STG_CUST_CNCT_UK1 UNIQUE (CONTACT_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table stg_customer_contacts_mapping */

CREATE TABLE stg_customer_contacts_mapping (
  MAPPING_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CONTACT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_ID)
,
  CONSTRAINT SCCM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SCCM_FK3 ON stg_customer_contacts_mapping (CONTACT_ID);
CREATE INDEX SCCM_UK1 ON stg_customer_contacts_mapping (CUSTOMER_ID,NODE_ID,BILLING_ACCOUNT_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM);

/* SQLINES DEMO *** for table stg_customer_contracts */

CREATE TABLE stg_customer_contracts (
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  WO_ITEM_ID bigint DEFAULT NULL,
  TENANT_CONTRACT_ID varchar(20) DEFAULT NULL,
  CUSTOMER_CONFIRMED_DATE date DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  IS_RATEPLAN_SHARED smallint NOT NULL DEFAULT '2',
  IS_MAIN_CONTRACT_SHARED smallint NOT NULL DEFAULT '2',
  RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  RATE_PLAN_PURCHASED_DATE date DEFAULT NULL,
  RATE_PLAN_ACTIVATED_DATE date DEFAULT NULL,
  RATE_PLAN_DURATION int DEFAULT NULL,
  RATE_PLAN_QUANTITY int DEFAULT NULL,
  LOCKIN_PERIOD int NOT NULL,
  LOCKIN_EXPIRY_DATE date DEFAULT NULL,
  RATE_PLAN_END_DATE date DEFAULT NULL,
  RATE_PLAN_REV_END_DATE date DEFAULT NULL,
  RATE_PLAN_OVERRIDE char(1) DEFAULT NULL,
  OFFER_RATE_PLAN_TYPE varchar(50) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CONTRACT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_CONTRACT_ID)
,
  CONSTRAINT STG_CNTR_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID),
  CONSTRAINT STG_CNTR_FK2 FOREIGN KEY (WORK_ORDER_ID) REFERENCES stg_work_orders (WORK_ORDER_ID)
) ;

CREATE INDEX STG_CNTR_FK2 ON stg_customer_contracts (WORK_ORDER_ID);
CREATE INDEX STG_CNTR_FK1 ON stg_customer_contracts (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_customer_credit_limits */

CREATE TABLE stg_customer_credit_limits (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL DEFAULT '-1',
  NODE_ID bigint NOT NULL DEFAULT '-1',
  BILLING_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint NOT NULL DEFAULT '-1',
  CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00',
  IS_LIMIT_OVERRIDEN smallint NOT NULL DEFAULT '0',
  RECOMM_CREDIT_LIMIT decimal(7,2) NOT NULL DEFAULT '0.00',
  CREDIT_LIMIT_LEVEL smallint NOT NULL DEFAULT '3',
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT STG_CUST_CL_UK1 UNIQUE (CUSTOMER_ID,NODE_ID,BILLING_ACCOUNT_ID,CUSTOMER_ACCOUNT_ID,EFFECTIVE_FROM)
,
  CONSTRAINT SCCL_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID),
  CONSTRAINT SCCL_FK2 FOREIGN KEY (BILLING_ACCOUNT_ID) REFERENCES stg_billing_accounts (BILLING_ACCOUNT_ID)
) ;

CREATE INDEX SCCL_FK2 ON stg_customer_credit_limits (BILLING_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_customer_deposits */

CREATE TABLE stg_customer_deposits (
  DEPOSIT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  PAYMENT_ID bigint NOT NULL,
  CONTR_SRV_FEAT_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  SERVICE_PKG_ID bigint NOT NULL,
  GL_ID bigint NOT NULL DEFAULT '-1',
  DEPOSIT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  DEPOSIT_RECEIVED_DATE date NOT NULL,
  DEPOSIT_REMARKS text,
  DEPOSIT_RETURNED_DATE date DEFAULT NULL,
  DEPOSIT_RETURNED_REMARKS text,
  DEPOSIT_STATUS smallint NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (DEPOSIT_ID)
,
  CONSTRAINT stg_CUST_DEP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT stg_CUST_DEP_FK2 FOREIGN KEY (PAYMENT_ID) REFERENCES stg_payments (PAYMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX stg_CUST_DEP_FK1 ON stg_customer_deposits (CUSTOMER_ID);
CREATE INDEX stg_CUST_DEP_FK2 ON stg_customer_deposits (PAYMENT_ID);

/* SQLINES DEMO *** for table stg_customer_documents */

CREATE TABLE stg_customer_documents (
  DOCUMENT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  OPPORTUNITY_ID bigint DEFAULT NULL COMMENT 'added documents opportunity id',
  CUSTOMER_PROOF_TYPE varchar(150) DEFAULT NULL,
  DOCUMENT_TYPE varchar(255) NOT NULL,
  DOCUMENT_NAME varchar(255) NOT NULL,
  ORG_DOCUMENT_NAME varchar(255) DEFAULT NULL,
  VERSION int NOT NULL DEFAULT '1',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  DOCUMENT_PATH varchar(255) DEFAULT NULL,
  DOCUMENT_BASE64 text,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (DOCUMENT_ID)
,
  CONSTRAINT STG_CUST_DOCS_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX STG_CUST_DOCS_FK1 ON stg_customer_documents (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_hierarchy */

CREATE TABLE stg_customer_hierarchy (
  NODE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  TNT_NODE_ID varchar(25) DEFAULT NULL COMMENT 'tenant wise node ids',
  NODE_CODE varchar(25) DEFAULT NULL,
  NODE_NAME varchar(100) NOT NULL,
  NODE_LEVEL int NOT NULL,
  PAYMENT_LIABILITY varchar(1) NOT NULL DEFAULT 'Y',
  PARENT_ID bigint DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint DEFAULT NULL,
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_ACCOUNT_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (NODE_ID)
,
  CONSTRAINT SCH_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SCH_FK1 ON stg_customer_hierarchy (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_hierarchy_details */

CREATE TABLE stg_customer_hierarchy_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SCHD_FK1 FOREIGN KEY (NODE_ID) REFERENCES stg_customer_hierarchy (NODE_ID)
) ;

CREATE INDEX SCHD_FK1 ON stg_customer_hierarchy_details (NODE_ID);

/* SQLINES DEMO *** for table stg_customer_initial_bills */

CREATE TABLE stg_customer_initial_bills (
  CUSTOMER_BILL_NUMBER varchar(100) NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  BILL_DATE date NOT NULL,
  BILL_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  PAYMENT_ID bigint DEFAULT NULL,
  PAYMENT_AMOUNT decimal(10,2) DEFAULT '0.00',
  PAYMENT_RECEIVED_DATE date NOT NULL,
  STATUS smallint NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_BILL_NUMBER)
,
  CONSTRAINT STG_CUST_IB_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX STG_CUST_IB_FK1 ON stg_customer_initial_bills (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_master */

CREATE TABLE stg_customer_master (
  CUSTOMER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_CODE varchar(30) NOT NULL,
  TNT_CUSTOMER_ID varchar(25) DEFAULT NULL,
  CUSTOMER_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_NAME varchar(255) DEFAULT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) NOT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  AGE smallint DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(20) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(20) DEFAULT NULL,
  SUB_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_TYPE varchar(100) DEFAULT NULL,
  CATEGORY varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  NATIONALITY varchar(20) DEFAULT NULL COMMENT 'specific to 9M capture the customer nationality',
  MAIDEN_NAME varchar(100) DEFAULT NULL COMMENT 'To capture maiden name of customers Mother/Father',
  PREFERRED_COMMUNICATION_CHANNEL varchar(25) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AGENT_CODE varchar(150) DEFAULT NULL,
  ACCOUNT_MANAGER varchar(150) DEFAULT NULL,
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  PAYMENT_LIABILITY char(1) NOT NULL DEFAULT 'Y',
  IS_B2B char(1) DEFAULT NULL,
  IS_TDS_APP char(1) DEFAULT 'N',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REASON_CODE smallint DEFAULT NULL,
  BLACKLIST_DATE date DEFAULT NULL,
  BLACKLIST_REASONS varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUSTOMR_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ID)
) ;

/* SQLINES DEMO *** for table stg_customer_master_details */

CREATE TABLE stg_customer_master_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '91',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SCMD_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SCMD_FK1 ON stg_customer_master_details (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_master_hist */

CREATE TABLE stg_customer_master_hist (
  HIST_RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_CODE varchar(30) NOT NULL,
  TNT_CUSTOMER_ID varchar(25) DEFAULT NULL,
  CUSTOMER_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_NAME varchar(255) DEFAULT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) NOT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  AGE smallint DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(20) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(20) DEFAULT NULL,
  SUB_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_TYPE varchar(100) DEFAULT NULL,
  CATEGORY varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  NATIONALITY varchar(20) DEFAULT NULL COMMENT 'specific to 9M capture the customer nationality',
  PREFERRED_COMMUNICATION_CHANNEL varchar(25) DEFAULT NULL,
  PREFERRED_LANGUAGE varchar(50) DEFAULT NULL,
  AGENT_CODE varchar(150) DEFAULT NULL,
  ACCOUNT_MANAGER varchar(150) DEFAULT NULL,
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  PAYMENT_LIABILITY char(1) NOT NULL DEFAULT 'Y',
  IS_B2B char(1) DEFAULT NULL,
  IS_TDS_APP char(1) DEFAULT 'N',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REASON_CODE smallint DEFAULT NULL,
  BLACKLIST_DATE date DEFAULT NULL,
  BLACKLIST_REASONS varchar(255) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  EXTERNAL_ID_1 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_2 varchar(100) DEFAULT NULL,
  EXTERNAL_ID_3 varchar(100) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_CUSTOMR_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (HIST_RECORD_ID),
  CONSTRAINT SCM_HIS_UK1 UNIQUE (CUSTOMER_ID,EFFECTIVE_FROM)
)  ;

ALTER SEQUENCE stg_customer_master_hist_seq RESTART WITH 2;

CREATE INDEX idx_customer_type ON stg_customer_master_hist (CUSTOMER_TYPE);
CREATE INDEX idx_customer_fn ON stg_customer_master_hist (FIRST_NAME);
CREATE INDEX idx_customer_ln ON stg_customer_master_hist (LAST_NAME);
CREATE INDEX idx_customer_org ON stg_customer_master_hist (ORGANIZATION_NAME);
CREATE INDEX idx_cust_e_from ON stg_customer_master_hist (EFFECTIVE_FROM);
CREATE INDEX idx_cust_e_to ON stg_customer_master_hist (EFFECTIVE_TO);
CREATE INDEX idx_cust_status ON stg_customer_master_hist (STATUS);
CREATE INDEX idx_cust_id ON stg_customer_master_hist (CUSTOMER_ID);
CREATE INDEX idx_tnt_id ON stg_customer_master_hist (TENANT_ID);
CREATE INDEX idx_pntr_id ON stg_customer_master_hist (PARTNER_ID);
CREATE INDEX idx_cust_code ON stg_customer_master_hist (CUSTOMER_CODE);

/* SQLINES DEMO *** for table stg_customer_partner_mapping */

CREATE TABLE stg_customer_partner_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint NOT NULL,
  PARTNER_NODE_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_BRANCH_ID bigint NOT NULL DEFAULT '-1',
  PARTNER_TYPE_ID bigint DEFAULT '-1',
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT STG_CPM_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX STG_CPM_FK1 ON stg_customer_partner_mapping (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_customer_plans_accumulated_charges */

CREATE TABLE stg_customer_plans_accumulated_charges (
  RECORD_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  PLAN_ID int NOT NULL,
  PLAN_TYPE varchar(15) DEFAULT NULL,
  CHARGE_ID bigint NOT NULL,
  ACCUMULATED_CHARGES decimal(7,2) DEFAULT NULL,
  LAST_TRANSACTION_ID bigint DEFAULT NULL,
  LAST_TRANSACTION_DATE date DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (RECORD_ID),
  CONSTRAINT SCPBC_UK1 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,PLAN_ID,CHARGE_ID)
) ;

/* SQLINES DEMO *** for table stg_customer_segments */

CREATE TABLE stg_customer_segments (
  CUST_SEG_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  CUSTOMER_ID bigint NOT NULL,
  SEGMENT varchar(255) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUST_SEG_ID),
  CONSTRAINT CUST_SEG_UK1 UNIQUE (CUSTOMER_ID,SEGMENT),
  CONSTRAINT SCS_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
)  ;

ALTER SEQUENCE stg_customer_segments_seq RESTART WITH 13922;

/* SQLINES DEMO *** for table stg_customer_shp_cart */

CREATE TABLE stg_customer_shp_cart (
  CART_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  PAYMENT_ID bigint DEFAULT NULL,
  OTHER_DETAILS json DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  CREATED_DATE timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY varchar(100) DEFAULT NULL,
  MODIFIED_DATE timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(100) DEFAULT NULL,
  PRIMARY KEY (CART_ID),
  CONSTRAINT SCSC_UK1 UNIQUE (CART_ID,CUSTOMER_ID,CUSTOMER_ACCOUNT_ID)
,
  CONSTRAINT SCSC_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX SCSC_FK1 ON stg_customer_shp_cart (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_multi_subscriber_plan */

CREATE TABLE stg_multi_subscriber_plan (
  MSP_RECORD_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SHARE_TYPE smallint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MSP_RECORD_ID)
,
  CONSTRAINT SMSP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SMSP_FK1 ON stg_multi_subscriber_plan (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_multi_subscriber_plan_mapping */

CREATE TABLE stg_multi_subscriber_plan_mapping (
  MAPPING_RECORD_ID bigint NOT NULL,
  MSP_RECORD_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (MAPPING_RECORD_ID),
  CONSTRAINT SMSPM_UK1 UNIQUE (MAPPING_RECORD_ID,EFFECTIVE_FROM)
,
  CONSTRAINT SMSPM_FK1 FOREIGN KEY (MSP_RECORD_ID) REFERENCES stg_multi_subscriber_plan (MSP_RECORD_ID)
) ;

CREATE INDEX SMSPM_FK1 ON stg_multi_subscriber_plan_mapping (MSP_RECORD_ID);

/* SQLINES DEMO *** for table stg_multi_subscriber_plan_share */

CREATE TABLE stg_multi_subscriber_plan_share (
  SHARE_RECORD_ID bigint NOT NULL,
  MAPPING_RECORD_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SHARE_VALUE decimal(7,2) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  APPROVED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (SHARE_RECORD_ID)
,
  CONSTRAINT SMSPS_FK1 FOREIGN KEY (MAPPING_RECORD_ID) REFERENCES stg_multi_subscriber_plan_mapping (MAPPING_RECORD_ID)
) ;

CREATE INDEX SMSPS_FK1 ON stg_multi_subscriber_plan_share (MAPPING_RECORD_ID);

/* SQLINES DEMO *** for table stg_opportunities */

CREATE TABLE stg_opportunities (
  OPPORTUNITY_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint DEFAULT NULL,
  NODE_ID bigint DEFAULT NULL,
  BILLING_ACCOUNT_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  TNT_OPP_ID varchar(25) DEFAULT NULL,
  OPP_NAME varchar(100) DEFAULT NULL,
  OPP_REVENUE_AMOUNT decimal(12,2) DEFAULT '0.00' COMMENT 'expected revenue',
  OPP_TYPE varchar(100) DEFAULT NULL,
  EXP_CLOSURE_DATE date DEFAULT NULL,
  LEAD_SOURCE varchar(100) DEFAULT NULL,
  OPP_CONTR_MONTHS int DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  REMARKS text,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_OPPORTUNITY_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (OPPORTUNITY_ID)
,
  CONSTRAINT SOPP_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SOPP_FK1 ON stg_opportunities (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_opportunities_account_mapping */

CREATE TABLE stg_opportunities_account_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint NOT NULL,
  OPPORTUNITY_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL DEFAULT '9999-12-31 23:59:59',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) NOT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SOAM_FK1 FOREIGN KEY (OPPORTUNITY_ID) REFERENCES stg_opportunities (OPPORTUNITY_ID)
) ;

CREATE INDEX SOAM_FK1 ON stg_opportunities_account_mapping (OPPORTUNITY_ID);

/* SQLINES DEMO *** for table stg_opportunity_details */

CREATE TABLE stg_opportunity_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  OPPORTUNITY_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SOPPD_FK1 FOREIGN KEY (OPPORTUNITY_ID) REFERENCES stg_opportunities (OPPORTUNITY_ID)
) ;

CREATE INDEX SOPPD_FK1 ON stg_opportunity_details (OPPORTUNITY_ID);

/* SQLINES DEMO *** for table stg_payment_details */

CREATE TABLE stg_payment_details (
  PYMT_DETAIL_ID bigint NOT NULL,
  PAYMENT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  PAYMENT_MODE varchar(100) NOT NULL,
  PAYMENT_AMOUNT decimal(10,5) DEFAULT NULL,
  PAYMENT_REFERENCE_NO varchar(100) DEFAULT NULL,
  CARD_NUMBER varchar(25) DEFAULT NULL,
  CARD_TYPE varchar(50) DEFAULT NULL,
  INSTRUMENT_NO int DEFAULT NULL,
  INSTRUMENT_DATE date DEFAULT NULL,
  INSTRUMENT_BANK varchar(100) DEFAULT NULL,
  INSTRUMENT_BRANCH varchar(200) DEFAULT NULL,
  INSTRUMENT_BANK_UNIQUE_CODE varchar(100) DEFAULT NULL,
  INSTRUMENT_DEPOSITED_DATE date DEFAULT NULL,
  INSTRUMENT_CLEARED_DATE date DEFAULT NULL,
  PG_REFERENCE_NUMBER varchar(100) DEFAULT NULL,
  PG_REQUEST_DATE timestamp(0) DEFAULT NULL,
  PG_RESPONSE text,
  PG_RESPONSE_DATE timestamp(0) DEFAULT NULL,
  REMARKS text,
  PRIMARY KEY (PYMT_DETAIL_ID)
,
  CONSTRAINT STG_PMNTS_DTLS_FK1 FOREIGN KEY (PAYMENT_ID) REFERENCES stg_payments (PAYMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX PYMT_DETAIL_ID ON stg_payment_details (PYMT_DETAIL_ID);
CREATE INDEX STG_PMNTS_DTLS_FK1 ON stg_payment_details (PAYMENT_ID);

/* SQLINES DEMO *** for table stg_payments */

CREATE TABLE stg_payments (
  PAYMENT_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  BILLING_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  PAYMENT_REFERENCE_NO varchar(100) NOT NULL,
  TNT_PAYMENT_ID varchar(25) DEFAULT NULL,
  PAYMENT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  CURRENCY varchar(70) DEFAULT NULL,
  PAYMENT_CREATION_DATE timestamp(0) DEFAULT NULL,
  PROVIDED_PAYMENT_DATE timestamp(0) DEFAULT NULL,
  PAYMENT_RECEIVED_DATE date DEFAULT NULL,
  PAYMENT_MODE varchar(100) NOT NULL,
  PAYMENT_FOR varchar(255) DEFAULT NULL,
  PAYMENT_REMARKS text,
  RELATED_AUTO_DEBIT_FILE_ID int DEFAULT NULL,
  REL_AD_RETURN_FILE_ID int DEFAULT NULL,
  EXT_PAYMENT_REF varchar(20) DEFAULT NULL,
  PAYMENT_STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (PAYMENT_ID)
,
  CONSTRAINT stg_pymnts_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX stg_pymnts_FK1 ON stg_payments (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_prepaid_balances */

CREATE TABLE stg_prepaid_balances (
  BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL DEFAULT '0',
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_RENEWED_DATE date DEFAULT NULL,
  PLAN_END_DATE date NOT NULL,
  USAGE_ALLOCATED decimal(10,2) NOT NULL DEFAULT '0.00',
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_BALANCE_DATE date DEFAULT NULL,
  ACCOUNT_USED_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  FROM_ACCOUNT_BALANCE timestamp(0) DEFAULT NULL,
  FROM_PLAN_BALANCE timestamp(0) DEFAULT NULL,
  LAST_BALANCE_CREDIT_DATE timestamp(0) DEFAULT NULL,
  LAST_BALANCE_CREDIT_TANSACTION_ID bigint DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT int DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT int DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REMAINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) NOT NULL DEFAULT '0.00',
  LAST_BALANCE_DEBIT_TANSACTION_ID bigint DEFAULT NULL,
  LAST_BALANCE_DEBIT_DATE timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_PRE_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (BALANCE_ID),
  CONSTRAINT CUSTOMER_ID_2 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,SERVICE_PACKAGE_ID,PLAN_START_DATE)
,
  CONSTRAINT SPB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX SPB_FK1 ON stg_prepaid_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_related_parties */

CREATE TABLE stg_related_parties (
  RELATIONSHIP_ID bigint NOT NULL,
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  RELATED_CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  ROLE_ID int NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '11',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  APPROVED_BY varchar(50) DEFAULT NULL,
  APPROVED_ON timestamp(0) DEFAULT NULL,
  PRIMARY KEY (RELATIONSHIP_ID)
,
  CONSTRAINT SRP_FK1 FOREIGN KEY (ROLE_ID) REFERENCES partyroles (ROLE_ID),
  CONSTRAINT SRP_FK2 FOREIGN KEY (CUSTOMER_ID) REFERENCES stg_customer_master (CUSTOMER_ID)
) ;

CREATE INDEX SRP_FK1 ON stg_related_parties (ROLE_ID);
CREATE INDEX SRP_FK2 ON stg_related_parties (CUSTOMER_ID);

/* SQLINES DEMO *** for table stg_service_level_details */

CREATE TABLE stg_service_level_details (
  RECORD_ID int NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL DEFAULT '-1',
  SERVICE_ID bigint NOT NULL,
  WORK_ORDER_ID bigint DEFAULT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_NAME varchar(200) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table stg_usage_balances */

CREATE TABLE stg_usage_balances (
  USAGE_BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL DEFAULT '0',
  CUSTOMER_ACCOUNT_TYPE varchar(15) NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  SERVICE_ID int NOT NULL,
  ZONE_TYPE_ID int DEFAULT NULL,
  CALL_TYPE_ID int DEFAULT NULL,
  CALL_DIRECTION_ID int DEFAULT NULL,
  TIME_PLAN_DAY_ID int DEFAULT NULL,
  PERIOD_TYPE_ID int DEFAULT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_END_DATE date NOT NULL,
  RENEWAL_DATE date DEFAULT NULL,
  USAGE_UOM smallint NOT NULL,
  ALLOCATED_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  USAGE_BALANCE_LAST_UPDATE_DATE date DEFAULT NULL,
  USAGE_BALANCE_LAST_TRANSACTION_ID bigint DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REAMINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) DEFAULT '0.00',
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_USAGE_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (USAGE_BALANCE_ID),
  CONSTRAINT SUB_UK1 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,SERVICE_ID,ZONE_TYPE_ID,CALL_TYPE_ID,CALL_DIRECTION_ID,PERIOD_TYPE_ID,TIME_PLAN_DAY_ID,SERVICE_PACKAGE_ID,PLAN_START_DATE)
,
  CONSTRAINT SUB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX SUB_FK1 ON stg_usage_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_work_order_details */

CREATE TABLE stg_work_order_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT SWD_FK1 FOREIGN KEY (WORK_ORDER_ID) REFERENCES stg_work_orders (WORK_ORDER_ID)
) ;

CREATE INDEX SWD_FK1 ON stg_work_order_details (WORK_ORDER_ID);

/* SQLINES DEMO *** for table stg_work_orders */

CREATE TABLE stg_work_orders (
  WORK_ORDER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  TNT_WORK_ORDER_ID varchar(50) DEFAULT NULL,
  CUSTOMER_ID bigint DEFAULT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  ACTIVITY_ID int DEFAULT NULL,
  CAF_NO varchar(25) DEFAULT NULL,
  ACTION_ID smallint DEFAULT NULL,
  PAYMENT_ID bigint DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  RESOURCE_DETAIL_ID bigint DEFAULT NULL,
  PRIORITY_GROUP_ID int NOT NULL DEFAULT '0',
  WO_CREATION_DATE timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  WO_TARGET_EXEC_DATE date DEFAULT NULL,
  WO_PICKED_DATE timestamp(0) DEFAULT NULL,
  WO_COMPLETION_DATE timestamp(0) DEFAULT NULL,
  NOTIFICATION_AGENT char(1) DEFAULT NULL,
  REMARKS text,
  SLA_APPLICABLE char(1) DEFAULT NULL,
  SLA_MET char(1) DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (WORK_ORDER_ID)
,
  CONSTRAINT SWO_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES stg_customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX SWO_FK1 ON stg_work_orders (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table stg_work_orders_item_charges */

CREATE TABLE stg_work_orders_item_charges (
  WO_CHARGE_REC_ID bigint NOT NULL,
  WO_ITEM_DETAIL_ID bigint NOT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  IS_CHG_OVERRIDEN smallint NOT NULL DEFAULT '0',
  OVERRIDEN_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  TAX_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  TOTAL_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  PRIMARY KEY (WO_CHARGE_REC_ID)
,
  CONSTRAINT SWOIC_FK1 FOREIGN KEY (WO_ITEM_DETAIL_ID) REFERENCES stg_work_orders_item_details (WO_ITEM_DETAIL_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SWOIC_FK1 ON stg_work_orders_item_charges (WO_ITEM_DETAIL_ID);

/* SQLINES DEMO *** for table stg_work_orders_item_details */

CREATE TABLE stg_work_orders_item_details (
  WO_ITEM_DETAIL_ID bigint NOT NULL,
  WO_ITEM_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  LOB_ID bigint NOT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  COMPLETION_DATE_TIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (WO_ITEM_DETAIL_ID)
,
  CONSTRAINT SWOID_FK1 FOREIGN KEY (WO_ITEM_ID) REFERENCES stg_work_orders_items (WO_ITEM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SWOID_FK1 ON stg_work_orders_item_details (WO_ITEM_ID);

/* SQLINES DEMO *** for table stg_work_orders_items */

CREATE TABLE stg_work_orders_items (
  WO_ITEM_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  RATE_PLAN_TYPE varchar(30) DEFAULT NULL,
  COMPLETION_DATE_TIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (WO_ITEM_ID)
,
  CONSTRAINT SWOI_FK1 FOREIGN KEY (WORK_ORDER_ID) REFERENCES stg_work_orders (WORK_ORDER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX SWOI_FK1 ON stg_work_orders_items (WORK_ORDER_ID);

/* SQLINES DEMO *** for table suspense_payment_mapping */

CREATE TABLE suspense_payment_mapping (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  RESOURCE_ID bigint DEFAULT NULL,
  SUSPENSE_PAYMENT_ID bigint DEFAULT NULL,
  RATE_PLAN_ID int DEFAULT NULL,
  CUSTOMER_NAME varchar(150) DEFAULT NULL,
  CUSTOMER_MOBILE varchar(15) DEFAULT NULL,
  CUSTOMER_EMAIL varchar(150) DEFAULT NULL,
  CUSTOMER_ADDRESS text,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(100) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT suspense_payment_mapping_ibfk_1 FOREIGN KEY (SUSPENSE_PAYMENT_ID) REFERENCES suspense_payments (RECORD_ID)
) ;

CREATE INDEX SUSPENSE_PAYMENT_ID ON suspense_payment_mapping (SUSPENSE_PAYMENT_ID);
CREATE INDEX RESOURCE_RELATED_ID ON suspense_payment_mapping (RESOURCE_ID);

/* SQLINES DEMO *** for table suspense_payments */

CREATE TABLE suspense_payments (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TENANT_ID bigint NOT NULL,
  PAYMENT_REF_NO varchar(20) NOT NULL,
  PAYMENT_AMOUNT decimal(10,2) NOT NULL DEFAULT '0.00',
  CURRENCY int NOT NULL,
  PAYMENT_CREATION_DATE timestamp(0) NOT NULL,
  PAYMENT_RECEIVED_DATE timestamp(0) DEFAULT NULL,
  PAYMENT_MODE int NOT NULL,
  PAYMENT_SUB_MODE int NOT NULL DEFAULT '-1',
  PAYMENT_PG_ID varchar(100) NOT NULL,
  PAYMENT_PG_REFERENCE varchar(20) DEFAULT NULL,
  PAYMENT_FOR int NOT NULL,
  REFERENCE_ID int DEFAULT NULL,
  PAYMENT_DETAIL_OBJECT text,
  PAYMENT_REMARKS text,
  ASSIGNED_CUSTOMER_ID bigint DEFAULT NULL,
  ASSIGNED_NODE_ID bigint DEFAULT NULL,
  ASSIGNED_BILL_ACCOUNT_ID bigint DEFAULT NULL,
  ASSIGNED_CUST_ACCOUNT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RECORD_ID)
)  ;

ALTER SEQUENCE suspense_payments_seq RESTART WITH 10;

/* SQLINES DEMO *** for table tmp_cust_address */

CREATE TABLE tmp_cust_address (
  ADDRESS_ID bigint NOT NULL,
  ADDRESS_TYPE varchar(255) DEFAULT NULL,
  ADDRESS_LINE1 varchar(255) DEFAULT NULL,
  ADDRESS_LINE2 varchar(255) DEFAULT NULL,
  ADDRESS_LOCALTY varchar(150) DEFAULT NULL,
  ADDRESS_VILLAGE_ID int DEFAULT NULL,
  ADDRESS_MANDAL_ID int DEFAULT NULL,
  ADDRESS_DISTRICT_ID int DEFAULT NULL,
  ADDRESS_CITY_ID int DEFAULT NULL,
  ADDRESS_CITY varchar(100) DEFAULT NULL,
  ADDRESS_STATE_ID int DEFAULT NULL,
  ADDRESS_STATE varchar(100) DEFAULT NULL,
  ADDRESS_ZIPCODE varchar(10) DEFAULT NULL,
  ADDRESS_COUNTRY_ID int DEFAULT NULL,
  ADDRESS_COUNTRY varchar(100) DEFAULT NULL,
  REGION_ID int DEFAULT NULL,
  REGION varchar(255) DEFAULT NULL,
  TIER_ID int DEFAULT NULL,
  TIER varchar(255) DEFAULT NULL,
  PHONE varchar(15) DEFAULT NULL,
  FAX varchar(15) DEFAULT NULL,
  LATTITUDE decimal(10,6) DEFAULT '0.000000',
  LONGITUDE decimal(10,6) DEFAULT '0.000000',
  ALTITUDE decimal(10,6) DEFAULT '0.000000',
  ADDRESS_LEVEL varchar(10) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) DEFAULT NULL,
  EFFECTIVE_TO timestamp(0) DEFAULT NULL,
  CUSTOMER_ID bigint DEFAULT NULL,
  STATUS smallint DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (ADDRESS_ID)
) ;

/* SQLINES DEMO *** for table tmp_cust_contacts */

CREATE TABLE tmp_cust_contacts (
  CONTACT_ID bigint NOT NULL,
  CONTACT_TYPE varchar(255) NOT NULL,
  CONTACT_NAME varchar(255) DEFAULT NULL,
  CONTACT_DESIGNATION varchar(255) DEFAULT NULL,
  PRIMARY_EMAIL varchar(100) DEFAULT NULL,
  ALTERNATE_EMAIL varchar(100) DEFAULT NULL,
  PRIMARY_MOBILE varchar(15) DEFAULT NULL,
  ALTERNATE_MOBILE varchar(15) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) NOT NULL,
  EFFECTIVE_TO timestamp(0) NOT NULL,
  CONTACT_LEVEL varchar(10) DEFAULT NULL,
  CUSTOMER_ID bigint NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CONTACT_ID,EFFECTIVE_FROM)
) ;

/* SQLINES DEMO *** for table tmp_cust_master */

CREATE TABLE tmp_cust_master (
  CUSTOMER_ID bigint NOT NULL,
  TENANT_ID bigint DEFAULT NULL,
  PARTNER_ID bigint DEFAULT NULL,
  CUSTOMER_CODE varchar(30) NOT NULL,
  CUSTOMER_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_NAME varchar(255) DEFAULT NULL,
  FIRST_NAME varchar(100) DEFAULT NULL,
  MIDDLE_NAME varchar(100) DEFAULT NULL,
  LAST_NAME varchar(100) DEFAULT NULL,
  FATHER_NAME varchar(100) DEFAULT NULL,
  TITLE varchar(10) DEFAULT NULL,
  GENDER varchar(10) DEFAULT NULL,
  DATE_OF_BIRTH date DEFAULT NULL,
  AGE smallint DEFAULT NULL,
  CUSTOMER_ID_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ID_PROOF varchar(20) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF_TYPE varchar(50) DEFAULT NULL,
  CUSTOMER_ADDRESS_PROOF varchar(20) DEFAULT NULL,
  SUB_TYPE varchar(50) DEFAULT NULL,
  ORGANIZATION_TYPE varchar(100) DEFAULT NULL,
  CATEGORY varchar(50) DEFAULT NULL,
  REGION varchar(30) DEFAULT NULL,
  PREFERRED_COMMUNICATION_CHANNEL varchar(25) DEFAULT NULL,
  AGENT_CODE varchar(150) DEFAULT NULL,
  ACCOUNT_MANAGER varchar(150) DEFAULT NULL,
  PREVIOUS_OPERATOR varchar(150) DEFAULT NULL,
  PAYMENT_LIABILITY char(1) NOT NULL DEFAULT 'Y',
  IS_B2B char(1) DEFAULT NULL,
  EFFECTIVE_FROM timestamp(0) DEFAULT NULL,
  EFFECTIVE_TO timestamp(0) DEFAULT NULL,
  REASON_CODE smallint DEFAULT NULL,
  BLACKLIST_DATE date DEFAULT NULL,
  BLACKLIST_REASONS varchar(255) DEFAULT NULL,
  STATUS smallint DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ID),
  CONSTRAINT CUSTOMER_CODE UNIQUE (CUSTOMER_CODE)
) ;

/* SQLINES DEMO *** for table tmp_cust_segments */

CREATE TABLE tmp_cust_segments (
  CUSTOMER_ID bigint NOT NULL,
  SEGMENT varchar(255) NOT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ID,SEGMENT)
) ;

/* SQLINES DEMO *** for table transaction_otps */

CREATE TABLE transaction_otps (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  TRANSACTION_ID bigint NOT NULL,
  TRANSACTION_TYPE varchar(150) NOT NULL,
  TRANSACTION_OTP text NOT NULL,
  EFFECTIVE_FROM timestamp(0) DEFAULT NULL,
  EFFECTIVE_TO timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT TRANS_OTP_FK1 FOREIGN KEY (TRANSACTION_ID) REFERENCES customer_transactions (TRANSACTION_ID)
) ;

CREATE INDEX TRANS_OTP_FK1 ON transaction_otps (TRANSACTION_ID);

/* SQLINES DEMO *** for table usage_balances */

CREATE TABLE usage_balances (
  USAGE_BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(15) NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  SERVICE_ID int NOT NULL,
  ZONE_TYPE_ID int DEFAULT NULL,
  CALL_TYPE_ID int DEFAULT NULL,
  CALL_DIRECTION_ID int DEFAULT NULL,
  TIME_PLAN_DAY_ID int DEFAULT NULL,
  PERIOD_TYPE_ID int DEFAULT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_END_DATE date NOT NULL,
  RENEWAL_DATE date DEFAULT NULL,
  USAGE_UOM int check (USAGE_UOM > 0) NOT NULL,
  ALLOCATED_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  USAGE_BALANCE_LAST_UPDATE_DATE date DEFAULT NULL,
  USAGE_BALANCE_LAST_TRANSACTION_ID bigint DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REAMINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) DEFAULT '0.00',
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MIG_USAGE_BAL_ID varchar(100) DEFAULT NULL,
  PRIMARY KEY (USAGE_BALANCE_ID),
  CONSTRAINT UB_UK1 UNIQUE (CUSTOMER_ID,CUSTOMER_ACCOUNT_ID,RATE_PLAN_ID,SERVICE_ID,ZONE_TYPE_ID,CALL_TYPE_ID,CALL_DIRECTION_ID,PERIOD_TYPE_ID,TIME_PLAN_DAY_ID,SERVICE_PACKAGE_ID,PLAN_START_DATE)
,
  CONSTRAINT UB_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX UB_FK1 ON usage_balances (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table usage_balances_hist */

CREATE TABLE usage_balances_hist (
  RECORD_ID bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
  USAGE_BALANCE_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  CUSTOMER_ID bigint NOT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_TYPE varchar(15) NOT NULL,
  RATE_PLAN_ID int NOT NULL,
  SERVICE_PACKAGE_ID int NOT NULL,
  SERVICE_ID int NOT NULL,
  ZONE_TYPE_ID int DEFAULT NULL,
  CALL_TYPE_ID int DEFAULT NULL,
  CALL_DIRECTION_ID int DEFAULT NULL,
  TIME_PLAN_DAY_ID int DEFAULT NULL,
  PERIOD_TYPE_ID int DEFAULT NULL,
  PLAN_START_DATE date NOT NULL,
  PLAN_END_DATE date NOT NULL,
  RENEWAL_DATE date DEFAULT NULL,
  USAGE_UOM int NOT NULL,
  ALLOCATED_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  REMAINING_USAGE_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  USAGE_BALANCE_LAST_UPDATE_DATE date DEFAULT NULL,
  USAGE_BALANCE_LAST_TRANSACTION_ID bigint DEFAULT NULL,
  ROLL_OVER_ALLOWED char(1) DEFAULT NULL,
  ROLL_OVER_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_MAX_LIMIT decimal(10,2) DEFAULT NULL,
  ROLL_OVER_PERIOD int DEFAULT '0',
  ROLL_OVER_PERIOD_UNIT int DEFAULT '0',
  ROLL_OVER_END_DATE date DEFAULT NULL,
  ROLL_OVER_BALANCE decimal(10,2) DEFAULT NULL,
  ROLL_OVER_BALANCE_USED decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_REAMINING_BALANCE decimal(10,2) NOT NULL DEFAULT '0.00',
  ROLL_OVER_BALANCE_EXPIRED decimal(10,2) DEFAULT '0.00',
  ROLL_OVER_BALANCE_LOST decimal(10,2) DEFAULT '0.00',
  LAST_PAYMENT_ID bigint DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '0',
  RECORD_MOVED_DATE date NOT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  PRIMARY KEY (RECORD_ID)
) ;

/* SQLINES DEMO *** for table work_order_details */

CREATE TABLE work_order_details (
  RECORD_ID int NOT NULL,
  TENANT_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  FUNCTION_ATTR_ID bigint NOT NULL,
  ATTR_CODE varchar(20) NOT NULL,
  ATTR_VALUE varchar(100) NOT NULL,
  EFFECTIVE_FROM date NOT NULL,
  EFFECTIVE_TO date NOT NULL DEFAULT '9999-12-31',
  STATUS smallint NOT NULL DEFAULT '13',
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_ON timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP /* ON UPDATE CURRENT_TIMESTAMP */,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  PRIMARY KEY (RECORD_ID)
,
  CONSTRAINT WD_FK1 FOREIGN KEY (WORK_ORDER_ID) REFERENCES work_orders (WORK_ORDER_ID)
) ;

CREATE INDEX WD_FK1 ON work_order_details (WORK_ORDER_ID);

/* SQLINES DEMO *** for table work_orders */

CREATE TABLE work_orders (
  WORK_ORDER_ID bigint NOT NULL,
  TENANT_ID bigint NOT NULL DEFAULT '10001',
  PARTNER_ID bigint NOT NULL DEFAULT '-1',
  TNT_WORK_ORDER_ID varchar(50) DEFAULT NULL,
  CUSTOMER_ID bigint DEFAULT NULL,
  NODE_ID bigint DEFAULT NULL,
  CUSTOMER_ACCOUNT_ID bigint DEFAULT NULL,
  ACTIVITY_ID int DEFAULT NULL,
  CAF_NO varchar(25) DEFAULT NULL,
  ACTION_ID smallint DEFAULT NULL,
  PAYMENT_ID bigint DEFAULT NULL,
  REQUEST_ID bigint DEFAULT NULL,
  RESOURCE_DETAIL_ID bigint DEFAULT NULL,
  PRIORITY_GROUP_ID int NOT NULL DEFAULT '0',
  WO_CREATION_DATE timestamp(0) DEFAULT CURRENT_TIMESTAMP,
  WO_TARGET_EXEC_DATE date DEFAULT NULL,
  WO_PICKED_DATE timestamp(0) DEFAULT NULL,
  WO_COMPLETION_DATE timestamp(0) DEFAULT NULL,
  NOTIFICATION_AGENT char(1) DEFAULT NULL,
  REMARKS text,
  SLA_APPLICABLE char(1) DEFAULT NULL,
  SLA_MET char(1) DEFAULT NULL,
  STATUS smallint DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_ON timestamp(0) DEFAULT NULL,
  CREATED_IPADDR varchar(100) DEFAULT NULL,
  MODIFIED_BY varchar(50) DEFAULT NULL,
  MODIFIED_ON timestamp(0) DEFAULT NULL,
  MODIFIED_IPADDR varchar(100) DEFAULT NULL,
  MIG_WORK_ORDER_ID varchar(100)  DEFAULT NULL,
  PRIMARY KEY (WORK_ORDER_ID)
,
  CONSTRAINT WO_FK1 FOREIGN KEY (CUSTOMER_ACCOUNT_ID) REFERENCES customer_accounts (CUSTOMER_ACCOUNT_ID)
) ;

CREATE INDEX IDX_WO_1 ON work_orders (CUSTOMER_ID);
CREATE INDEX IDX_WO_2 ON work_orders (CREATED_ON);
CREATE INDEX IDX_WO_3 ON work_orders (ACTIVITY_ID);
CREATE INDEX IDX_WO_4 ON work_orders (REQUEST_ID);
CREATE INDEX IDX_WO_5 ON work_orders (CUSTOMER_ACCOUNT_ID);

/* SQLINES DEMO *** for table work_orders_item_charges */

CREATE TABLE work_orders_item_charges (
  WO_CHARGE_REC_ID bigint NOT NULL,
  WO_ITEM_DETAIL_ID bigint NOT NULL,
  CHARGE_ID bigint NOT NULL,
  CHARGE_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  IS_CHG_OVERRIDEN smallint NOT NULL DEFAULT '0',
  OVERRIDEN_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  TAX_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  TOTAL_AMOUNT decimal(10,5) NOT NULL DEFAULT '0.00000',
  PRIMARY KEY (WO_CHARGE_REC_ID)
,
  CONSTRAINT WOIC_FK1 FOREIGN KEY (WO_ITEM_DETAIL_ID) REFERENCES work_orders_item_details (WO_ITEM_DETAIL_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX WOIC_FK1 ON work_orders_item_charges (WO_ITEM_DETAIL_ID);

/* SQLINES DEMO *** for table work_orders_item_details */

CREATE TABLE work_orders_item_details (
  WO_ITEM_DETAIL_ID bigint NOT NULL,
  WO_ITEM_ID bigint NOT NULL,
  SERVICE_PACKAGE_ID bigint NOT NULL,
  SERVICE_ID bigint NOT NULL,
  LOB_ID bigint NOT NULL,
  RESOURCE_TYPE int DEFAULT NULL,
  RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_ID int DEFAULT NULL,
  LOGICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  PHYSICAL_RESOURCE_ID int DEFAULT NULL,
  PHYSICAL_RESOURCE_NO varchar(30) DEFAULT NULL,
  COMPLETION_DATE_TIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (WO_ITEM_DETAIL_ID)
,
  CONSTRAINT WOID_FK1 FOREIGN KEY (WO_ITEM_ID) REFERENCES work_orders_items (WO_ITEM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX WOID_FK1 ON work_orders_item_details (WO_ITEM_ID);

/* SQLINES DEMO *** for table work_orders_items */

CREATE TABLE work_orders_items (
  WO_ITEM_ID bigint NOT NULL,
  WORK_ORDER_ID bigint NOT NULL,
  CUSTOMER_ACCOUNT_ID bigint NOT NULL,
  CUSTOMER_CONTRACT_ID bigint NOT NULL,
  RATE_PLAN_ID bigint NOT NULL,
  RATE_PLAN_TYPE varchar(30) DEFAULT NULL,
  COMPLETION_DATE_TIME timestamp(0) DEFAULT NULL,
  STATUS smallint NOT NULL DEFAULT '1',
  PRIMARY KEY (WO_ITEM_ID)
,
  CONSTRAINT WOI_FK1 FOREIGN KEY (WORK_ORDER_ID) REFERENCES work_orders (WORK_ORDER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
) ;

CREATE INDEX WOI_FK1 ON work_orders_items (WORK_ORDER_ID);

/* SQLINES DEMO *** ODE=@OLD_SQL_MODE */;
/* SQLINES DEMO *** GN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/* SQLINES DEMO *** E_CHECKS=@OLD_UNIQUE_CHECKS */;
/* SQLINES DEMO *** OTES=@OLD_SQL_NOTES */;
